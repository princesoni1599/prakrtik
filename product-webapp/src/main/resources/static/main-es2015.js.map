{"version":3,"sources":["./src/app/components/seedslist/seedslist.component.ts","./src/app/components/seedslist/seedslist.component.html","./src/app/plantmodel.ts","./src/app/models/register/user-registration.ts","./src/app/components/register-user/register-user.component.ts","./src/app/components/register-user/register-user.component.html","./src/app/services/notifier.service.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile-user/profile-user.component.ts","./src/app/components/profile-user/profile-user.component.html","./src/app/product-image/product-image.component.ts","./src/app/product-image/product-image.component.html","./src/app/services/api.service.ts","./src/app/components/sellerorderlist/sellerorderlist.component.ts","./src/app/components/sellerorderlist/sellerorderlist.component.html","./src/app/components/updateseeds/updateseeds.component.ts","./src/app/components/updateseeds/updateseeds.component.html","./src/app/search-by-name.pipe.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/updatemedicines/updatemedicines.component.ts","./src/app/components/updatemedicines/updatemedicines.component.html","./src/app/components/medicines/medicines.component.ts","./src/app/components/medicines/medicines.component.html","./src/app/components/sellernavbar/sellernavbar.component.ts","./src/app/components/sellernavbar/sellernavbar.component.html","./src/app/home.service.ts","./src/app/components/userprofile/userprofile.component.ts","./src/app/components/userprofile/userprofile.component.html","./src/app/components/landingpage/landingpage.component.ts","./src/app/components/landingpage/landingpage.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/productdetails/productdetails.component.ts","./src/app/components/productdetails/productdetails.component.html","./src/app/components/seller/seller.component.ts","./src/app/components/seller/seller.component.html","./src/app/services/login/login.service.ts","./src/app/app.module.ts","./src/app/models/login/user-dao.ts","./src/app/components/sellerhomepage/sellerhomepage.component.ts","./src/app/components/sellerhomepage/sellerhomepage.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/register/register.service.ts","./src/app/components/updateproductlist/updateproductlist.component.ts","./src/app/components/updateproductlist/updateproductlist.component.html","./src/app/components/cusproductdetails/cusproductdetails.component.ts","./src/app/components/cusproductdetails/cusproductdetails.component.html","./src/app/customerhomepage/customerhomepage.component.ts","./src/app/customerhomepage/customerhomepage.component.html","./src/app/components/customerorderlist/customerorderlist.component.ts","./src/app/components/customerorderlist/customerorderlist.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\n\n\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n\n@Component({\n  selector: 'app-seedslist',\n  templateUrl: './seedslist.component.html',\n  styleUrls: ['./seedslist.component.css']\n})\nexport class SeedslistComponent implements OnInit { \n  @ViewChild('stepper') stepper: MatStepper;\nproductObject: PlantModel = new PlantModel();\nprofileFormGroup!: FormGroup;\nfiles: any[] = [];\n\n\nconstructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router ){\n\n}\n\nngOnInit(): void {\n  this.profileFormGroup= new FormGroup({\n   ownerEmailId:new FormControl(window.localStorage.getItem('loginEmail'),Validators.required),\n   shopName:new FormControl(\"\",Validators.required),\n   ownerContactNo:new FormControl(\"\",Validators.required),\n productId:new FormControl(\"\"),\n productsAvailable:new FormControl(\"\",Validators.required),\n productName:new FormControl(\"\",Validators.required),\n productPrice:new FormControl(\"\",Validators.required),\n productAddress:new FormControl(\"\",Validators.required),\n productImage:new FormControl(\"\"),\n productAge:new FormControl(\"\",Validators.required),\n sizeOfProduct:new FormControl(\"\",Validators.required),\n waterRequirement:new FormControl(\"\",Validators.required),\n sunlightRequirement:new FormControl(\"\",Validators.required),\n toxicity:new FormControl(\"\",Validators.required),\n description:new FormControl(\"\",Validators.required),\n  });\n     console.log(this.profileFormGroup.value);\n }\n OnSubmit(){\n   console.log('formValue', this.profileFormGroup.value);\n   this.productObject.productName = this.profileFormGroup.value.productName;\n   this.productObject.shopName = this.profileFormGroup.value.shopName;\n   this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n   this.productObject.ownerContactNo= this.profileFormGroup.value.ownerContactNo;\n   this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n   this.productObject.ownerEmailId= this.profileFormGroup.value.ownerEmailId;\n   this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n   this.productObject.productAge= this.profileFormGroup.value.productAge;\n   this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n   this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n   this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n   this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n   this.productObject.description= this.profileFormGroup.value.description;\n   this.productObject.productId=this.profileFormGroup.value.productId;\n\n   this.service.savePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n    this.notifierService.showNotification('Product Added Succesfully','OK')\n        this.profileFormGroup.reset();\n       \n        this.router.navigate(['/sellerhomepage/home']);\n   })\n   \n }    \n\ndays: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\nages: string[]=['null'];\n\nsunlightRequirement!: string;\nparts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                'Full shade – Plants require less than 3 hours of direct sun per day'];\n\n\nsizeOfPlant!: string;\nsizes:string[]=['NA']\n\ntoxicity!:string;\nresults:string[]=['Yes','No']\n\nurllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n\n// image input\nonFileChanged(files) {\n  this.prepareFilesList(files);\n}\nprepareFilesList(files: Array<any>) {\n  for (const item of files) {\n    item.progress = 0;\n    this.files.push(item);\n  }\n  this.uploadFilesSimulator(0);\n}\nuploadFilesSimulator(index: number) {\n  setTimeout(() => {\n    if (index === this.files.length) {\n      return;\n    } else {\n      const progressInterval = setInterval(() => {\n        if (this.files[index].progress === 100) {\n          clearInterval(progressInterval);\n          this.uploadFilesSimulator(index + 1);\n        } else {\n          this.files[index].progress += 5;\n        }\n      }, 200);\n    }\n  }, 1000);\n}\nformatBytes(bytes, decimals) {\n  if (bytes === 0) {\n    return '0 Bytes';\n  }\n  const k = 1024;\n  const dm = decimals <= 0 ? 0 : decimals || 2;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n\n\n// onSubmit(){\n//   this.service.postProduct(this.profileFormGroup.value).subscribe({\n//     next:(res)=>{\n//       console.log(res);\n//       this.notifierService.showNotification('Product Added Succesfully','OK');\n//       this.profileFormGroup.reset();\n \n//     },\n//     error:()=>{\n//       alert(\"error while adding the product\");\n//     }\n//   })\n// }\n\n}\n\n\n","<div class=\"container-fluid\">\n    <mat-horizontal-stepper >\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n           <mat-card class=\"profile\">\n                <mat-card-title>Profile of the seeds</mat-card-title>\n                <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                  <ng-template matStepLabel>Profile</ng-template>\n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Email Id</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"ownerEmailId\"\n                      required\n                    /> </mat-form-field\n                  >\n  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Shop Name</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"shopName\" required\n                      \n                    /> </mat-form-field\n                  >\n  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Contact Number</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"ownerContactNo\" required\n                      \n                    /> </mat-form-field\n                  >\n                  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Quantity(.in No's)</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"productsAvailable\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Product Name</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"productName\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  \n                  <div class=\"img_container\">\n                    <div>\n                      <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                  </div>\n                  <div>\n                     \n                      <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                  </div>\n                  </div>\n                  <mat-card-actions >\n                    <button\n                      mat-raised-button\n                      color=\"primary\"\n                      style=\"margin-left:600px\"\n                       matStepperNext\n                    >\n                      Next\n                    </button>\n                  </mat-card-actions>\n                </form>\n              </mat-card>\n    \n          </mat-step>\n    \n          <!-------step 2----->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n            <mat-card class=\"profile\">\n              <mat-card-title>Requirements of seeds</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Requirements</ng-template>\n\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Product Price</mat-label>\n                  <input matInput type=\"number\" formControlName=\"productPrice\" required />\n                  <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n                </mat-form-field>\n    \n                <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                  <mat-label>Product Address</mat-label>\n                  <input matInput formControlName=\"productAddress\" required />\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label for=\"productAge\">Product Age</mat-label>\n                  <mat-select name=\"productAge\" id=\"productAge\" formControlName=\"productAge\"   >\n                    <mat-option *ngFor=\"let age of ages\" [value]=\"age\">\n                      {{age}}\n                     </mat-option>\n                  </mat-select>\n                </mat-form-field>\n\n\n                <mat-form-field appearance=\"outline\">\n                <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n                <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\" required>\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                  {{day}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n                <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\" required>\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                  {{part}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-form-field appearance=\"outline\" >\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\"   >\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n                <mat-card-actions>\n                  <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                  <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n          </mat-step>\n    \n          <!-----last step-->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n            <mat-card class=\"profile\">\n              <mat-card-title>About Seeds</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>You are almost done....</ng-template>\n                <mat-label id=\"toxicity\"\n                  >State Whether the Product is toxic to pets, kids:\n                </mat-label>\n                <mat-radio-group\n                  aria-labelledby=\"toxicity\"\n                  formControlName=\"toxicity\"\n                  class=\"example-radio-group\"\n                  [(ngModel)]=\"toxicity\">\n                  <mat-radio-button\n                    class=\"example-radio-button block\"\n                    *ngFor=\"let result of results\"\n                    [value]=\"result\"\n                    >\n                    {{ result }}\n                  </mat-radio-button>\n                </mat-radio-group>\n    \n    \n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Description of the Product</mat-label>\n                  <textarea\n                    matInput\n    \n                    rows=\"10\" col=\"50\"\n                    formControlName=\"description\" required\n                  ></textarea>\n                  <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n                </mat-form-field>\n              </form>\n              <mat-card-actions>\n                <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Submit</button>\n              </mat-card-actions>\n            </mat-card>\n          </mat-step>\n        </mat-horizontal-stepper>\n    \n    \n      </div>","export class PlantModel{\n     \n   \n    ownerEmailId:string;\n    productsAvailable:string;\n    productName:string;\n    productPrice:number;\n    productAddress:string;\n    productAge:string;\n    waterRequirement:string;\n    sunlightRequirement:string;\n    sizeOfProduct:string;\n    toxicity:string;\n    description:string;\n    productImage:any;\n    productId:string;\n    shopName:string;\n    ownerContactNo:string;\n}","export class UserRegistration {\n\n  email: String;\n  password: String;\n  userRole:String;\n  \n\n  constructor() {\n    \n    this.email = \"\";\n    this.password = \"\";\n    this.userRole = \"\";\n    \n    \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from \"../../services/register/register.service\";\nimport { UserRegistration } from \"../../models/register/user-registration\";\nimport { Validators } from \"@angular/forms\";  \nimport Swal from \"sweetalert2\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n \n} from '@angular/forms';\nimport { LoginService } from '../../services/login/login.service';\nimport { UserDao } from '../../models/login/user-dao';\nimport { Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { NotifierService } from 'src/app/services/notifier.service';\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  user: UserRegistration = new UserRegistration();\n  errorMessage1: String = \"\";\n  //private registerService: RegisterService;\n  form: FormGroup;\n  submitted = false;\n  errorMessage:string;\n  \n  //constructor(private registerService: RegisterService,private router: Router) {}\n    \n  userRole:string;\n  roles :string[]=['Buyer','Seller'];\n\n  constructor(private registerService: RegisterService,private formBuilder: FormBuilder,private loginService:LoginService,private router: Router,private snackBar:MatSnackBar, private notifier:NotifierService) {\n    this.form=new FormGroup({\n      email:new FormControl(\"\"),\n      password:new FormControl(\"\"),\n      userRole:new FormControl(\"\")\n    });\n  }\n  \n\n\n  ngOnInit() {\n  }\n  loginObj:UserDao=new UserDao();\n  \n  SaveData(): void {\n  \n\n  \n    console.log(\"FORMDATA\",this.form.value);\n    this.loginObj.email=this.form.value.email;\n    this.loginObj.password=this.form.value.password;\n    this.loginObj.userRole=this.form.value.userRole\n    this.loginService.loginUser(this.loginObj).subscribe(data=>{\n      console.log(\"validated\",data);\n      localStorage.setItem(\"loginEmail\",this.loginObj.email)\n      localStorage.setItem(\"userRole\",this.loginObj.userRole)\n     \n      if(this.form.value.userRole=='buyer'){\n        this.router.navigate(['/navbar/customerhomepage'])\n      }else if(this.form.value.userRole=='seller'){\n        this.router.navigate(['/sellerhomepage/home'])\n      }\n      this.form.reset();\n     \n    },(\n      error=>{\n        this.notifier.showNotification(\"Incorrect Email/Password\", \"Dismiss\");\n        // console.log(error);\n         this.errorMessage=error.error;\n\n      }\n      )\n      )\n      \n     }\n     SaveData1() {\n     \n      this.registerService.registerUserMySQL(this.user).subscribe(res=>{\n        console.log(this.user);\n      })\n      //console.log(this.favoriteSeason);\n      if (\n        this.user.email == \"\" ||\n        this.user.password == \"\" || this.userRole ==\"\"\n      ) {\n       \n        // this.snackBar.open( \"Fields cannot be empty!\",\"Dissmiss\");\n        this.notifier.showNotification(\"Fields cannot be empty!\",\"Dissmiss\");\n      } \n      \n       \n     \n       else {\n        this.registerService.registerUser(this.user).subscribe(\n          (data) => {\n           \n            // this.snackBar.open(\"Successfully done !!\",\"success\");\n            this.notifier.showNotification(\"Successfully done !!\",\"success\");\n          },\n          (error) =>\n           (\n            // this.snackBar.open(\"User Already Exist!\",\"error\")\n            this.notifier.showNotification(\"User Already Exist!\",\"error\")\n        ))\n      \n      }\n    } \n}","\n\n\n\n<div class=\"login-page\">\n\n  <mat-card class=\"mat-elevation-z12\">\n    <mat-card-title style=\"text-align:center;\">SignIn/SignUp</mat-card-title>\n    <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs\">\n      \n      <mat-tab label=\"Sign In\">\n          <mat-card-content>\n            <form action=\"\" [formGroup]=\"form\" #userForm1=\"ngForm\">\n              <mat-form-field>\n                <input\n                email\n                  matInput\n                  placeholder=\"Email\"\n                  required\n                  name=\"email\"\n                  formControlName=\"email\"\n                  >\n                  <mat-error *ngIf=\"email.invalid\">Email is required</mat-error>\n                <mat-icon matSuffix>email</mat-icon>\n              </mat-form-field>\n              <mat-form-field>\n                <input\n                  matInput\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  required\n                  minlength=\"6\"\n                  name=\"password\"\n                  formControlName=\"password\" \n                  >\n                  <mat-error\n                    *ngIf=\"password.errors && password.errors.required\">\n                    Password is required\n                  </mat-error>\n                  <mat-error\n                    *ngIf=\"password.errors && password.errors.minlength\">\n                    Password must be of length 6\n                  </mat-error>\n                <mat-icon matSuffix>lock</mat-icon>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input\n                \n                  matInput\n                  placeholder=\"Enter User Role (Buyer or Seller)\"\n                  required\n                  id=\"userRole\" name=\"userRole\" formControlName=\"userRole\"\n                 >\n                  <mat-error *ngIf=\"userRole.invalid\">userRole is required</mat-error>\n               \n              </mat-form-field>\n\n\n              <mat-checkbox>Remember Me!</mat-checkbox>\n              <button\n              [disabled]=\"userForm1.invalid\"\n                mat-raised-button\n                color=\"primary\"\n                class=\"login-button\"\n                (click)=\"SaveData()\">\n                Sign In\n              </button>\n\n              <button\n                mat-raised-button\n                class=\"login-button\">\n                Login with Google\n              </button>\n            </form>\n          </mat-card-content>\n      </mat-tab>\n\n\n      <!-- Sign -up -->\n      <mat-tab label=\"Sign Up\">\n        <mat-card-content>\n          <form action=\"\" #userForm=\"ngForm\">\n            \n            <mat-form-field>\n              <input\n              email\n                matInput\n                placeholder=\"Email\"\n                required\n                id=\"email\" name=\"email\" [(ngModel)]=\"user.email\" #email=\"ngModel\"\n               >\n                <mat-error *ngIf=\"email.invalid\">Email is required</mat-error>\n              <mat-icon matSuffix>email</mat-icon>\n            </mat-form-field>\n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Password\"\n                type=\"password\"\n                required\n                minlength=\"6\"\n                id=\"password\" name=\"password\"  [(ngModel)]=\"user.password\" #password=\"ngModel\"\n                >\n                <mat-error\n                  *ngIf=\"password.errors && password.errors.required\">\n                  Password is required\n                </mat-error>\n                <mat-error\n                  *ngIf=\"password.errors && password.errors.minlength\">\n                  Password must be of length 6\n                </mat-error>\n              <mat-icon matSuffix>lock</mat-icon>\n\n            </mat-form-field>\n\n\n          <mat-form-field>\n            <input\n            \n              matInput\n              placeholder=\"Enter User Role (Buyer or Seller)\"\n              required\n              id=\"userRole\" name=\"userRole\" [(ngModel)]=\"user.userRole\" #userRole=\"ngModel\"\n             >\n              <mat-error *ngIf=\"userRole.invalid\">userRole is required</mat-error>\n           \n          </mat-form-field>\n\n            \n            <button\n            [disabled]=\"userForm.invalid\"\n              mat-raised-button\n              color=\"primary\"\n              class=\"login-button\" (click)=\"SaveData1()\">\n              Sign Up\n            </button>\n\n\n          </form>\n       \n  \n        </mat-card-content>\n      </mat-tab>\n    </mat-tab-group>\n  </mat-card>\n  \n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotifierService {\n\n  constructor(private snackBar:MatSnackBar) { }\n  showNotification(displayMessage:string, buttonText:string){\n    this.snackBar.open(displayMessage,buttonText,{\n      duration:5000,\n      horizontalPosition:'center',\n      verticalPosition:'bottom', \n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HomeService } from './../../home.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder, private home:HomeService) {}\n  ngOnInit(): void {\n    this.home.saveUser(this.items).subscribe((result)=>{\n      console.warn(result);\n    })\n  }\n   items:any = [\n    { \n      name:\"Tom\", \n      price: 500},\n    { \n      name:\"ram\", \n      price: 500\n    }\n  ];\n\n\n\n\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n\n\n  onSubmit(): void {\n    // Process checkout data here\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    let x=  this.checkoutForm.value;\n\n    this.checkoutForm.reset();\n  }\n}\n","<!DOCTYPE html>\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n    <title>Homepage</title>\n</head>\n<body class=\"bg-light pt-5\">\n\n<!--hero section-->\n<section class=\"py-5\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-7 col-md-10 col-12 my-auto mx-auto text-center\">\n                <h1>\n                    Stripe Payment\n                </h1>\n                <p class=\"lead mb-4\">\n                    What would you like to do?\n                </p>\n                <a class=\"btn btn-primary\" th:href=\"@{/subscription}\">Create Recurring Subscription</a>\n                <a class=\"btn btn-success\" th:href=\"@{/charge}\">Create One-Time Charge</a>\n                <p class=\"mt-5 text-muted\">\n                </p>\n            </div>\n        </div>\n    </div>\n</section>\n\n</body>\n</html>","import { Router } from '@angular/router';\nimport { NotifierService } from './../../services/notifier.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-profile-user',\n  templateUrl: './profile-user.component.html',\n  styleUrls: ['./profile-user.component.css']\n})\n\nexport class ProfileUserComponent implements OnInit\n{\n    ngForm:FormGroup;\n\n    public getJsonValue: any;\n    public putJsonValue: any;\n    public deleteJsonValue: any;\n    public getAllJsonValue: any;\n    public postJsonValue: any;\n    email:string=window.localStorage.getItem('loginEmail');\n    constructor(private fb:FormBuilder, private notifier:NotifierService, private http:HttpClient, private service: ApiService, private route:Router){\n\n    }\n    ngOnInit(): void {\n      this.ngForm= new FormGroup({\n\n      name:new FormControl(\"\",Validators.required),\n      firstName:new FormControl(\"\",Validators.required),\n      lastName:new FormControl(\"\",Validators.required),\n      email:new FormControl(\"\",Validators.required),\n      password:new FormControl(\"\",Validators.required),\n      dob:new FormControl(\"\",Validators.required),\n      gender:new FormControl(\"\",Validators.required),\n      contactNumber:new FormControl(\"\",Validators.required),\n      userRole:new FormControl(\"\",Validators.required),\n      address:new FormControl(\"\",Validators.required),\n      \n      });\n\n   \n        this.service.getCurrentUserDetails(this.email).subscribe((data) => {\n          this.ngForm=new FormGroup({\n            name:new FormControl(data['name']),\n          firstName:new FormControl(data['firstName']),\n          lastName:new FormControl(data['lastName']), \n          email:new FormControl(data['email']),\n          password:new FormControl(data['password']),\n          userRole:new FormControl(data['userRole']),\n          dob:new FormControl(data['dob']),\n          gender:new FormControl(data['gender']),\n          contactNumber:new FormControl(data['contactNumber']),\n          address:new FormControl(data['address']),\n       \n        });\n        })\n      \n   \n      // this.getMethod();\n  };\n  \n\n  // public getMethod(){\n  //   this.http.get('http://localhost:8083/api/v1/get/').subscribe((data) => {\n  //     console.log(data);\n  //     this.getJsonValue = data;\n  //   })\n  // }\n\n  \n  \n  // Updated(){\n  //   this.notifier.showNotification('Upadated Successfully', 'ok')\n  // }\n\n\n  \n  Updated(){\n    this.service.UpdateUserDetails(this.ngForm.value,this.email).subscribe((res)=>\n    this.notifier.showNotification('Details Updated Succesfully','OK'))\n   }\n}\n\n\n\n\n\n\n\n","\n<div class=\"container\" style=\"width: 100rem;\">\n  <!-- <div class=\"text\" ><h1 style=\"font-weight: bold; width:20rem;height: 30px; color: rgb(9, 1, 1); margin-right: 45%;\">MY DASHBOARD</h1></div> -->\n  <h1>WELCOME</h1> \n  <h1>MY DASHBOARD</h1>\n  <hr>  \n  <div class=\"row\" style=\"display: block; \">\n    <form *ngIf=\"ngForm\" [formGroup]=\"ngForm\">\n        <div class=\"col-4\" style=\"display: inline-block; float: left;  height:30rem; width:40rem;align-items: flex-start; \">\n          <img src=\"../assets/profile-icon.png\" style=\"height:150px;width: 150px; margin-left:30%; margin-bottom:5px;  \"> \n          \n          <mat-form-field appearance=\"outline\" style=\"width:100%\">\n            <mat-label>Name</mat-label>\n            <input matInput class=\"plantId w-100\" formControlName=\"name\" required /> </mat-form-field>    \n            <mat-form-field appearance=\"outline\">\n              <mat-label>DOB</mat-label>\n              <input matInput formControlName=\"dob\" type=\"date\" required />\n              <!-- <input matInput formControlName=\"dob\" [matdatepicker]=\"myDatePicker\" required />\n              <mat-datepicker-toggle [for]=\"myDatePicker\" matSuffix></mat-datepicker-toggle>\n              <mat-datepicker #myDatePicker></mat-datepicker> -->\n              </mat-form-field>  \n\n        </div>\n\n        <div class=\"col-4\" style=\"display: inline-block; float: inline-start;\">\n            <mat-form-field appearance=\"outline\" >\n            <mat-label>FirstName</mat-label>\n            <input matInput class=\"plantId w-100\" formControlName=\"firstName\" required /> </mat-form-field>\n            \n            <mat-form-field appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" required /></mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n            <mat-label>Contact No.</mat-label>\n            <input matInput formControlName=\"contactNumber\" required /></mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n            <mat-label>Address</mat-label>\n            <input matInput formControlName=\"address\" required/> </mat-form-field>\n            \n        </div>\n\n        <div class=\"col-4\" style=\"display: inline-block\">\n            <mat-form-field appearance=\"outline\">\n            <mat-label>LastName</mat-label>\n            <input matInput formControlName=\"lastName\" required/> </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input matInput formControlName=\"password\" required /></mat-form-field>\n    \n            <mat-form-field appearance=\"outline\">\n            <mat-label>Gender</mat-label>\n            <!-- <input matInput formControlName=\"gender\" required /> -->\n              <mat-select formControlName=\"gender\" required>\n                <mat-option value=\"male\">Male</mat-option>\n                <mat-option value=\"female\">Female</mat-option>\n                <mat-option value=\"others\">Others</mat-option>\n              </mat-select>\n            </mat-form-field>\n        \n            <!-- <mat-form-field appearance=\"outline\">\n            <mat-label>UserRole</mat-label>\n            <input matInput formControlName=\"userRole\" required /> -->\n            <!-- <mat-select formControlName=\"userRole\" required>\n              <mat-option value=\"seller\">Seller</mat-option>\n              <mat-option value=\"buyr\">Customer</mat-option>\n            </mat-select>\n          </mat-form-field> --> \n            \n        </div>\n        <button mat-raised-button color=\"primary\" (click)=\"Updated()\">Submit</button>\n      </form>\n      \n  </div>\n</div>\n \n\n\n\n\n\n\n\n\n\n<!-- <div class=\"container\" style=\"width: 100rem;\"> -->\n    <!-- <div class=\"text\" ><h1 style=\"font-weight: bold; width:20rem;height: 30px; color: rgb(9, 1, 1); margin-right: 45%;\">MY DASHBOARD</h1></div> -->\n    <!-- <h1>WELCOME</h1>  -->\n    <!-- <h1>MY DASHBOARD</h1>\n    <hr>  \n    <div class=\"row\" style=\"display: block; \">\n      <form *ngIf=\"ngForm\" [formGroup]=\"ngForm\">\n          <div class=\"col-4\" style=\"display: inline-block; float: left;  height:30rem; width:40rem;align-items: flex-start; \">\n            <img src=\"../assets/profile-icon.png\" style=\"height:150px;width: 150px; margin-left:30%; margin-bottom:5px;  \"> \n            \n            <mat-form-field appearance=\"outline\" style=\"width:100%\"> -->\n              <!-- <mat-label>Name</mat-label>\n              <input matInput class=\"plantId w-100\" formControlName=\"Name\" required /> </mat-form-field>    \n              <mat-form-field appearance=\"outline\">\n                <mat-label>Dob</mat-label>\n                <input matInput formControlName=\"dob\" required /></mat-form-field>   \n          </div>\n    \n        \n    \n          <div class=\"col-4\" style=\"display: inline-block; float: inline-start;\">\n              <mat-form-field appearance=\"outline\" >\n              <mat-label>FirstName</mat-label>\n              <input matInput class=\"plantId w-100\" formControlName=\"fName\" required /> </mat-form-field>\n              \n              <mat-form-field appearance=\"outline\">\n              <mat-label>Email</mat-label>\n              <input matInput formControlName=\"email\" required /></mat-form-field>\n\n              <mat-form-field appearance=\"outline\">\n              <mat-label>Contact No.</mat-label>\n              <input matInput formControlName=\"contactno\" required /></mat-form-field>\n  \n              <mat-form-field appearance=\"outline\">\n              <mat-label>Address</mat-label>\n              <input matInput formControlName=\"address\" required/> </mat-form-field>\n              \n          </div>\n  \n          <div class=\"col-4\" style=\"display: inline-block; float: inline-end;\">\n              <mat-form-field appearance=\"outline\">\n              <mat-label>LastName</mat-label>\n              <input matInput formControlName=\"lName\" required/> </mat-form-field>\n  \n              <mat-form-field appearance=\"outline\">\n              <mat-label>Password</mat-label>\n              <input matInput formControlName=\"password\" required /></mat-form-field>\n      \n              <mat-form-field appearance=\"outline\">\n              <mat-label>Gender</mat-label>\n              <input matInput formControlName=\"gender\" required /></mat-form-field>\n          \n              <mat-form-field appearance=\"outline\">\n              <mat-label>UserRole</mat-label>\n              <input matInput formControlName=\"userRole\" required /></mat-form-field>\n              \n          </div>\n          <button mat-raised-button color=\"primary\" (click)=\"Updated()\">Submit</button>\n        </form>\n        \n    </div>\n  </div>\n    -->\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-product-image',\n  templateUrl: './product-image.component.html',\n  styleUrls: ['./product-image.component.css']\n})\nexport class ProductImageComponent implements OnInit {\n  @Input() public plantmodel : any;\n  retrivedImage:any\n  constructor(private _sanitizer: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this.retrivedImage=('data:image/jpg;base64,'+this.plantmodel.productImage);\n  }\n\n}\n","<img  [src]=\"retrivedImage\" alt=\"Plant_Image\" style=\"height: 150px ;width: 150px;\">\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // baseUrl = \"http://localhost:8080\";\n  baseUrl = \"https://prakritik.stackroute.io\";\n\n  details:any;\n  constructor(private http:HttpClient) { }\n  getUserByEmail(email:string)\n  {\n      return this.http.get<any>(this.baseUrl+\"/registration-service/api/v1/get/\"+email);\n  }\n  postProduct(data:any){\n    return this.http.post<any>(this.baseUrl+\"/plant-service/api/v1/addproduct\",data);\n  }\n  //post-data\n  savePlantModel(productObj:any, productImage:File){\n    const data: FormData=new FormData();\n    data.append('file',productImage);\n    data.append('plantModel', JSON.stringify(productObj));\n    return this.http.post(this.baseUrl+\"/plant-service/api/v1/addproduct\",data)\n  }\n\n    // return this.http.post<any>(\"http://localhost:3000/seller/\",data);\n\n  \n  getProduct(){\n    return this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/listofAllProduct\");\n  }\n  // putProduct(data:any,productId:string){\n  //   return this.http.put<any>(\"http://localhost:8082/api/v1/update/\"+productId,data);\n  //  }\n\n  updatePlantModel(productObj:any, productImage:File){\n    const data: FormData=new FormData();\n    data.append('file',productImage);\n    data.append('plantModel', JSON.stringify(productObj));\n    return this.http.post(this.baseUrl+\"/plant-service/api/v1/update/{productId}\",data);\n  }\n\n  putProduct(data:any,productId:string){\n    return this.http.put<any>(this.baseUrl+\"/plant-service/api/v1/update/\"+productId,data);\n   }\n\n   deleteProduct(productId:string){\n     return this.http.delete<any>(this.baseUrl+\"/plant-service/api/v1//delete/\"+productId);\n   }\n   getOrderedlist(customerEmailId:string){\n    return this.http.get<any>(this.baseUrl+\"/customer-service/api/v1/customerBookingDetails/\"+customerEmailId);\n  }\n    \n   getCurrentData(productId:string){\n    return this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/get/\"+productId);\n  }\n  // getEmailid(){\n  //   return this.http.get<any>(\"http://localhost:3000/emailid/\");\n  // }\n  getProductById(productId:string){\n    this.details =this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/get/\"+productId);\n  }\n  getProductDetails(){\n    return this.details;\n  }\n  getProductImageById(productId:string){\n    return this.details =this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/get/\"+productId);\n  }\n  postPaymentPage(data:any){\n    return this.http.post<any>(this.baseUrl+\"/payment-service/paymentData\",data);\n  }\n  getCurrentUserDetails(email:string){\n    return this.http.get<any>(this.baseUrl+\"/registration-service/api/v1/get/\"+email);\n  }\n  getSellerList(ownerEmailId:string){\n    return this.http.get<any>(this.baseUrl+\"/customer-service/api/v1/ownerProductDetail/\"+ownerEmailId);\n  }\n  CancelOrder(data:any,orderId:string){\n    return this.http.put<any>(this.baseUrl+\"/customer-service/api/v1/CancelOrder/\"+orderId,data);\n  }\n\n  getOrderedlistByorderId(orderId:string){\n    return this.http.get<any>(this.baseUrl+\"/customer-service/api/v1/getOrder/\"+orderId);\n  }\n  getPictureById(productId:string){\n     return this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/get/\"+productId);\n  }\n  UpdateUserDetails(data:any,email:string){\n  return this.http.put<any>(this.baseUrl+\"/registration-service/api/v1/update/\"+email,data) \n  }\n  // getOrderedlistByorderId(orderId:string){\n  //   return this.http.get<any>(\"http://localhost:8032/api/v1/customerBookingDetails/\"+orderId);\n  // }\n  getProductListByownerEmailID(ownerEmailId:string){\n    return this.http.get<any>(this.baseUrl+\"/plant-service/api/v1//ProductList/\"+ownerEmailId);\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-sellerorderlist',\n  templateUrl: './sellerorderlist.component.html',\n  styleUrls: ['./sellerorderlist.component.css']\n})\nexport class SellerorderlistComponent implements OnInit {\n\n  SellerList:any;\n  ownerEmailId:string=window.localStorage.getItem('loginEmail');\n\n  constructor(private httpClient: HttpClient , private service:ApiService) {\n    this.SellerList=[];\n   }\n  ngOnInit(): void {\n    this.getSellerList(this.ownerEmailId);\n  }\n\n  getSellerList(ownerEmailId:string){\n    this.service.getSellerList(ownerEmailId).subscribe(response=>{\n      console.log(response);\n      this.SellerList=response;\n    })\n    }}\n","<div class=\"container\" style=\"margin-top: 70px;  margin-left: 150px;\" >\n       \n    <div class=\"text\" style=\" font-weight: bold; width:20rem;height: 30px; margin-left: 20px;  color: rgb(9, 1, 1);\"><h1 class=\"text\" style=\"font-weight:bold ;color: rgb(187, 208, 212);\">Booking History</h1></div>\n<div class=\"card-text-center\" *ngFor=\"let OrderDetails of SellerList\" style=\" padding-bottom: 1%;\">\n <mat-card class=\"card-body\">\n  \n   <div class=\"row\" style=\"width:66rem; display: block; height: 20rem;\">\n      \n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px;display: inline-block; float: left;\" >                 \n              <img style=\"height: 300px ;\" src=\"https://us.123rf.com/450wm/fillvector/fillvector2005/fillvector200503920/fillvector200503920.jpg?ver=6\" alt=\"Plant_Image\" class=\"card-img-bottom \">            \n           </div>\n\n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px; display: inline-block; float: inline-start;\">\n          \n               \n            <div class=\"card-header\" style=\"margin-bottom: 20px;\"><mat-icon>spa</mat-icon>&nbsp;&nbsp;{{OrderDetails.productName}}</div>\n            <div class=\"card-body\">  \n                <h5 class=\"card-title\">Save earth save life</h5> \n                <p><mat-icon>#picker</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderId}}</p> \n                <p><mat-icon>loupe</mat-icon> Quantity:&nbsp;&nbsp;{{OrderDetails?.Quantity}}</p>                                      \n                <p>&#8377;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{OrderDetails?.productPrice}}</p>\n                <p><mat-icon>calendar_today</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderDate}}</p>\n            </div>                       \n                \n           </div>\n\n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px;display: inline-block; float: inline-end;\">\n              \n            <div class=\"card-header\" style=\"margin-bottom:3px ;\"><mat-icon>person</mat-icon>&nbsp;&nbsp;Customer</div>\n            <div class=\"card-body\" >\n                <!-- <h5 class=\"card-title\" style=\"font-size:20px ;\">Save earth save life </h5> -->\n                <p><mat-icon>person</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerName}}</p>\n                <p><mat-icon>mail_outline</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerEmailId}}</p>\n                <p><mat-icon>call</mat-icon>&nbsp;&nbsp;{{OrderDetails?.cutomerContactNo}}</p>\n                <p><mat-icon>room</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerAddress}}</p>\n                <p><mat-icon></mat-icon>&nbsp;&nbsp;</p>\n            </div>  \n              \n           </div>\n        \n   </div>\n    \n </mat-card> \n</div> \n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n\n@Component({\n  selector: 'app-updateseeds',\n  templateUrl: './updateseeds.component.html',\n  styleUrls: ['./updateseeds.component.css']\n})\nexport class UpdateseedsComponent implements OnInit {\n\n \n  @ViewChild('stepper') stepper: MatStepper;\n  productObject: PlantModel = new PlantModel();\n  profileFormGroup!: FormGroup;\n  files: any[] = [];\n  \n  constructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router,private route:ActivatedRoute ){\n\n  }\n  \n  ngOnInit(): void {\n    this.profileFormGroup= new FormGroup({\n    sellerEmailId:new FormControl(\"\",Validators.required),\n    //productId:new FormControl(\"\"),\n    productsAvailable:new FormControl(\"\",Validators.required),\n    productName:new FormControl(\"\",Validators.required),\n    productPrice:new FormControl(\"\",Validators.required),\n    productAddress:new FormControl(\"\",Validators.required),\n    productImage:new FormControl(\"\"),\n    productAge:new FormControl(\"\"),\n    sizeOfProduct:new FormControl(\"\"),\n    waterRequirement:new FormControl(\"\",Validators.required),\n    sunlightRequirement:new FormControl(\"\",Validators.required),\n    toxicity:new FormControl(\"\",Validators.required),\n    description:new FormControl(\"\",Validators.required),\n       });\n\n\n   this.service.getCurrentData(this.route.snapshot.params.id).subscribe((res)=>{\n    this.profileFormGroup=new FormGroup({\n      sellerEmailId:new FormControl(res['sellerEmailId']),\n      productsAvailable:new FormControl(res['productsAvailable']),\n      productName:new FormControl(res['productName']),\n      productPrice:new FormControl(res['productPrice']),\n      productImage:new FormControl(res['productImage']),\n      productAddress:new FormControl(res['productAddress']),\n      //productAge:new FormControl(res['productAge']),\n     // sizeOfProduct:new FormControl(res['sizeOfProduct']),\n      waterRequirement:new FormControl(res['waterRequirement']),\n      sunlightRequirement:new FormControl(res['sunlightRequirement']),\n      toxicity:new FormControl(res['toxicity']),\n      description:new FormControl(res['description'])\n\n\n    })\n    \n    })\n        \n\n  }\n\n  // OnSubmit(){\n  //   console.log('formValue', this.profileFormGroup.value);\n  //   this.productObject.productName = this.profileFormGroup.value.productName;\n  //   this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n  //   this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n  //   this.productObject.sellerEmailId= this.profileFormGroup.value.sellerEmailId;\n  //   this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n  //   this.productObject.productAge= this.profileFormGroup.value.productAge;\n  //   this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n  //   this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n  //   this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n  //   this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n  //   this.productObject.description= this.profileFormGroup.value.description;\n  //   this.productObject.productId=this.profileFormGroup.value.productId;\n\n  //   this.service.updatePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n  //     console.warn(\"result is here\", result)\n  //        this.profileFormGroup.reset();\n        \n  //        this.router.navigate(['/home']);\n  //   })\n    \n  // }   \n\n\n  days: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\n\n  sunlightRequirement!: string;\n  parts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                  'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                  'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                  'Full shade – Plants require less than 3 hours of direct sun per day'];\n\n\n  sizeOfPlant!: string;\n  sizes:string[]=['----']\n\n  toxicity!:string;\n  results:string[]=['Yes','No']\n\n  urllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n\n  onFileChanged(files) {\n    this.prepareFilesList(files);\n  }\n  prepareFilesList(files: Array<any>) {\n    for (const item of files) {\n      item.progress = 0;\n      this.files.push(item);\n    }\n    this.uploadFilesSimulator(0);\n  }\n  uploadFilesSimulator(index: number) {\n    setTimeout(() => {\n      if (index === this.files.length) {\n        return;\n      } else {\n        const progressInterval = setInterval(() => {\n          if (this.files[index].progress === 100) {\n            clearInterval(progressInterval);\n            this.uploadFilesSimulator(index + 1);\n          } else {\n            this.files[index].progress += 5;\n          }\n        }, 200);\n      }\n    }, 1000);\n  }\n  formatBytes(bytes, decimals) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n\nOnSubmit(){\n  this.service.putProduct(this.profileFormGroup.value,this.route.snapshot.params.id).subscribe((res=>{\n    this.notifierService.showNotification('Product Data Updated succesfully','OK'),\n    this.router.navigate(['/home'])\n  }))\n \n} \n\n\n}","<div class=\"container-fluid\">\n    <mat-horizontal-stepper >\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n           <mat-card class=\"profile\">\n                <mat-card-title>Profile of the seeds</mat-card-title>\n                <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                  <ng-template matStepLabel>Profile</ng-template>\n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Email Id</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"sellerEmailId\"\n                      required\n                    /> </mat-form-field\n                  >\n  \n                  <!-- <mat-form-field appearance=\"outline\" >\n                    <mat-label>product ID</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"productId\" readonly\n                      \n                    /> </mat-form-field\n                  > -->\n                  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Quantity(.in No's)</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"productsAvailable\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Product Name</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"productName\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Product Price</mat-label>\n                    <input matInput type=\"number\" formControlName=\"productPrice\" required />\n                    <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n                  </mat-form-field>\n                  <div class=\"img_container\">\n                    <div>\n                      <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                  </div>\n                  <div>\n                     \n                      <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                  </div>\n                  </div>\n                  <mat-card-actions >\n                    <button\n                      mat-raised-button\n                      color=\"primary\"\n                      style=\"margin-left:600px\"\n                       matStepperNext\n                    >\n                      Next\n                    </button>\n                  </mat-card-actions>\n                </form>\n              </mat-card>\n    \n          </mat-step>\n    \n          <!-------step 2----->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n            <mat-card class=\"profile\">\n              <mat-card-title>Requirements of seeds</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Requirements</ng-template>\n    \n                <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                  <mat-label>Product Address</mat-label>\n                  <input matInput formControlName=\"productAddress\" required />\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label for=\"productAge\">Product Age</mat-label>\n                  <mat-select name=\"productAge\" id=\"productAge\" formControlName=\"productAge\"   >\n                    <mat-option *ngFor=\"let age of ages\" [value]=\"age\">\n                      {{age}}\n                     </mat-option>\n                  </mat-select>\n                </mat-form-field>\n\n\n                <mat-form-field appearance=\"outline\">\n                <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n                <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\" required>\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                  {{day}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n                <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\" required>\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                  {{part}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-form-field appearance=\"outline\" >\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\"   >\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n                <mat-card-actions>\n                  <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                  <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n          </mat-step>\n    \n          <!-----last step-->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n            <mat-card class=\"profile\">\n              <mat-card-title>About Seeds</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>You are almost done....</ng-template>\n                <mat-label id=\"toxicity\"\n                  >State Whether the Product is toxic to pets, kids:\n                </mat-label>\n                <mat-radio-group\n                  aria-labelledby=\"toxicity\"\n                  formControlName=\"toxicity\"\n                  class=\"example-radio-group\"\n                  [(ngModel)]=\"toxicity\">\n                  <mat-radio-button\n                    class=\"example-radio-button block\"\n                    *ngFor=\"let result of results\"\n                    [value]=\"result\"\n                    >\n                    {{ result }}\n                  </mat-radio-button>\n                </mat-radio-group>\n    \n    \n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Description of the Product</mat-label>\n                  <textarea\n                    matInput\n    \n                    rows=\"10\" col=\"50\"\n                    formControlName=\"description\" required\n                  ></textarea>\n                  <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n                </mat-form-field>\n              </form>\n              <mat-card-actions>\n                <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Update</button>\n              </mat-card-actions>\n            </mat-card>\n          </mat-step>\n        </mat-horizontal-stepper>\n    \n    \n      </div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchByName'\n})\nexport class SearchByNamePipe implements PipeTransform {\n\n  transform(value: any, psearch:String ): any {\n    return value.filter(plant=>\n      plant.productName.toLowerCase().indexOf(psearch.toLowerCase())!==-1);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-updatemedicines',\n  templateUrl: './updatemedicines.component.html',\n  styleUrls: ['./updatemedicines.component.css']\n})\nexport class UpdatemedicinesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>updatemedicines works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\n\n\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n\n@Component({\n  selector: 'app-medicines',\n  templateUrl: './medicines.component.html',\n  styleUrls: ['./medicines.component.css']\n})\nexport class MedicinesComponent implements OnInit {\n  @ViewChild('stepper') stepper: MatStepper;\n  productObject: PlantModel = new PlantModel();\n  profileFormGroup!: FormGroup;\n  files: any[] = [];\n  \n  \n  constructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router ){\n  \n  }\n  \n  ngOnInit(): void {\n    this.profileFormGroup= new FormGroup({\n     ownerEmailId:new FormControl(window.localStorage.getItem('loginEmail'),Validators.required),\n     shopName:new FormControl(\"\",Validators.required),\n     ownerContactNo:new FormControl(\"\",Validators.required),\n   productId:new FormControl(\"\"),\n   productsAvailable:new FormControl(\"\",Validators.required),\n   productName:new FormControl(\"\",Validators.required),\n   productPrice:new FormControl(\"\",Validators.required),\n   productAddress:new FormControl(\"\",Validators.required),\n   productImage:new FormControl(\"\"),\n   productAge:new FormControl(\"\",Validators.required),\n   sizeOfProduct:new FormControl(\"\",Validators.required),\n   waterRequirement:new FormControl(\"\",Validators.required),\n   sunlightRequirement:new FormControl(\"\",Validators.required),\n   toxicity:new FormControl(\"\",Validators.required),\n   description:new FormControl(\"\",Validators.required),\n    });\n       console.log(this.profileFormGroup.value);\n   }\n   OnSubmit(){\n     console.log('formValue', this.profileFormGroup.value);\n     this.productObject.productName = this.profileFormGroup.value.productName;\n     this.productObject.shopName = this.profileFormGroup.value.shopName;\n     this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n     this.productObject.ownerContactNo= this.profileFormGroup.value.ownerContactNo;\n     this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n     this.productObject.ownerEmailId= this.profileFormGroup.value.ownerEmailId;\n     this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n     this.productObject.productAge= this.profileFormGroup.value.productAge;\n     this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n     this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n     this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n     this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n     this.productObject.description= this.profileFormGroup.value.description;\n     this.productObject.productId=this.profileFormGroup.value.productId;\n \n     this.service.savePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n      this.notifierService.showNotification('Product Added Succesfully','OK')\n          this.profileFormGroup.reset();\n         \n          this.router.navigate(['/sellerhomepage/home']);\n     })\n     \n   }    \n  \n  days: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\n  ages: string[]=['null'];\n\n  sunlightRequirement!: string;\n  parts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                  'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                  'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                  'Full shade – Plants require less than 3 hours of direct sun per day'];\n  \n  \n  sizeOfPlant!: string;\n  sizes:string[]=['NA']\n  \n  toxicity!:string;\n  results:string[]=['Yes','No']\n  \n  urllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n  \n  // image input\n  onFileChanged(files) {\n    this.prepareFilesList(files);\n  }\n  prepareFilesList(files: Array<any>) {\n    for (const item of files) {\n      item.progress = 0;\n      this.files.push(item);\n    }\n    this.uploadFilesSimulator(0);\n  }\n  uploadFilesSimulator(index: number) {\n    setTimeout(() => {\n      if (index === this.files.length) {\n        return;\n      } else {\n        const progressInterval = setInterval(() => {\n          if (this.files[index].progress === 100) {\n            clearInterval(progressInterval);\n            this.uploadFilesSimulator(index + 1);\n          } else {\n            this.files[index].progress += 5;\n          }\n        }, 200);\n      }\n    }, 1000);\n  }\n  formatBytes(bytes, decimals) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n  \n  \n  \n  // onSubmit(){\n  //   this.service.postProduct(this.profileFormGroup.value).subscribe({\n  //     next:(res)=>{\n  //       console.log(res);\n  //       this.notifierService.showNotification('Product Added Succesfully','OK');\n  //       this.profileFormGroup.reset();\n   \n  //     },\n  //     error:()=>{\n  //       alert(\"error while adding the product\");\n  //     }\n  //   })\n  // }\n  \n  }\n  ","<div class=\"container-fluid\">\n    <mat-horizontal-stepper >\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n           <mat-card class=\"profile\">\n                <mat-card-title>Profile of the Medicines</mat-card-title>\n                <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                  <ng-template matStepLabel>Profile</ng-template>\n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Email Id</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"ownerEmailId\"\n                      required\n                    /> </mat-form-field\n                  >\n  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Shop Name</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"shopName\" required\n                      \n                    /> </mat-form-field\n                  >\n  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Contact Number</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"ownerContactNo\" required\n                      \n                    /> </mat-form-field\n                  >\n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Quantity(.in No's)</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"productsAvailable\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Product Name</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"productName\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                 \n                  <div class=\"img_container\">\n                    <div>\n                      <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                  </div>\n                  <div>\n                     \n                      <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                  </div>\n                  </div>\n                  <mat-card-actions >\n                    <button\n                      mat-raised-button\n                      color=\"primary\"\n                      style=\"margin-left:600px\"\n                       matStepperNext\n                    >\n                      Next\n                    </button>\n                  </mat-card-actions>\n                </form>\n              </mat-card>\n    \n          </mat-step>\n    \n          <!-------step 2----->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n            <mat-card class=\"profile\">\n              <mat-card-title>Requirements of Medicines</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Requirements</ng-template>\n\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Product Price</mat-label>\n                  <input matInput type=\"number\" formControlName=\"productPrice\" required />\n                  <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n                </mat-form-field>\n    \n                <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                  <mat-label>Product Address</mat-label>\n                  <input matInput formControlName=\"productAddress\" required />\n                </mat-form-field>\n    \n               \n                <mat-form-field appearance=\"outline\" >\n                  <mat-label for=\"productAge\">Product Age</mat-label>\n                  <mat-select name=\"productAge\" id=\"productAge\" formControlName=\"productAge\"   >\n                    <mat-option *ngFor=\"let age of ages\" [value]=\"age\">\n                      {{age}}\n                     </mat-option>\n                  </mat-select>\n                </mat-form-field>\n<!--                 \n                <mat-form-field appearance=\"outline\">\n                <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n                <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\"   disabled=\"disabled\">\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                  {{day}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n                <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\"   disabled=\"disabled\">\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                  {{part}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-form-field appearance=\"outline\" >\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\"  disabled=\"disabled\" >\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field> -->\n    \n                <mat-card-actions>\n                  <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                  <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n          </mat-step>\n    \n          <!-----last step-->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n            <mat-card class=\"profile\">\n              <mat-card-title>About Medicines</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>You are almost done....</ng-template>\n                <mat-label id=\"toxicity\"\n                  >State Whether the Product is toxic to pets, kids:\n                </mat-label>\n                <mat-radio-group\n                  aria-labelledby=\"toxicity\"\n                  formControlName=\"toxicity\"\n                  class=\"example-radio-group\"\n                  [(ngModel)]=\"toxicity\">\n                  <mat-radio-button\n                    class=\"example-radio-button block\"\n                    *ngFor=\"let result of results\"\n                    [value]=\"result\"\n                    >\n                    {{ result }}\n                  </mat-radio-button>\n                </mat-radio-group>\n    \n    \n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Description of the Product</mat-label>\n                  <textarea\n                    matInput\n    \n                    rows=\"10\" col=\"50\"\n                    formControlName=\"description\" required\n                  ></textarea>\n                  <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n                </mat-form-field>\n              </form>\n              <mat-card-actions>\n                <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Submit</button>\n              </mat-card-actions>\n            </mat-card>\n          </mat-step>\n        </mat-horizontal-stepper>\n    \n    \n      </div>","import { LocationStrategy } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ThisReceiver } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-sellernavbar',\n  templateUrl: './sellernavbar.component.html',\n  styleUrls: ['./sellernavbar.component.css']\n})\nexport class SellernavbarComponent implements OnInit {\n  isExpanded: boolean = false;\n\n  constructor(private service:ApiService,private httpClient: HttpClient,private route:Router) { \n  }\n  emailid :string\n  \n  ngOnInit(): void {\n  \n    this.emailid=window.localStorage.getItem('loginEmail');\n    console.log(this.emailid);\n  }\n  \n LogOut(){\n  this.route.navigate(['/']);\n  localStorage.clear();\n }\n}\n","<!-------<mat-toolbar  style=\"background-color: #050448\">\n  \n  <mat-toolbar-row>\n    <button mat-icon-button>\n        <mat-icon (click)=\"sidenav.toggle();\">menu</mat-icon>\n    </button>\n    <span >Prakritik</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n      <mat-icon style=\"position:relative;right:5\">account_circle</mat-icon>\n     \n    </button>\n      <span>\n      <div *ngFor=\"let id of ids\">\n        <div class=\"card-header\" style=\"font-size:small\">{{id.emailid}}</div>\n        </div>\n      </span>\n     <mat-menu #menu=\"matMenu\">\n     <button mat-menu-item=\"\" routerLink=\"/profile\">My Profile</button>\n    <button mat-menu-item>Log Out</button>\n    </mat-menu>\n   \n   \n   </mat-toolbar-row>\n \n  </mat-toolbar>\n  \n  <mat-sidenav-container autosize>\n   <mat-nav-list>\n\n    <mat-list-item (click)=\"\">\n\n    </mat-list-item>\n   </mat-nav-list>\n      <mat-sidenav mode=\"side\" opened #sidenav>\n       <img class=\"avatar mat-elevation-z8\" src=\"https://www.freeiconspng.com/thumbs/profile-icon-png/am-a-19-year-old-multimedia-artist-student-from-manila--21.png\">\n\n       <div>\n        <div *ngFor=\"let id of ids\">\n          <div class=\"card-header\" style=\"font-size:small\">{{id.emailid}}</div>\n          </div>\n        </div>\n      <button mat-button class=\"menu-button\" routerLink=\"/home\">\n        <mat-icon>home</mat-icon>\n        <span>Home</span>\n      </button>\n      <button mat-button class=\"menu-button\" routerLink=\"/seller\">\n        <mat-icon>add_box</mat-icon>\n        <span>Add Plants</span>\n      </button>\n      <button mat-button class=\"menu-button\" routerLink=\"/orderList\">\n        <mat-icon>assignment_turned_in</mat-icon>\n        <span>Order List</span>\n      </button>\n      <button mat-button class=\"menu-button\" routerLink=\"/Editprofile\">\n      <button mat-button class=\"menu-button\" routerLink=\"/customerbookinghistory\">\n       \n        <span>customerorderlist</span>\n      </button> \n      <button mat-button class=\"menu-button\" >\n        <mat-icon>create</mat-icon>\n        <span>Edit Profile</span>\n      </button>\n  \n    </mat-sidenav>\n    <mat-sidenav-content >\n      <div class=\"content mat-elevation-z8\">\n        <router-outlet></router-outlet>\n    </div>\n    </mat-sidenav-content>-------->\n\n    <mat-sidenav-container autosize>\n      <mat-sidenav #sidenav mode=\"side\" opened=\"isExpanded\">\n      \n    \n      \n        <button mat-button (click)=\"isExpanded = !isExpanded\" style=\"margin-top:15px;\">\n            <mat-icon mat-list-icon class=\"chevron-button\" [ngClass]=\"{ rotated: isExpanded }\">menu\n            </mat-icon>\n          </button><br/>\n          \n        \n            <button mat-button  routerLink=\"/sellerhomepage/home\" style=\"margin-top:30px;\">\n            <mat-icon mat-list-icon>home</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\" style=\"margin-left:8px;\">Home</span>\n            </button><br/>\n\n            <button mat-button [matMenuTriggerFor]=\"menu\" style=\"margin-top:16px;\"> <mat-icon>add_box</mat-icon> <span *ngIf=\"isExpanded\" class=\"menu-item\" style=\"margin-left:8px;\">Add Products</span></button>\n            <mat-menu #menu=\"matMenu\" >\n              <button mat-menu-item routerLink=\"/sellerhomepage/seller\" style=\"width: 160px;font-weight: bold;font-size: 16px;\" class=\"menu\">Add Plants</button>\n              <button mat-menu-item routerLink=\"/sellerhomepage/seedslist\" style=\"width: 160px;font-size: 16px;font-weight: bold;\" class=\"menu\">Add Seeds</button>\n              <button mat-menu-item routerLink=\"/sellerhomepage/medicines\" style=\"width: 160px;font-size: 16px;font-weight: bold;\" class=\"menu\">Add Medicines</button>\n            </mat-menu><br/>\n           \n            <button mat-button routerLink=\"/sellerhomepage/orderList\" style=\"margin-top:16px;\">\n            <mat-icon mat-list-icon>supervisor_account</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\" style=\"margin-left:8px;\">Order List</span>\n            </button><br/>\n         \n\n       \n            <button mat-button style=\"margin-top:16px;\" routerLink=\"/sellerhomepage/Editprofile\">\n            <mat-icon>create</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\" style=\"margin-left:8px;\">Edit Profile</span>\n            </button><br/>\n         \n    \n        \n      </mat-sidenav>\n    \n      <!-- Content - rendered Content for the current router path into the <router-outlet>, e.g. /dashboard or /info-->\n       \n      <mat-sidenav-content>\n       \n        <mat-toolbar>\n  \n          \n            <span >Prakritik</span>\n            <span class=\"example-spacer\"></span>\n            <button mat-icon-button [matMenuTriggerFor]=\"menuitem\">\n              <mat-icon style=\"position:relative;right:5\">account_circle</mat-icon>\n            </button>\n              <span>\n              <div style=\"margin-right:160px\">\n                <div class=\"card-header\" style=\"font-size:small\">{{emailid}}</div>\n                </div>\n              </span>\n             <mat-menu #menuitem=\"matMenu\">\n             <button mat-menu-item routerLink=\"/sellerhomepage/profile\">My Profile</button>\n            <button mat-menu-item (click)=\"LogOut()\">Log Out</button>\n            </mat-menu>\n         \n           </mat-toolbar>\n  \n        <router-outlet></router-outlet>\n       \n      </mat-sidenav-content>\n  \n    </mat-sidenav-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  private url: string = \"http://localhost:8004/user/create_order\";\n  constructor(private http: HttpClient) { }\n  saveUser(data:any) {\n    console.log(JSON.stringify(data));\n    return this.http.post(this.url,JSON.stringify(data));\n  }\n}\n","import { ApiService } from 'src/app/services/api.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-userprofile',\n  templateUrl: './userprofile.component.html',\n  styleUrls: ['./userprofile.component.css']\n})\nexport class UserprofileComponent implements OnInit {\n\n  constructor(private service:ApiService) { }\n  gender_bool:boolean=false;\n\n  user:any;\n  email:string=window.localStorage.getItem('loginEmail')\n  ngOnInit(): void {\n   this.service.getUserByEmail(this.email).subscribe(val => {this.user=val, this.gender()});\n  }\n  gender()\n  {\n    if(this.user.gender==\"female\")\n    {\n      this.gender_bool=true;\n       console.warn(this.gender_bool);\n    }\n  }\n \n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n<!-- Navbar top -->\n    <div class=\"navbar-top\">\n        <div class=\"title\">\n            <h1>Profile</h1>\n        </div>\n\n    </div>\n    <!-- End -->\n\n    <!-- Employee profile -->\n    <div class=\"container emp-profile\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                \n                    <div class=\"profile-img\" *ngIf=\"gender_bool;else other_content\">\n                        <img src=\"https://cdn-icons-png.flaticon.com/512/65/65581.png\" alt=\"\"/>\n                    </div>\n                    <ng-template #other_content>\n                        <div class=\"profile-img\">\n                            <img src=\"https://cdn-icons-png.flaticon.com/512/0/93.png\" alt=\"\"/>\n                        </div>\n                    </ng-template>\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"tab-content profile-tab\" id=\"myTabContent\">\n                    <div class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>First name</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.firstName}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Last name</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.lastName}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Email</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.email}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Gender</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.gender}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Address</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.address}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Contact no.</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.contactNumber}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>UserRole</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.userRole}}</p>\n                                    </div>\n                                </div>\n                    </div>\n        </div>\n    </div>\n    <!-- End -->","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-landingpage',\n  templateUrl: './landingpage.component.html',\n  styleUrls: ['./landingpage.component.css']\n})\nexport class LandingpageComponent implements OnInit {\n\n  constructor(private service:ApiService,private httpClient: HttpClient) { }\n  cards: any[];\n\n  ngOnInit(): void {\n    this.service.getProduct().subscribe({next:(result)=>this.cards=result});\n  }\n\n  login()\n  {\n    window.location.href = \"https://www.example.com\";\n  }\n\n  register()\n  {\n    window.location.href = \"https://www.example.com\";\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <style>\n  </style>\n  <title>Document</title>\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\"\n    integrity=\"sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N\" crossorigin=\"anonymous\" />\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\"/>\n    <!--Replace with your tailwind.css once created-->\n    <link href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700\" rel=\"stylesheet\" />\n\n    <style>\n        .gradient {\n          background: linear-gradient(90deg, #d53369 0%, #daae51 100%);\n        }\n      </style>\n\n</head>\n<body >\n    <!-- <div class=\"container\" id=\"header\">\n        <div class=\"row\">\n          <div>\n            <a href=\"#\" class=\"text-secondary\" style=\"font-size:40px\">Prakrtik</a>\n          </div> -->\n          <!-- <div class=\"col-sm\"><input type=\"search\" class=\"form-control rounded\">\n        </div> -->\n    \n      <!-- </div>\n      </div> -->\n    <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n        <a class=\"navbar-brand\" href=\"#\">Prakrtik</a>\n        <!-- <div class=\"container\">\n            <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\">login</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\">signUp</a>\n                </li>\n            </ul>\n        </div> -->\n        <div class=\"d-flex align-items-center navbar-nav ml-auto\" >\n            <button type=\"button\" class=\"btn btn-link px-3 me-2\" routerLink=\"/register\">\n              Login\n            </button>\n            <button type=\"button\" class=\"btn btn-primary me-3\" routerLink=\"/register\">\n              Sign up for free\n            </button>\n        </div>\n        \n    </nav>\n\n        <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n          <ol class=\"carousel-indicators\">\n            <li data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"0\" class=\"active\"></li>\n            <li data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"1\"></li>\n          </ol>\n          <div class=\"carousel-inner\" style=\"max-height: 40vh\"> \n            <div class=\"carousel-item active\" data-bs-interval=\"10000\">\n              <img style=\"height: 300px;\" src=\"https://www.flowerpower.com.au/wordpress/wp-content/uploads/2018/10/Wide-crop-Bora-bora-hanging-planters-with-string-of-beans-and-rhipsalis-DSC_8805.jpg\" class=\"d-block w-100\" alt=\"...\">\n              <div class=\"carousel-caption d-none d-md-block\">\n                        <h2 style=\"font-size: x-large;\" class=\"display-4\">Plants give us oxygen for the lungs and for the soul</h2>\n                        <!-- <p style=\"font-size: large;\">Don't mind me!</p> -->\n                        <!-- <button type=\"button\" class=\"btn btn-primary\">Primary</button> -->\n                      </div>\n                    </div>\n                    <div class=\"carousel-item\">\n                      <img style=\"height: 300px;\" src=\"https://www.pixelstalk.net/wp-content/uploads/images5/Aesthetic-Minimalist-Plant-Wallpaper-HD-1080p.jpg\" class=\"d-block w-100\" alt=\"...\">\n                        <div class=\"carousel-caption d-none d-md-block\">\n                        <!-- <h5>Second slide label</h5> -->\n                        <p style=\"font-size: x-large;\">If you plant a tree, you plant a life</p>\n                      </div>\n                    </div>\n               </div>\n          <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-bs-slide=\"prev\">\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"visually-hidden\">Previous</span>\n          </a>\n          <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-bs-slide=\"next\">\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"visually-hidden\">Next</span>\n          </a>\n        </div>\n\n              \n              \n      <!--Features section start-->\n\n<section class=\"features\" id=\"features\">\n\n    <h1 class=\"heading\"> Our <span>Features</span></h1>\n  \n    <div class=\"box-container\">\n  \n  <div class=\"row\">\n    \n  \n  \n    <div class=\"box col-4\">\n     <mat-card>\n        <img src=\"/assets/feature-img-1.png\" alt=\"\">\n        <h3>Customer UI</h3>\n        <p>Easy to understand and detailed UI.</p>\n        <a href=\"#\" class=\"btn\">Read more</a>\n     </mat-card>\n    </div>\n    \n  \n  \n    <div class=\"box col-4\">\n      <mat-card>\n      <img src=\"/assets/feature-img-2.png\" alt=\"\">\n      <h3>Easy Order</h3>\n      <p>Customer can order a product by just one click. After completion of Payment. It will redirect to order page. </p>\n      <a href=\"#\" class=\"btn\">Read more</a>\n      </mat-card>\n    </div>\n  \n    <div class=\"box col-4\">\n      <mat-card>\n      <img src=\"/assets/feature-img-3.png\" alt=\"\">\n      <h3>Easy Payment</h3>\n      <p>Payment done by adding thir card details.</p>\n      <a href=\"#\" class=\"btn\">Read more</a>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"box col-4\">\n        <mat-card>\n           <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRieKfpLWxIJZGXslh9Zj05ykb3P_zU0dHUJQsVUJcdknc4-fS7zyjHIMfM30SGd52OS5w&usqp=CAU\" alt=\"\">\n           <h3>Update Profile</h3>\n           <p>Customer can update their profile after registration.</p>\n           <a href=\"#\" class=\"btn\">Read more</a>\n        </mat-card>\n       </div>\n       \n     \n     \n       <div class=\"box col-4\">\n         <mat-card>\n         <img src=\"https://static.vecteezy.com/system/resources/thumbnails/003/184/173/small/vendor-or-seller-line-icon-vector.jpg\" alt=\"\">\n         <h3>Seller Convenience</h3>\n         <p>We provide add product functionality for the seller. So seller can easily post their product.</p>\n         <a href=\"#\" class=\"btn\">Read more</a>\n         </mat-card>\n       </div>\n     \n       <div class=\"box col-4\">\n         <mat-card>\n         <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS_7hAIuOstuZkRP3skmOB0ia2P8JvctL-0E0_AjXLWk85ieGmdq7FdPgJkdp7b4wYUqDk&usqp=CAU\" alt=\"\">\n         <h3>Receipt</h3>\n         <p>We provide receipt after confirmation of payment.</p>\n         <a href=\"#\" class=\"btn\">Read more</a>\n         </mat-card>\n       </div>\n  </div>\n  </div>\n  </section>\n\n  <section class=\"bg-white border-b py-8\">\n    <div class=\"container mx-auto flex flex-wrap pt-4 pb-12\">\n      <h2 class=\"w-full my-2 text-5xl font-bold leading-tight text-center text-gray-800\">\n        About us\n      </h2>\n      <div class=\"w-full mb-4\">\n        <div class=\"h-1 mx-auto gradient w-64 opacity-25 my-0 py-0 rounded-t\"></div>\n      </div>\n      <div class=\"w-full md:w-1/3 p-6 flex flex-col flex-grow flex-shrink\">\n        <div class=\"flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow\">\n          <a href=\"#\" class=\"flex flex-wrap no-underline hover:no-underline\">\n            <p class=\"w-full text-gray-600 text-xs md:text-sm px-6\">\n              Plants, simplified\n            </p>\n            <div class=\"w-full font-bold text-xl text-gray-800 px-6\">\n              Easy to plug\n            </div>\n            <p class=\"text-gray-800 text-base px-6 mb-5\">\n              Order plants ready to be placed in your home, office or garden. Just Unpack, Relax and Enjoy your green buddies\n            </p>\n          </a>\n        </div>\n        <div class=\"flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow p-6\">\n          <div class=\"flex items-center justify-start\">\n            <button class=\"mx-auto lg:mx-0 hover:underline gradient text-white font-bold rounded-full my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\n              Action\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"w-full md:w-1/3 p-6 flex flex-col flex-grow flex-shrink\">\n        <div class=\"flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow\">\n          <a href=\"#\" class=\"flex flex-wrap no-underline hover:no-underline\">\n            <p class=\"w-full text-gray-600 text-xs md:text-sm px-6\">\n              Secure Shipping\n            </p>\n            <div class=\"w-full font-bold text-xl text-gray-800 px-6\">\n              Fresh & Safe\n            </div>\n            <p class=\"text-gray-800 text-base px-6 mb-5\">\n              Our unique packaging will hold the plants in place and let the plant breathe so that it reaches you fresh without any mess.\n            </p>\n          </a>\n        </div>\n        <div class=\"flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow p-6\">\n          <div class=\"flex items-center justify-center\">\n            <button class=\"mx-auto lg:mx-0 hover:underline gradient text-white font-bold rounded-full my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\n              Action\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"w-full md:w-1/3 p-6 flex flex-col flex-grow flex-shrink\">\n        <div class=\"flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow\">\n          <a href=\"#\" class=\"flex flex-wrap no-underline hover:no-underline\">\n            <p class=\"w-full text-gray-600 text-xs md:text-sm px-6\">\n              Detailed Guidance\n            </p>\n            <div class=\"w-full font-bold text-xl text-gray-800 px-6\">\n              24x7 Guidance\n            </div>\n            <p class=\"text-gray-800 text-base px-6 mb-5\">\n              Get detailed plant care instructions from the website as well as real-time guidance from our Garden Experts on Whatsapp.\n            </p>\n          </a>\n        </div>\n        <div class=\"flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow p-6\">\n          <div class=\"flex items-center justify-end\">\n            <button class=\"mx-auto lg:mx-0 hover:underline gradient text-white font-bold rounded-full my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\n              Action\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n    \n\n\n\n\n\n\n\n\n\n    <!-- <footer id=\"sticky-footer\" class=\"flex-shrink-0 py-4 bg-dark text-white-50\">\n        <div class=\"container text-center\">\n          <small>Copyright &copy; Prakrtik</small>\n        </div>\n      </footer> -->\n      <footer id=\"sticky-footer\" class=\"bg-dark text-center text-white-50\">\n        <!-- Grid container -->\n        <div class=\"container p-4 pb-0\">\n          <!-- Section: Social media -->\n          <section class=\"mb-4\">\n            <!-- Facebook -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-facebook-f\"></i\n            ></a>\n      \n            <!-- Twitter -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-twitter\"></i\n            ></a>\n      \n            <!-- Google -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-google\"></i\n            ></a>\n      \n            <!-- Instagram -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-instagram\"></i\n            ></a>\n      \n            <!-- Linkedin -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-linkedin-in\"></i\n            ></a>\n      \n            <!-- Github -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-github\"></i\n            ></a>\n          </section>\n          <!-- Section: Social media -->\n        </div>\n        <!-- Grid container -->\n      \n        <!-- Copyright -->\n        <div class=\"text-center p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\n            Copyright &copy; Prakrtik\n          <!-- <a class=\"text-white\" href=\"https://mdbootstrap.com/\">MDBootstrap.com</a> -->\n        </div>\n        <!-- Copyright -->\n      </footer>\n</body>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {    \n  title = 'Learnzilla';\n\n  sellerData:any;\n  @Input() childMessage: Object;\n  parentUpdate(sellerData:any)\n  {\n    this.sellerData=sellerData;\n    console.warn(sellerData);\n  }\n}\n","\n\n<!-- <app-landingpage></app-landingpage> -->\n<router-outlet>\n    \n</router-outlet>  \n\n\n\n\n\n","import { ApiService } from 'src/app/services/api.service';\nimport { SellerhomepageComponent } from './../sellerhomepage/sellerhomepage.component';\nimport { SellerComponent } from './../seller/seller.component';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n\n\n@Component({\n  selector: 'app-productdetails',\n  templateUrl: './productdetails.component.html',\n  styleUrls: ['./productdetails.component.css']\n})\nexport class ProductdetailsComponent implements OnInit {\n\ndetails:any;\n\naddToCart() {\nthrow new Error('Method not implemented.');\n}\npageTitle: any=\"plant details\";\n\n\n\n\n\n\n  constructor(private service:ApiService) {\n    // this.details=this.service.getProductDetails();\n  }\n\n   //to call from service method\n\n  ngOnInit(): void {\n    this.service.getProductDetails().subscribe(val => this.details=val);\n    // console.warn(this.details);\n  }\n\n}\n","<div class=\"card\" >\n  \n  <div class=\"card-header\">\n    Featured\n  </div>\n  <img src=\"data:image/png;base64,{{details.productImage}}\"\n                  width=\"auto\" alt=\"Image\">\n                  \n\n    <div class=\"card-body\">\n      <div style=\"width: 30%; float:left\">\n        <p><mat-icon matTooltip=\"Price\">currency_rupee</mat-icon>&nbsp;&nbsp;{{details.productPrice}}/item</p>\n        <p><mat-icon matTooltip=\"Quantity of plant available\">production_quantity_limits</mat-icon>&nbsp;&nbsp;{{details.productsAvailable}}</p>\n        <p><mat-icon matTooltip=\"Plant name\">yard</mat-icon>&nbsp;&nbsp;{{details.productName}}</p>\n        <p><mat-icon matTooltip=\"Address of seller\">location_on</mat-icon>&nbsp;&nbsp;{{details.productAddress}}</p>\n     </div>\n     \n     <div style=\"width: 50%; float:right\">\n        <p><mat-icon matTooltip=\"Toxicity\">warning</mat-icon>&nbsp;&nbsp;{{details.toxicity}}</p>\n        <p><mat-icon matTooltip=\"Size of plant\">fullscreen</mat-icon>&nbsp;&nbsp;{{details.sizeOfProduct}}</p>\n        <p><mat-icon matTooltip=\"Sunlight requirement\">wb_sunny</mat-icon>&nbsp;&nbsp;{{details.sunlightRequirement}}</p>\n        <p><mat-icon matTooltip=\"Water requirement\">water_drop</mat-icon>&nbsp;&nbsp;{{details.waterRequirement}}</p>\n     </div> \n     \n          <!-- <div class=\"dropdown-menu\"> -->\n           \n              \n              \n              <!-- <button class=\"btn btn-primary\" (click)=\"addToCart()\">BuyNow</button> -->\n            \n          <!-- </div> -->\n         \n         \n          \n         \n  </div>\n  <ul>\n    <li><p><mat-icon matTooltip=\"Plant description\">description</mat-icon>&nbsp;&nbsp;{{details.description}}</p></li>\n  </ul>\n</div>\n<!-- \"plantsAvailable\": \"10\",\n    \"plantName\": \"neem\",\n    \"plantPrice\": \"140\",\n    \"plantsImage\": null,\n    \"plantAddress\": \"kdp\",\n    \"plantAge\": 12,\n    \"sizeOfPlant\": \"Medium\",\n    \"waterRequirement\": \"Twice a week\",\n    \"sunlightRequirement\": \"Full shade – Plants require less than 3 hours of direct sun per day\",\n    \"toxicity\": \"No\",\n    \"description\": \"it is a good pant\", -->\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\n\n\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n\n@Component({\n  selector: 'app-seller',\n  templateUrl: './seller.component.html',\n  styleUrls: ['./seller.component.css']\n})\nexport class SellerComponent implements OnInit {\n\n  @ViewChild('stepper') stepper: MatStepper;\n  productObject: PlantModel = new PlantModel();\n  profileFormGroup!: FormGroup;\n  files: any[] = [];\n  \n  \n  constructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router ){\n\n  }\n \n  ngOnInit(): void {\n   this.profileFormGroup= new FormGroup({\n    ownerEmailId:new FormControl(window.localStorage.getItem('loginEmail'),Validators.required),\n    shopName:new FormControl(\"\",Validators.required),\n    ownerContactNo:new FormControl(\"\",Validators.required),\n  productId:new FormControl(\"\"),\n  productsAvailable:new FormControl(\"\",Validators.required),\n  productName:new FormControl(\"\",Validators.required),\n  productPrice:new FormControl(\"\",Validators.required),\n  productAddress:new FormControl(\"\",Validators.required),\n  productImage:new FormControl(\"\"),\n  productAge:new FormControl(\"\",Validators.required),\n  sizeOfProduct:new FormControl(\"\",Validators.required),\n  waterRequirement:new FormControl(\"\",Validators.required),\n  sunlightRequirement:new FormControl(\"\",Validators.required),\n  toxicity:new FormControl(\"\",Validators.required),\n  description:new FormControl(\"\",Validators.required),\n   });\n      console.log(this.profileFormGroup.value);\n  }\n  OnSubmit(){\n    console.log('formValue', this.profileFormGroup.value);\n    this.productObject.productName = this.profileFormGroup.value.productName;\n    this.productObject.shopName = this.profileFormGroup.value.shopName;\n    this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n    this.productObject.ownerContactNo= this.profileFormGroup.value.ownerContactNo;\n    this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n    this.productObject.ownerEmailId= this.profileFormGroup.value.ownerEmailId;\n    this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n    this.productObject.productAge= this.profileFormGroup.value.productAge;\n    this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n    this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n    this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n    this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n    this.productObject.description= this.profileFormGroup.value.description;\n    this.productObject.productId=this.profileFormGroup.value.productId;\n\n    this.service.savePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n     this.notifierService.showNotification('Product Added Succesfully','OK')\n         this.profileFormGroup.reset();\n        \n         this.router.navigate(['/sellerhomepage/home']);\n    })\n    \n  }    \n\n  days: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\n\n  sunlightRequirement!: string;\n  parts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                  'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                  'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                  'Full shade – Plants require less than 3 hours of direct sun per day'];\n\n\n  sizeOfPlant!: string;\n  sizes:string[]=['Small','Medium','Big']\n\n  toxicity!:string;\n  results:string[]=['Yes','No']\n\n  urllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n\n// image input\n  onFileChanged(files) {\n    this.prepareFilesList(files);\n  }\n  prepareFilesList(files: Array<any>) {\n    for (const item of files) {\n      item.progress = 0;\n      this.files.push(item);\n    }\n    this.uploadFilesSimulator(0);\n  }\n  uploadFilesSimulator(index: number) {\n    setTimeout(() => {\n      if (index === this.files.length) {\n        return;\n      } else {\n        const progressInterval = setInterval(() => {\n          if (this.files[index].progress === 100) {\n            clearInterval(progressInterval);\n            this.uploadFilesSimulator(index + 1);\n          } else {\n            this.files[index].progress += 5;\n          }\n        }, 200);\n      }\n    }, 1000);\n  }\n  formatBytes(bytes, decimals) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n\n\n// onSubmit(){\n//   this.service.postProduct(this.profileFormGroup.value).subscribe({\n//     next:(res)=>{\n//       console.log(res);\n//       this.notifierService.showNotification('Product Added Succesfully','OK');\n//       this.profileFormGroup.reset();\n   \n//     },\n//     error:()=>{\n//       alert(\"error while adding the product\");\n//     }\n//   })\n// }\n\n}","<div class=\"container-fluid\">\n  <mat-horizontal-stepper >\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n         <mat-card class=\"profile\">\n              <mat-card-title>Profile of the Plants</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Profile</ng-template>\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Email Id</mat-label>\n                  <input\n                    matInput\n                    class=\"plantId w-100\"\n                    formControlName=\"ownerEmailId\"\n                    required\n                  /> </mat-form-field\n                >\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Shop Name</mat-label>\n                  <input\n                    matInput\n                    class=\"productId w-100\"\n                    formControlName=\"shopName\" required\n                    \n                  /> </mat-form-field\n                >\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Contact Number</mat-label>\n                  <input\n                    matInput\n                    class=\"productId w-100\"\n                    formControlName=\"ownerContactNo\" required\n                    \n                  /> </mat-form-field\n                >\n                \n                \n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Quantity(.in No's)</mat-label>\n                  <input\n                    matInput\n                    class=\"plantId w-100\"\n                    formControlName=\"productsAvailable\"\n                    required\n                  /> </mat-form-field\n                ><br />\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Product Name</mat-label>\n                  <input\n                    matInput\n                    formControlName=\"productName\"\n                    required\n                  /> </mat-form-field\n                ><br />\n              \n                <div class=\"img_container\">\n                  <div>\n                    <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                </div>\n                <div>\n                   \n                    <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                </div>\n                </div>\n                <mat-card-actions >\n                  <button\n                    mat-raised-button\n                    color=\"primary\"\n                    style=\"margin-left:600px\"\n                     matStepperNext\n                  >\n                    Next\n                  </button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n  \n        </mat-step>\n  \n        <!-------step 2----->\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n          <mat-card class=\"profile\">\n            <mat-card-title>Requirements of Product</mat-card-title>\n            <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n              <ng-template matStepLabel>Requirements</ng-template>\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Product Price</mat-label>\n                <input matInput type=\"number\" formControlName=\"productPrice\" [ngModel]=\"productPrice | currency\" required />\n                <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n              </mat-form-field>\n  \n              <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                <mat-label>Product Address</mat-label>\n                <input matInput formControlName=\"productAddress\" required />\n              </mat-form-field>\n  \n              <mat-form-field class=\"productage\" appearance=\"outline\">\n                <mat-label style=\"width:50%\">Product Age</mat-label>\n                <input matInput formControlName=\"productAge\" type=\"number\" required/>\n                <mat-hint [align]=\"'end'\">*Number of Days Old</mat-hint>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n              <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n              <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\" required>\n               <mat-option>--Select--</mat-option>\n               <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                {{day}}\n               </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n              <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\" required>\n               <mat-option>--Select--</mat-option>\n               <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                {{part}}\n               </mat-option>\n              </mat-select>\n            </mat-form-field>\n  \n            \n              <mat-card-actions>\n                <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n              </mat-card-actions>\n            </form>\n          </mat-card>\n        </mat-step>\n  \n        <!-----last step-->\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n          <mat-card class=\"profile\">\n            <mat-card-title>About Product</mat-card-title>\n            <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n              <ng-template matStepLabel>You are almost done....</ng-template>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\" required>\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-label id=\"toxicity\"\n                >State Whether the Product is toxic to pets, kids:\n              </mat-label>\n              <mat-radio-group\n                aria-labelledby=\"toxicity\"\n                formControlName=\"toxicity\"\n                class=\"example-radio-group\"\n                [(ngModel)]=\"toxicity\">\n                <mat-radio-button\n                  class=\"example-radio-button block\"\n                  *ngFor=\"let result of results\"\n                  [value]=\"result\"\n                  >\n                  {{ result }}\n                </mat-radio-button>\n              </mat-radio-group>\n  \n  \n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Description of the Product</mat-label>\n                <textarea\n                  matInput\n  \n                  rows=\"10\" col=\"50\"\n                  formControlName=\"description\" required\n                ></textarea>\n                <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n              </mat-form-field>\n            </form>\n            <mat-card-actions>\n              <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n              <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Submit</button>\n            </mat-card-actions>\n          </mat-card>\n        </mat-step>\n      </mat-horizontal-stepper>\n  \n  \n    </div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n//import { JwtRequest } from 'src/app/models/login/jwt-request';\nimport { UserDao } from 'src/app/models/login/user-dao';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  // baseUrl = \"http://localhost:8080\"\n  baseUrl = \"https://prakritik.stackroute.io\";\n\n\n  constructor(private httpClient: HttpClient) { }\n  loginUser(user: UserDao): Observable<Object> {\n    console.log(\"user\", user);\n    return this.httpClient.post(this.baseUrl + \"/authentication-service/validate\", user);\n  }\n  validate(user) {\n    return this.httpClient.get(this.baseUrl + \"/authentication-service/validate\", user)\n  }\n}\n","\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { NgModule } from \"@angular/core\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { HomeService } from './home.service';\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\nimport { FooterComponent } from \"./components/footer/footer.component\";\nimport { SellernavbarComponent } from \"./components/sellernavbar/sellernavbar.component\";\nimport { SellerhomepageComponent } from \"./components/sellerhomepage/sellerhomepage.component\";\nimport { SellerorderlistComponent } from \"./components/sellerorderlist/sellerorderlist.component\";\nimport { ProductdetailsComponent } from \"./components/productdetails/productdetails.component\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatStepperModule } from \"@angular/material/stepper\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { SellerComponent } from \"./components/seller/seller.component\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { ProfileUserComponent } from './components/profile-user/profile-user.component';\nimport { UpdateproductlistComponent } from './components/updateproductlist/updateproductlist.component';\nimport { CustomerhomepageComponent } from './customerhomepage/customerhomepage.component';\nimport { CustomerorderlistComponent } from './components/customerorderlist/customerorderlist.component';\nimport {MatListModule} from '@angular/material/list';\n//import {MatGridListModule} from '@angular/material/grid-list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatTabsModule} from '@angular/material/tabs';\n//import {NgxPaginationModule} from 'ngx-pagination';\nimport { MatTooltipModule } from '@angular/material/tooltip'; \n\n\nimport { RegisterUserComponent } from './components/register-user/register-user.component';\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { UserprofileComponent } from './components/userprofile/userprofile.component';\nimport { CusproductdetailsComponent } from './components/cusproductdetails/cusproductdetails.component';\nimport { LandingpageComponent } from './components/landingpage/landingpage.component';\nimport { SearchByNamePipe } from './search-by-name.pipe';\nimport { SeedslistComponent } from './components/seedslist/seedslist.component';\nimport { MedicinesComponent } from './components/medicines/medicines.component';\nimport { UpdateseedsComponent } from './components/updateseeds/updateseeds.component';\nimport { UpdatemedicinesComponent } from './components/updatemedicines/updatemedicines.component';\nimport { ProductImageComponent } from './product-image/product-image.component';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    FooterComponent,\n    SellernavbarComponent,\n    SellerhomepageComponent,\n    SellerComponent,\n    SellerorderlistComponent,\n    ProfileUserComponent,\n    CustomerorderlistComponent,\n    UpdateproductlistComponent,\n    CustomerhomepageComponent,\n    ProductdetailsComponent,\n    RegisterUserComponent,\n    UserprofileComponent,\n    CusproductdetailsComponent,\n    LandingpageComponent,\n    SearchByNamePipe,\n    SeedslistComponent,\n    MedicinesComponent,\n    UpdateseedsComponent,\n    UpdatemedicinesComponent,\n    ProductImageComponent,\n  \n  ],\n  imports: [\n    AppRoutingModule,\n    MatRadioModule,\n    MatCardModule,\n    MatIconModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatSliderModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatStepperModule,\n    FormsModule,\n    MatSelectModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatSnackBarModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    //MatGridListModule,\n   // NgxPaginationModule,\n    MatListModule,\n\n    \n    MatMenuModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatTabsModule,\n    MatNativeDateModule,\n    MatTooltipModule\n   // NgxPaginationModule, \n  ],\n  providers: [HomeService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export class UserDao {\n    email:string;\n    password:string;\n    userRole:string;\n    constructor(){}\n}\n","import { ProductdetailsComponent } from './../productdetails/productdetails.component';\nimport { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\nimport { SellerComponent } from '../seller/seller.component';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-sellerhomepage',\n  templateUrl: './sellerhomepage.component.html',\n  styleUrls: ['./sellerhomepage.component.css']\n})\nexport class SellerhomepageComponent implements OnInit {\n  dataSource !: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator !: MatPaginator ;\n  @ViewChild(MatSort) sort !: MatSort;\nplantmodels:string[];\nownerEmailId:string=window.localStorage.getItem('loginEmail')\n  constructor(private service:ApiService,private notifierService:NotifierService,private router:Router, private route: ActivatedRoute, private dialog: MatDialog, private http:HttpClient) {\n    this.plantmodels=[]\n   }\n  displayedColumns:string[]=['productsAvailable','productName','productPrice','productAddress','productAge','sizeOfProduct','action'];\n\n  ngOnInit(): void {\n    this.getAllProducts(this.ownerEmailId);\n  }\n  getAllProducts(ownerEmailId:string){\n    this.service.getProductListByownerEmailID(ownerEmailId).subscribe(res=>{\n     \n      this.plantmodels=res;\n      console.log(this.plantmodels)\n    })\n  }\n\n  deleteProduct(productId:string){\n    this.service.deleteProduct(productId).subscribe(()=>{\n      this.notifierService.showNotification('Product Deleted Succesfully','OK');\n    this.getAllProducts(this.ownerEmailId);\n      \n     //,error:()=>{\n    //    this.notifierService.showNotification('error while deleting the record','OK');\n    //  }\n  })\n    \n  location.reload();\n  }\n  // deleteProduct(productId:string){\n  //   this.http.delete(\"http://localhost:8082/api/v1//delete/\"+productId).subscribe(()=>{\n  //     this.notifierService.showNotification('Product deleted successfully','ok');\n  //   });\n  // }\n\n\n\n// display = false;\nopenDialog(productId:string) {\n\n  this.service.getProductById(productId);\n\n  const dialogConfig = new MatDialogConfig();\n\n  dialogConfig.disableClose = false;\n  dialogConfig.autoFocus = true;\n  // dialogConfig.maxHeight='90vh';\n  dialogConfig.maxWidth='60vh';\n\n  this.dialog.open(ProductdetailsComponent,dialogConfig);\n  \n\n\n}\n\n}\n","\n  <mat-card>\n    <mat-card-title>List of Your Products</mat-card-title><hr/>\n    <div class=\"card\" *ngFor=\"let plantmodel of plantmodels\">\n     \n      <div class=\"container\" style=\"width: 100%;\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <app-product-image [plantmodel]=\"plantmodel\" style=\"width:50px;height:50px;\"></app-product-image>\n      </div>\n      <div class=\"col\">\n      \n        <div style=\"font-weight: bold;font-size: medium; padding-bottom: 16px;margin-top:5px\">\n          Name of Product\n        </div>\n        {{plantmodel?.productName}}\n      </div>\n      <div class=\"col\">\n       \n        <div style=\"font-weight: bold;font-size: medium; padding-bottom: 16px;margin-top:5px\">\n          Quantity in No's\n        </div>\n        {{plantmodel?.productsAvailable}}\n      </div>\n      <div class=\"col\">\n       \n        <div style=\"font-weight: bold;font-size: medium; padding-bottom: 16px;margin-top:5px\">\n          Product Price\n        </div>\n        {{plantmodel?.productPrice}}/item\n      </div>\n      <div class=\"col\">\n        \n        <div style=\"font-weight: bold;font-size: medium; padding-bottom: 16px;margin-top:5px\">\n          Product Age\n        </div>\n        {{plantmodel?.productAge}}\n      </div>\n      <div class=\"col\">\n       \n        <div style=\"font-weight: bold;font-size: medium;padding-bottom: 16px;margin-top:5px\">\n          Product Address\n        </div>\n        {{plantmodel?.productAddress}}\n      </div>\n      <div class=\"col\">\n        \n        <div style=\"font-weight: bold;font-size: medium;padding-bottom: 16px;margin-top:5px\">\n          Size Of Product\n        </div>\n        {{plantmodel?.sizeOfProduct}}\n      </div>\n      <div class=\"col-2\">\n        <div style=\"font-weight: bold;font-size: medium;padding-bottom: 25px;margin-top:5px\">Actions</div>\n        <button mat-icon-button color=\"primary\" routerLink=\"/sellerhomepage/seller/update/{{plantmodel.productId}}\"><mat-icon>edit</mat-icon></button>\n        <button mat-icon-button color=\"warn\" (click)=\"deleteProduct(plantmodel.productId)\"><mat-icon>delete</mat-icon></button>\n        <button mat-icon-button color=\"accent\" mat-raised-button (click)=\"openDialog(plantmodel.productId)\"><mat-icon>info</mat-icon></button>\n      </div>\n\n     \n  </div>\n</div>\n</div>\n</mat-card>\n\n\n  \n\n   \n            \n\n           \n            ","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport {  Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  isExpanded: boolean = false;\n\n  constructor(private service:ApiService,private httpClient: HttpClient,private route:Router) { \n  }\n  emailid :string\n  \n  ngOnInit(): void {\n  \n    this.emailid=window.localStorage.getItem('loginEmail');\n    console.log(this.emailid);\n  }\n  LogOut(){\n    this.route.navigate(['/register']);\n    localStorage.clear();\n   }\n}\n","\n    \n    <mat-sidenav-container autosize>\n      <mat-sidenav #sidenav mode=\"side\" opened=\"isExpanded\">\n      \n    \n      \n        <button mat-button (click)=\"isExpanded = !isExpanded\" style=\"margin-top:15px;\">\n            <mat-icon mat-list-icon class=\"chevron-button\" [ngClass]=\"{ rotated: isExpanded }\">menu\n            </mat-icon>\n          </button><br/>\n          \n        \n            <button mat-button style=\"margin-top:30px;\" routerLink=\"/navbar/customerhomepage\">\n            <mat-icon mat-list-icon>home</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\" >Home</span>\n            </button><br/>\n        \n    \n      \n            <!-- <button mat-button style=\"margin-top:16px;\">\n              <mat-icon>shopping_cart</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\">Cart</span>\n            </button><br/> -->\n         \n        \n            <button mat-button style=\"margin-top:16px;\" routerLink=\"/navbar/customerorderlist\">\n            <mat-icon mat-list-icon>supervisor_account</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\">Order List</span>\n            </button><br/>\n         \n\n       \n            <button mat-button style=\"margin-top:16px;\" routerLink=\"/navbar/Editprofile\">\n            <mat-icon>create</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\">Edit Profile</span>\n            </button><br/>\n         \n    \n        \n      </mat-sidenav>\n    \n      <!-- Content - rendered Content for the current router path into the <router-outlet>, e.g. /dashboard or /info-->\n       \n      <mat-sidenav-content>\n       \n        <mat-toolbar>\n             \n          \n            <span >Prakritik</span>\n            <span class=\"example-spacer\"></span>\n            \n            <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n              <mat-icon style=\"position:relative;right:5\">account_circle</mat-icon>\n            </button>\n              <span>\n              <div  style=\"margin-right:160px\">\n                <div class=\"card-header\" style=\"font-size:small\">{{emailid}}</div>\n                </div>\n              </span>\n             <mat-menu #menu=\"matMenu\">\n             <button mat-menu-item routerLink=\"/navbar/profile\">My Profile</button>\n            <button mat-menu-item (click)=\"LogOut()\">Log Out</button>\n            </mat-menu>\n         \n           </mat-toolbar>\n          \n        <router-outlet></router-outlet>\n        \n        \n      </mat-sidenav-content>\n    </mat-sidenav-container>\n    \n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { UserRegistration } from '../../models/register/user-registration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  // baseUrl = \"http://localhost:8080\" \n  baseUrl = \"https://prakritik.stackroute.io\";\n  \n\n  constructor(private httpClient: HttpClient) { }\n\n\n  registerUser(user: UserRegistration): Observable<Object> {\n    console.log(user);\n    return this.httpClient.post(this.baseUrl + \"/registration-service/api/v1/registeruser\", user);\n    \n  }\n\n\n  registerUserMySQL(user:UserRegistration): Observable<Object> {\n    console.log(user);\n    return this.httpClient.post(this.baseUrl+\"/authentication-service/create\",user);\n    \n  }\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n@Component({\n  selector: 'app-updateproductlist',\n  templateUrl: './updateproductlist.component.html',\n  styleUrls: ['./updateproductlist.component.css']\n})\nexport class UpdateproductlistComponent implements OnInit {\n  @ViewChild('stepper') stepper: MatStepper;\n  productObject: PlantModel = new PlantModel();\n  profileFormGroup!: FormGroup;\n  files: any[] = [];\n  \n  constructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router,private route:ActivatedRoute ){\n  }\n  ngOnInit(): void {\n    this.profileFormGroup= new FormGroup({\n      ownerEmailId:new FormControl(window.localStorage.getItem['loginEmail'],Validators.required),\n      shopName:new FormControl(\"\",Validators.required),\n      ownerContactNo:new FormControl(\"\",Validators.required),\n    productId:new FormControl(\"\"),\n    productsAvailable:new FormControl(\"\",Validators.required),\n    productName:new FormControl(\"\",Validators.required),\n    productPrice:new FormControl(\"\",Validators.required),\n    productAddress:new FormControl(\"\",Validators.required),\n    productImage:new FormControl(\"\"),\n    productAge:new FormControl(\"\",Validators.required),\n    sizeOfProduct:new FormControl(\"\",Validators.required),\n    waterRequirement:new FormControl(\"\",Validators.required),\n    sunlightRequirement:new FormControl(\"\",Validators.required),\n    toxicity:new FormControl(\"\",Validators.required),\n    description:new FormControl(\"\",Validators.required),\n     });\n   this.service.getCurrentData(this.route.snapshot.params.id).subscribe((res)=>{\n    this.profileFormGroup=new FormGroup({\n      ownerEmailId:new FormControl(res['ownerEmailId']),\n      shopName:new FormControl(res['shopName']),\n      ownerContactNo:new FormControl(res['ownerContactNo']),\n      productsAvailable:new FormControl(res['productsAvailable']),\n      productName:new FormControl(res['productName']),\n      productPrice:new FormControl(res['productPrice']),\n      productImage:new FormControl(res['productImage']),\n      productAddress:new FormControl(res['productAddress']),\n      productAge:new FormControl(res['productAge']),\n      sizeOfProduct:new FormControl(res['sizeOfProduct']),\n      waterRequirement:new FormControl(res['waterRequirement']),\n      sunlightRequirement:new FormControl(res['sunlightRequirement']),\n      toxicity:new FormControl(res['toxicity']),\n      description:new FormControl(res['description'])\n    })\n    })\n  }\n  // OnSubmit(){\n  //   console.log('formValue', this.profileFormGroup.value);\n  //   this.productObject.productName = this.profileFormGroup.value.productName;\n  //   this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n  //   this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n  //   this.productObject.sellerEmailId= this.profileFormGroup.value.sellerEmailId;\n  //   this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n  //   this.productObject.productAge= this.profileFormGroup.value.productAge;\n  //   this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n  //   this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n  //   this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n  //   this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n  //   this.productObject.description= this.profileFormGroup.value.description;\n  //   this.productObject.productId=this.profileFormGroup.value.productId;\n  //   this.service.updatePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n  //     console.warn(\"result is here\", result)\n  //        this.profileFormGroup.reset();\n  //        this.router.navigate(['/home']);\n  //   })\n  // }\n  days: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\n  sunlightRequirement!: string;\n  parts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                  'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                  'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                  'Full shade – Plants require less than 3 hours of direct sun per day'];\n  sizeOfPlant!: string;\n  sizes:string[]=['Small','Medium','Big']\n  toxicity!:string;\n  results:string[]=['Yes','No']\n  urllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n  onFileChanged(files) {\n    this.prepareFilesList(files);\n  }\n  prepareFilesList(files: Array<any>) {\n    for (const item of files) {\n      item.progress = 0;\n      this.files.push(item);\n    }\n    this.uploadFilesSimulator(0);\n  }\n  uploadFilesSimulator(index: number) {\n    setTimeout(() => {\n      if (index === this.files.length) {\n        return;\n      } else {\n        const progressInterval = setInterval(() => {\n          if (this.files[index].progress === 100) {\n            clearInterval(progressInterval);\n            this.uploadFilesSimulator(index + 1);\n          } else {\n            this.files[index].progress += 5;\n          }\n        }, 200);\n      }\n    }, 1000);\n  }\n  formatBytes(bytes, decimals) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\nOnSubmit(){\n  this.service.putProduct(this.profileFormGroup.value,this.route.snapshot.params.id).subscribe((res=>{\n    this.notifierService.showNotification('Product Data Updated succesfully','OK'),\n    this.router.navigate(['/sellerhomepage/home'])\n  }))\n}\n}","<div class=\"container-fluid\">\n  <mat-horizontal-stepper >\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n         <mat-card class=\"profile\">\n              <mat-card-title>Profile of the Plants</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Profile</ng-template>\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Email Id</mat-label>\n                  <input\n                    matInput\n                    class=\"plantId w-100\"\n                    formControlName=\"ownerEmailId\"\n                    required\n                  /> </mat-form-field\n                >\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Shop Name</mat-label>\n                  <input\n                    matInput\n                    class=\"productId w-100\"\n                    formControlName=\"shopName\" required\n                    \n                  /> </mat-form-field\n                >\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Contact Number</mat-label>\n                  <input\n                    matInput\n                    class=\"productId w-100\"\n                    formControlName=\"ownerContactNo\" required\n                    \n                  /> </mat-form-field\n                >\n                \n                \n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Quantity(.in No's)</mat-label>\n                  <input\n                    matInput\n                    class=\"plantId w-100\"\n                    formControlName=\"productsAvailable\"\n                    required\n                  /> </mat-form-field\n                ><br />\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Product Name</mat-label>\n                  <input\n                    matInput\n                    formControlName=\"productName\"\n                    required\n                  /> </mat-form-field\n                ><br />\n              \n                <div class=\"img_container\">\n                  <div>\n                    <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                </div>\n                <div>\n                   \n                    <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                </div>\n                </div>\n                <mat-card-actions >\n                  <button\n                    mat-raised-button\n                    color=\"primary\"\n                    style=\"margin-left:600px\"\n                     matStepperNext\n                  >\n                    Next\n                  </button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n  \n        </mat-step>\n  \n        <!-------step 2----->\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n          <mat-card class=\"profile\">\n            <mat-card-title>Requirements of Product</mat-card-title>\n            <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n              <ng-template matStepLabel>Requirements</ng-template>\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Product Price</mat-label>\n                <input matInput type=\"number\" formControlName=\"productPrice\" [ngModel]=\"productPrice | currency\" required />\n                <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n              </mat-form-field>\n  \n              <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                <mat-label>Product Address</mat-label>\n                <input matInput formControlName=\"productAddress\" required />\n              </mat-form-field>\n  \n              <mat-form-field class=\"productage\" appearance=\"outline\">\n                <mat-label style=\"width:50%\">Product Age</mat-label>\n                <input matInput formControlName=\"productAge\" type=\"number\" required/>\n                <mat-hint [align]=\"'end'\">*Number of Days Old</mat-hint>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n              <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n              <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\" required>\n               <mat-option>--Select--</mat-option>\n               <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                {{day}}\n               </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n              <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\" required>\n               <mat-option>--Select--</mat-option>\n               <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                {{part}}\n               </mat-option>\n              </mat-select>\n            </mat-form-field>\n  \n            \n              <mat-card-actions>\n                <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n              </mat-card-actions>\n            </form>\n          </mat-card>\n        </mat-step>\n  \n        <!-----last step-->\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n          <mat-card class=\"profile\">\n            <mat-card-title>About Product</mat-card-title>\n            <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n              <ng-template matStepLabel>You are almost done....</ng-template>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\" required>\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-label id=\"toxicity\"\n                >State Whether the Product is toxic to pets, kids:\n              </mat-label>\n              <mat-radio-group\n                aria-labelledby=\"toxicity\"\n                formControlName=\"toxicity\"\n                class=\"example-radio-group\"\n                [(ngModel)]=\"toxicity\">\n                <mat-radio-button\n                  class=\"example-radio-button block\"\n                  *ngFor=\"let result of results\"\n                  [value]=\"result\"\n                  >\n                  {{ result }}\n                </mat-radio-button>\n              </mat-radio-group>\n  \n  \n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Description of the Product</mat-label>\n                <textarea\n                  matInput\n  \n                  rows=\"10\" col=\"50\"\n                  formControlName=\"description\" required\n                ></textarea>\n                <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n              </mat-form-field>\n            </form>\n            <mat-card-actions>\n              <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n              <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Update</button>\n            </mat-card-actions>\n          </mat-card>\n        </mat-step>\n      </mat-horizontal-stepper>\n  \n  \n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-cusproductdetails',\n  templateUrl: './cusproductdetails.component.html',\n  styleUrls: ['./cusproductdetails.component.css']\n})\nexport class CusproductdetailsComponent implements OnInit {\n[x: string]: any;\n\n  constructor(public service:ApiService) { }\n  details:any;\n  \n  //  wnd = window.open(\"about:blank\", \"\");\n   wnd:any;\n  ngOnInit(): void {\n    this.service.getProductDetails().subscribe(val => {this.details=val});\n  }\n  buyNow(){\n    // this.wnd = window.open(\"about:blank\", \"\");\n    // this.service.getPaymentPage().subscribe(val => console.warn(val));\n    // this.service.postPaymentPage(this.details);\n      // this.service.postProduct(this.data);\n      window.open(\"https://prakritik.stackroute.io/payment-service/\"+this.details.productPrice+\"/\"+this.details.productName+\"/\"+this.details.productId);\n      console.log(this.details);\n    }\n}\n// {\n//   \"orderId\": \"120\",\n//   \"customerName\": \"Mohan\",\n//   \"productName\": \"Rose\",\n//   \"productPrice\": \"150\",\n//   \"customerEmailId\": \"abc@gmail.com\",\n//   \"ownerName\": \"Raju\",\n//   \"ownerEmailId\": \"raju@gmail.com\",\n//   \"ownerAddress\": \"MUMBAI\",\n//   \"orderDate\": \"13/11/2022\",\n//   \"Quantity\": \"2\",\n//   \"ownerContactNo\": \" 8574963223\",\n//   \"customerContactNo\": \"9504642479\"\n// }","<div class=\"card\" >\n  \n    <div class=\"card-header\">\n      Featured\n    </div>\n    <img src=\"data:image/png;base64,{{details.productImage}}\"\n                    style=\"width: auto; height: 300px;\" alt=\"Image\">\n                    <!-- <app-product-image [plantmodel]=\"plantmodel\"></app-product-image> -->\n                    <div class=\"card-body\">\n                      <div style=\"width: 30%; float:left\">\n                            <p><mat-icon matTooltip=\"Price\">currency_rupee</mat-icon>&nbsp;&nbsp;{{details.productPrice}}/item</p>\n                            <p><mat-icon matTooltip=\"Quantity of plant available\">production_quantity_limits</mat-icon>&nbsp;&nbsp;{{details.productsAvailable}}</p>\n                            <p><mat-icon matTooltip=\"Plant name\">yard</mat-icon>&nbsp;&nbsp;{{details.productName}}</p>\n                            <p><mat-icon matTooltip=\"Address of seller\">location_on</mat-icon>&nbsp;&nbsp;{{details.productAddress}}</p>\n                     </div>\n                     <div style=\"width: 50%; float:right\">\n                      <p><mat-icon matTooltip=\"Toxicity\">warning</mat-icon>&nbsp;&nbsp;{{details.toxicity}}</p>\n                      <p><mat-icon matTooltip=\"Size of plant\">fullscreen</mat-icon>&nbsp;&nbsp;{{details.sizeOfProduct}}</p>\n                      <p><mat-icon matTooltip=\"Sunlight requirement\">wb_sunny</mat-icon>&nbsp;&nbsp;{{details.sunlightRequirement}}</p>\n                      <p><mat-icon matTooltip=\"Water requirement\">water_drop</mat-icon>&nbsp;&nbsp;{{details.waterRequirement}}</p>\n                     </div>            \n    </div>\n    <ul>\n      <li><p><mat-icon matTooltip=\"Plant description\">description</mat-icon>&nbsp;&nbsp;{{details.description}}</p></li>\n    </ul>\n    <button class=\"btn btn-primary\" (click)=\"buyNow()\">PayNow</button>\n  </div>","import { CusproductdetailsComponent } from './../components/cusproductdetails/cusproductdetails.component';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-customerhomepage',\n  templateUrl: './customerhomepage.component.html',\n  styleUrls: ['./customerhomepage.component.css']\n})\nexport class CustomerhomepageComponent implements OnInit {\n  \n  cards: any;\n  \n\n  constructor(private service:ApiService,private httpClient: HttpClient, private dialog: MatDialog) { \n    this.cards=[];\n  }\n  ids:any;\n  public plant; \n  public psearch:string='';\n  ngOnInit(): void {\n    // this.retrivedImage='data:image/jpg;base64,'+this.plantModel.productImage;\n   this.getAllProducts();\n    // this.service.getProduct().subscribe(data=>{\n    //   this.plant=data;\n    // })\n  }\n  \n  getAllProducts(){\n    this.service.getProduct().subscribe({next:(response)=>this.cards=response});\n  }\n    openDialog(productId:string) {\n    \n      this.service.getProductById(productId);\n      const dialogConfig = new MatDialogConfig();\n    \n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      // dialogConfig.maxHeight='90vh';\n      dialogConfig.maxWidth='60vh';\n    \n    \n      this.dialog.open(CusproductdetailsComponent,dialogConfig);\n    }\n}\n","<!--HOME section start-->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css\">\n<div>\n\n <section class=\"home\" id=\"home\">\n  \n  <div class=\"content\">\n    <h3>Fresh and <span>Organic</span> Products For You</h3>\n    <p style=\"font-weight: bold; font-size: 22px;\">Keeping indoor plants has become a trend nowadays. Buy Cactus and Succulents online from Nurserylive at lowest price. Exciting Gifts & more. Get 6 Plants Free Buy Now. Diwali Offers. Shop Now. Plants worth ₹ 1500 Free. Types: Get 6 Plants Free, Diwali Offers.</p>\n    <!-- <a href=\"#\" class=\"btn\">Shop now </a> -->\n      <!-- <form class=\"d-flex\">\n              <input\n                class=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n        \n              <button type=\"button\" class=\"btn btn-search\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  fill=\"white\"\n                  class=\"bi bi-search\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path\n                    d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"\n                  ></path>\n                </svg>\n              </button>\n            </form> -->\n            <div class=\"search-hero\"style=\"justify-content: center;\">\n              <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"psearch\" autocomplete=\"off\" placeholder=\"&#61442;   Start searching for a products\" style=\"width: 700px; margin-left: 300px;  \" >\n            </div>\n    \n  \n  </div>\n</section>\n \n<!--HOME section End-->\n\n\n\n<!--product section start-->\n\n<h1 class=\"heading\"> Our <span>Products</span></h1>\n\n     <div class=\"container\" *ngFor=\"let plantmodel of cards | searchByName: psearch\" style=\"height: 20rem; margin-left: 20px;display: inline-block;justify-content: space-between; width: 300px;padding-top: 3%;\" (click)=\"openDialog(plantmodel.productId)\">\n      <mat-card class=\"card-body\" style=\"width: 300px;margin-top: 10px;\">\n              \n        <!-- <img (click)=\"openDialog(card.id)\" style=\"height: 200px ;width: 200px;\" src=\"assets/images/sunflower1.jpg\" alt=\"Plant_Image\" class=\"card-img-bottom \">             -->\n        <!-- <img (click)=\"openDialog(card.id)\"[src]=\"retrivedImage\" alt=\"Plant_Image\" style=\"height: 200px ;width: 200px;\"> -->\n        <app-product-image [plantmodel]=\"plantmodel\"></app-product-image>\n  <p style=\"font-weight: bold;\" ><mat-icon>shop</mat-icon> {{plantmodel.productName}}</p>\n  \n  <p  >{{plantmodel.description}}</p> \n  <p style=\"font-weight: bold;\">&#8377;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{plantmodel.productPrice}}</p> \n  \n  <a href=\"#\" class=\"btn\">Buy Now</a>\n\n\n  </mat-card>\n  \n  </div>\n<!--Features section start-->\n\n<!-- <section class=\"features\" id=\"features\">\n\n  <h1 class=\"heading\"> Our <span>Features</span></h1>\n\n  <div class=\"box-container\">\n\n<div class=\"row\">\n  \n\n\n    <div class=\"box col-4\">\n      <mat-card>\n      <img src=\"/assets/feature-img-1.png\" alt=\"\">\n      <h3>Fresh And Organic</h3>\n      <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil facilis minus hic porro voluptas beatae praesentium ipsa vero at .</p>\n      <a href=\"#\" class=\"btn\">Read more</a>\n    </mat-card>\n    </div>\n  \n\n\n  <div class=\"box col-4\">\n    <mat-card>\n    <img src=\"/assets/feature-img-2.png\" alt=\"\">\n    <h3>Free Delivary</h3>\n    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil facilis minus hic porro voluptas beatae praesentium ipsa vero at .</p>\n    <a href=\"#\" class=\"btn\">Read more</a>\n  </mat-card>\n  </div>\n\n  <div class=\"box col-4\">\n    <mat-card>\n    <img src=\"/assets/feature-img-3.png\" alt=\"\">\n    <h3>Easy Payment</h3>\n    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil facilis minus hic porro voluptas beatae praesentium ipsa vero at .</p>\n    <a href=\"#\" class=\"btn\">Read more</a>\n  </mat-card>\n  </div>\n</div>\n</div>\n</section> -->\n\n<!--Features section End-->\n\n<!--product section start-->\n\n<!-- <h1 class=\"heading\"> Our <span>Products</span></h1>\n\n     <div class=\"container\" *ngFor=\"let card of cards\" style=\"height: 20rem; margin-left: 20px;display: inline-block;justify-content: space-between; width: 300px;padding-top: 3%;\">\n      <mat-card class=\"card-body\" style=\"width: 300px;margin-top: 10px;\">\n              \n        <img (click)=\"openDialog(card.id)\" style=\"height: 200px ;width: 200px;\" src=\"assets/images/sunflower1.jpg\" alt=\"Plant_Image\" class=\"card-img-bottom \">            \n    \n  <p  style=\"font-size:small\"><mat-icon>speaker_group</mat-icon> {{card.productName}}</p>\n  <p style=\"font-size:small\">&#8377;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{card.productPrice}}</p> \n  <p  style=\"font-size:small\">{{card.description}}</p> \n  <p  style=\"font-size:small\">{{card.productAge}}</p>\n  \n  <a href=\"#\" class=\"btn\">Buy Now </a>\n\n\n  </mat-card>\n  </div> -->\n\n  \n  \n\n\n<!--product section end-->\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { of } from 'rxjs';\nimport { ApiService } from 'src/app/services/api.service';\n\n\n\n@Component({\n  selector: 'app-customerorderlist',\n  templateUrl: './customerorderlist.component.html',\n  styleUrls: ['./customerorderlist.component.css']\n})\nexport class CustomerorderlistComponent implements OnInit {\n  orderedData:any;\n  cards:any;\n  orderList:any;\n  customerEmailId:string=window.localStorage.getItem('loginEmail');\n  \nproductId:string;\n  constructor(private httpClient: HttpClient, private _snackBar: MatSnackBar,private service:ApiService) {\n    this.orderList=[];\n    this.cards=[];\n    this.orderedData=[];\n\n   }\n  //  for (var index in imageList) {\n  //   console.log(val); // prints values: 10, 20, 30, 40\n  // }\n\n  ngOnInit(): void {\n  this.getorderList(this.customerEmailId);\n  this.getAllProducts(this.productId);\n  }\n\n  getorderedData(orderId:string){\n      this.service.getOrderedlistByorderId(orderId).subscribe((result:any)=>{\n        this.orderedData=result;\n         console.log(result);\n      })\n  }\n\n//  this.service.testCallback.subscribe(this.request, this.success(r), this.error());\n\n  getorderList(customerEmailId:string){\n    this.service.getOrderedlist(customerEmailId).subscribe((result:any)=>{\n      \n      this.orderList=result;\n    }, this.callImage\n    \n    )\n       //console.log(this.image(result[0].productId));    \n   \n  }\n\n  callImage(){\n    this.orderList.forEach(function (value) {\n      console.log(value.productId);\n\n//    // this.image(value.productId);\n//     // this.service.getPictureById(value.productId).subscribe((res:any)=>{\n//     //   value.image = res.productImage;\n//     //   console.log(value);\n//     // })\n\n      localStorage.setItem(\"productId\",value.productId);\n });\n\n  }\n\n//   image(value:any) {\n//     this.service.getPictureById(value).subscribe((res:any)=>{\n//          //  value.image = res.productImage;\n//            console.log(res.productImage);\n//          }) \n//  }\n  \n  // getImage(productId:string){\n  //   this.service.getCurrentData(productId).subscribe((result:any)=>{\n  //     this.cards=result;\n  //     console.log(result);\n  //   })\n  // }\n\n  getAllProducts(productId:string){\n    this.service.getPictureById(productId).subscribe((res:any)=>{\n      console.log(res);\n      this.cards=res;\n    })\n  }\n\n\n \n  CancelOrderById(orderId:string, message: string, action: string){\n    this.service.CancelOrder(this.orderedData,orderId).subscribe((result:any)=>{\n\n      console.log(result);\n      message='Order Cancelled',\n      action='Successfully done !!'\n      this._snackBar.open(message, action);\n\n    })\n    \n    location.reload();\n  }\n}\n\nfunction mergeMap(arg0: (res2: any) => any): null {\n  throw new Error('Function not implemented.');\n}\n","<div class=\"container\" style=\"margin-top: 70px;  margin-left: 150px;\" >\n       \n    <div class=\"text\" style=\" font-weight: bold; width:20rem;height: 30px; margin-left: 20px;  color: rgb(9, 1, 1);\"><h1 class=\"text\" style=\"font-weight:bold ;color: rgb(187, 208, 212);\">Booking History</h1></div>\n<div class=\"card-text-center\" *ngFor=\"let OrderDetails of orderList\" style=\" padding-bottom: 1%;\">\n <mat-card class=\"card-body\">\n  \n   <div class=\"row\" style=\"width:66rem; display: block; height: 20rem;\">\n      \n           <div  fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px;display: inline-block; float: left;\" >                 \n              <img style=\"height: 300px ;\" src=\"https://us.123rf.com/450wm/fillvector/fillvector2005/fillvector200503920/fillvector200503920.jpg?ver=6\" alt=\"Plant_Image\" class=\"card-img-bottom \"> \n        \n              <!-- <app-product-image [plantmodel]=\"plantmodel\"></app-product-image> -->\n           </div>\n\n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px; display: inline-block; float: inline-start;\">\n          \n               \n                   <div class=\"card-header\" style=\"margin-top:10px ;\"><mat-icon>spa</mat-icon>&nbsp;&nbsp;{{OrderDetails?.productName}}</div>\n                   <div class=\"card-body\">                         \n                       <p><mat-icon>person</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerName}}</p>\n                       <p><mat-icon>loupe</mat-icon> Quantity:&nbsp;&nbsp;{{OrderDetails?.Quantity}}</p>\n                       <p>&#8377;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{OrderDetails?.productPrice}}&nbsp;/item</p>\n                       <p><mat-icon>contact_support</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderStatus}}</p>\n                       <p><mat-icon>mail_outline</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerEmailId}}</p>\n                       <p><mat-icon>calendar_today</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderDate}} &nbsp;&nbsp;&nbsp;\n                           <button mat-stroked-button (click)=\"CancelOrderById(OrderDetails.orderId, message , action)\">Cancel Order</button></p>\n\n                   </div>                       \n                \n           </div>\n\n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px;display: inline-block; float: inline-end;\">\n              \n                   <div class=\"card-header\"><mat-icon>person</mat-icon>&nbsp;&nbsp; Shop Name</div>\n                   <div class=\"card-body\" >\n                       <h5 class=\"card-title\">Special service Available</h5>\n                       <p><mat-icon>store alt</mat-icon>&nbsp;&nbsp;{{OrderDetails?.shopName}}</p>\n                       <p><mat-icon>mail_outline</mat-icon>&nbsp;&nbsp;{{OrderDetails?.ownerEmailId}}</p>\n                       <p><mat-icon>call</mat-icon>&nbsp;&nbsp;{{OrderDetails?.ownerContactNo}}</p>\n                       <p><mat-icon>#picker</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderId}}</p>\n                       <p><mat-icon>room</mat-icon>&nbsp;&nbsp;{{OrderDetails?.ownerAddress}}</p> \n                   </div>  \n              \n           </div>\n        \n   </div>\n    \n </mat-card> \n</div> \n\n</div>","import { CustomerhomepageComponent } from './customerhomepage/customerhomepage.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerorderlistComponent } from './components/customerorderlist/customerorderlist.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProfileUserComponent } from './components/profile-user/profile-user.component';\nimport { RegisterUserComponent } from './components/register-user/register-user.component';\nimport { SellerComponent } from './components/seller/seller.component';\nimport { SellerhomepageComponent } from './components/sellerhomepage/sellerhomepage.component';\nimport { SellernavbarComponent } from './components/sellernavbar/sellernavbar.component';\nimport { SellerorderlistComponent } from './components/sellerorderlist/sellerorderlist.component';\nimport { UpdateproductlistComponent } from './components/updateproductlist/updateproductlist.component';\nimport { UserprofileComponent } from './components/userprofile/userprofile.component';\nimport { SeedslistComponent } from './components/seedslist/seedslist.component';\nimport { MedicinesComponent } from './components/medicines/medicines.component';\nimport { LandingpageComponent } from './components/landingpage/landingpage.component';\n\n\nconst routes: Routes = [\n   {path: 'register', component: RegisterUserComponent},\n{path:'', component:LandingpageComponent},\n   \n  {\n  path: 'sellerhomepage',\n  component: SellernavbarComponent,\n  children : [\n{path: 'home', component: SellerhomepageComponent\n},\n{path: 'Editprofile', component: ProfileUserComponent\n},\n{\n  path: 'seller', component: SellerComponent\n},\n{\n  path: 'seedslist', component: SeedslistComponent\n},\n{\n  path: 'medicines', component: MedicinesComponent\n},\n{\n  path: 'orderList', component: SellerorderlistComponent\n},\n{\n  path: 'seller/update/:id', component: UpdateproductlistComponent\n},\n{\n  path: 'profile', component: UserprofileComponent\n},\n{\n  path: 'custhome', component: CustomerhomepageComponent\n}\n]\n},\n{\n  path: 'navbar', component: NavbarComponent,\n  children: [\n    {\n      path: 'customerhomepage', component: CustomerhomepageComponent\n    },\n    {\n      path: 'customerorderlist', component: CustomerorderlistComponent\n    },\n    {path: 'Editprofile', component: ProfileUserComponent\n},\n{\n  path: 'profile', component: UserprofileComponent\n},\n  ]\n},\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}