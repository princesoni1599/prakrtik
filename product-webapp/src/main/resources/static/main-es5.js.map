{"version":3,"sources":["webpack:///src/app/components/seedslist/seedslist.component.ts","webpack:///src/app/components/seedslist/seedslist.component.html","webpack:///src/app/plantmodel.ts","webpack:///src/app/models/register/user-registration.ts","webpack:///src/app/components/register-user/register-user.component.ts","webpack:///src/app/components/register-user/register-user.component.html","webpack:///src/app/services/notifier.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/profile-user/profile-user.component.ts","webpack:///src/app/components/profile-user/profile-user.component.html","webpack:///src/app/product-image/product-image.component.ts","webpack:///src/app/product-image/product-image.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/app/components/sellerorderlist/sellerorderlist.component.ts","webpack:///src/app/components/sellerorderlist/sellerorderlist.component.html","webpack:///src/app/components/updateseeds/updateseeds.component.ts","webpack:///src/app/components/updateseeds/updateseeds.component.html","webpack:///src/app/search-by-name.pipe.ts","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/updatemedicines/updatemedicines.component.ts","webpack:///src/app/components/updatemedicines/updatemedicines.component.html","webpack:///src/app/components/medicines/medicines.component.ts","webpack:///src/app/components/medicines/medicines.component.html","webpack:///src/app/components/sellernavbar/sellernavbar.component.ts","webpack:///src/app/components/sellernavbar/sellernavbar.component.html","webpack:///src/app/home.service.ts","webpack:///src/app/components/userprofile/userprofile.component.ts","webpack:///src/app/components/userprofile/userprofile.component.html","webpack:///src/app/components/landingpage/landingpage.component.ts","webpack:///src/app/components/landingpage/landingpage.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/productdetails/productdetails.component.ts","webpack:///src/app/components/productdetails/productdetails.component.html","webpack:///src/app/components/seller/seller.component.ts","webpack:///src/app/components/seller/seller.component.html","webpack:///src/app/services/login/login.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/models/login/user-dao.ts","webpack:///src/app/components/sellerhomepage/sellerhomepage.component.ts","webpack:///src/app/components/sellerhomepage/sellerhomepage.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/register/register.service.ts","webpack:///src/app/components/updateproductlist/updateproductlist.component.ts","webpack:///src/app/components/updateproductlist/updateproductlist.component.html","webpack:///src/app/components/cusproductdetails/cusproductdetails.component.ts","webpack:///src/app/components/cusproductdetails/cusproductdetails.component.html","webpack:///src/app/customerhomepage/customerhomepage.component.ts","webpack:///src/app/customerhomepage/customerhomepage.component.html","webpack:///src/app/components/customerorderlist/customerorderlist.component.ts","webpack:///src/app/components/customerorderlist/customerorderlist.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SeedslistComponent","fb","service","notifierService","router","productObject","files","days","ages","parts","sizes","results","urllink","profileFormGroup","ownerEmailId","window","localStorage","getItem","required","shopName","ownerContactNo","productId","productsAvailable","productName","productPrice","productAddress","productImage","productAge","sizeOfProduct","waterRequirement","sunlightRequirement","toxicity","description","console","log","value","savePlantModel","subscribe","result","showNotification","reset","navigate","prepareFilesList","item","progress","push","uploadFilesSimulator","index","setTimeout","length","progressInterval","setInterval","clearInterval","bytes","decimals","k","dm","i","Math","floor","parseFloat","pow","toFixed","OnSubmit","selector","templateUrl","styleUrls","stepper","PlantModel","UserRegistration","email","password","userRole","RegisterUserComponent","registerService","formBuilder","loginService","snackBar","notifier","user","errorMessage1","submitted","roles","loginObj","form","loginUser","data","setItem","error","errorMessage","registerUserMySQL","res","registerUser","SaveData","SaveData1","NotifierService","displayMessage","buttonText","open","duration","horizontalPosition","verticalPosition","providedIn","environment","production","HomeComponent","home","items","name","price","checkoutForm","group","address","saveUser","warn","x","ProfileUserComponent","http","route","ngForm","firstName","lastName","dob","gender","contactNumber","getCurrentUserDetails","UpdateUserDetails","ProductImageComponent","_sanitizer","retrivedImage","plantmodel","ApiService","baseUrl","get","post","productObj","FormData","append","JSON","stringify","put","customerEmailId","details","orderId","Quantity","SellerorderlistComponent","httpClient","SellerList","getSellerList","response","UpdateseedsComponent","sellerEmailId","getCurrentData","snapshot","params","id","putProduct","SearchByNamePipe","psearch","filter","plant","toLowerCase","indexOf","FooterComponent","UpdatemedicinesComponent","MedicinesComponent","SellernavbarComponent","isExpanded","emailid","clear","LogOut","HomeService","url","UserprofileComponent","gender_bool","getUserByEmail","val","LandingpageComponent","getProduct","next","cards","location","href","AppComponent","title","sellerData","childMessage","ProductdetailsComponent","pageTitle","Error","getProductDetails","SellerComponent","LoginService","AppModule","declarations","imports","providers","bootstrap","UserDao","SellerhomepageComponent","dialog","displayedColumns","plantmodels","getAllProducts","getProductListByownerEmailID","deleteProduct","reload","getProductById","dialogConfig","disableClose","autoFocus","maxWidth","paginator","sort","NavbarComponent","RegisterService","UpdateproductlistComponent","CusproductdetailsComponent","buyNow","CustomerhomepageComponent","CustomerorderlistComponent","_snackBar","orderList","orderedData","getorderList","getOrderedlistByorderId","getOrderedlist","callImage","forEach","getPictureById","message","action","CancelOrder","mergeMap","arg0","routes","path","component","children","AppRoutingModule","forRoot","exports","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module"],"mappings":"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AACN,iBAAKhJ,OAAL,CAAagL,UAAb,GAA0B7I,SAA1B,CAAoC;AAAC8I,kBAAI,EAAC,cAAC7I,MAAD;AAAA,uBAAU,OAAI,CAAC8I,KAAL,GAAW9I,MAArB;AAAA;AAAN,aAApC;AACD;;;kCAEI;AAEHvB,kBAAM,CAACsK,QAAP,CAAgBC,IAAhB,GAAuB,yBAAvB;AACD;;;qCAEO;AAENvK,kBAAM,CAACsK,QAAP,CAAgBC,IAAhB,GAAuB,yBAAvB;AACD;;;;;;;yBAjBUL,oB,EAAoB,wI,EAAA,gI;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA,kB;AAAA,e;AAAA,wNCCF,mJDDE,ECCqE,WDDrE,ECCqE,yEDDrE,ECCqE,aDDrE,ECCqE,WDDrE,GCCqE,8BAErE,sIAFqE,CDDrE,ECG0D,SAE3E,2IAF2E,EAEZ,KAFY,EAEZ,YAFY,CDH1D,ECK8C,2DDL9C,ECK8C,gCDL9C,ECK8C,4DDL9C,ECK8C,mFDL9C,ECK8C,8EDL9C,ECK8C,uFDL9C,ECK8C,0BDL9C,ECK8C,sFDL9C,ECK8C,yEDL9C,ECK8C,8CDL9C,ECK8C,2DDL9C,ECK8C,8NDL9C,ECK8C,+CDL9C,ECK8C,2CDL9C,ECK8C,oBDL9C,ECK8C,6KDL9C,ECK8C,2BDL9C,ECK8C,6GDL9C,ECK8C,wDDL9C,ECK8C,sBDL9C,ECK8C,6GDL9C,ECK8C,wDDL9C,ECK8C,iCDL9C,ECK8C,cDL9C,ECK8C,oBDL9C,ECK8C,UDL9C,ECK8C,mBDL9C,ECK8C,+CDL9C,ECK8C,uBDL9C,ECK8C,+CDL9C,ECK8C,+CDL9C,ECK8C,0JDL9C,ECK8C,qIDL9C,ECK8C,0JDL9C,ECK8C,mCDL9C,ECK8C,iEDL9C,ECK8C,+FDL9C,ECK8C,qBDL9C,ECK8C,oFDL9C,ECK8C,gFDL9C,ECK8C,qFDL9C,ECK8C,2EDL9C,ECK8C,+DDL9C,ECK8C,8DDL9C,ECK8C,iDDL9C,ECK8C,0GDL9C,ECK8C,4CDL9C,ECK8C,mQDL9C,ECK8C,6CDL9C,ECK8C,0CDL9C,ECK8C,qEDL9C,ECK8C,+BDL9C,ECK8C,WDL9C,ECK8C,sFDL9C,ECK8C,2BDL9C,ECK8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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\n\n\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n\n@Component({\n  selector: 'app-seedslist',\n  templateUrl: './seedslist.component.html',\n  styleUrls: ['./seedslist.component.css']\n})\nexport class SeedslistComponent implements OnInit { \n  @ViewChild('stepper') stepper: MatStepper;\nproductObject: PlantModel = new PlantModel();\nprofileFormGroup!: FormGroup;\nfiles: any[] = [];\n\n\nconstructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router ){\n\n}\n\nngOnInit(): void {\n  this.profileFormGroup= new FormGroup({\n   ownerEmailId:new FormControl(window.localStorage.getItem('loginEmail'),Validators.required),\n   shopName:new FormControl(\"\",Validators.required),\n   ownerContactNo:new FormControl(\"\",Validators.required),\n productId:new FormControl(\"\"),\n productsAvailable:new FormControl(\"\",Validators.required),\n productName:new FormControl(\"\",Validators.required),\n productPrice:new FormControl(\"\",Validators.required),\n productAddress:new FormControl(\"\",Validators.required),\n productImage:new FormControl(\"\"),\n productAge:new FormControl(\"\",Validators.required),\n sizeOfProduct:new FormControl(\"\",Validators.required),\n waterRequirement:new FormControl(\"\",Validators.required),\n sunlightRequirement:new FormControl(\"\",Validators.required),\n toxicity:new FormControl(\"\",Validators.required),\n description:new FormControl(\"\",Validators.required),\n  });\n     console.log(this.profileFormGroup.value);\n }\n OnSubmit(){\n   console.log('formValue', this.profileFormGroup.value);\n   this.productObject.productName = this.profileFormGroup.value.productName;\n   this.productObject.shopName = this.profileFormGroup.value.shopName;\n   this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n   this.productObject.ownerContactNo= this.profileFormGroup.value.ownerContactNo;\n   this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n   this.productObject.ownerEmailId= this.profileFormGroup.value.ownerEmailId;\n   this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n   this.productObject.productAge= this.profileFormGroup.value.productAge;\n   this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n   this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n   this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n   this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n   this.productObject.description= this.profileFormGroup.value.description;\n   this.productObject.productId=this.profileFormGroup.value.productId;\n\n   this.service.savePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n    this.notifierService.showNotification('Product Added Succesfully','OK')\n        this.profileFormGroup.reset();\n       \n        this.router.navigate(['/sellerhomepage/home']);\n   })\n   \n }    \n\ndays: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\nages: string[]=['null'];\n\nsunlightRequirement!: string;\nparts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                'Full shade – Plants require less than 3 hours of direct sun per day'];\n\n\nsizeOfPlant!: string;\nsizes:string[]=['NA']\n\ntoxicity!:string;\nresults:string[]=['Yes','No']\n\nurllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n\n// image input\nonFileChanged(files) {\n  this.prepareFilesList(files);\n}\nprepareFilesList(files: Array<any>) {\n  for (const item of files) {\n    item.progress = 0;\n    this.files.push(item);\n  }\n  this.uploadFilesSimulator(0);\n}\nuploadFilesSimulator(index: number) {\n  setTimeout(() => {\n    if (index === this.files.length) {\n      return;\n    } else {\n      const progressInterval = setInterval(() => {\n        if (this.files[index].progress === 100) {\n          clearInterval(progressInterval);\n          this.uploadFilesSimulator(index + 1);\n        } else {\n          this.files[index].progress += 5;\n        }\n      }, 200);\n    }\n  }, 1000);\n}\nformatBytes(bytes, decimals) {\n  if (bytes === 0) {\n    return '0 Bytes';\n  }\n  const k = 1024;\n  const dm = decimals <= 0 ? 0 : decimals || 2;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n\n\n// onSubmit(){\n//   this.service.postProduct(this.profileFormGroup.value).subscribe({\n//     next:(res)=>{\n//       console.log(res);\n//       this.notifierService.showNotification('Product Added Succesfully','OK');\n//       this.profileFormGroup.reset();\n \n//     },\n//     error:()=>{\n//       alert(\"error while adding the product\");\n//     }\n//   })\n// }\n\n}\n\n\n","<div class=\"container-fluid\">\n    <mat-horizontal-stepper >\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n           <mat-card class=\"profile\">\n                <mat-card-title>Profile of the seeds</mat-card-title>\n                <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                  <ng-template matStepLabel>Profile</ng-template>\n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Email Id</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"ownerEmailId\"\n                      required\n                    /> </mat-form-field\n                  >\n  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Shop Name</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"shopName\" required\n                      \n                    /> </mat-form-field\n                  >\n  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Contact Number</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"ownerContactNo\" required\n                      \n                    /> </mat-form-field\n                  >\n                  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Quantity(.in No's)</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"productsAvailable\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Product Name</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"productName\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  \n                  <div class=\"img_container\">\n                    <div>\n                      <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                  </div>\n                  <div>\n                     \n                      <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                  </div>\n                  </div>\n                  <mat-card-actions >\n                    <button\n                      mat-raised-button\n                      color=\"primary\"\n                      style=\"margin-left:600px\"\n                       matStepperNext\n                    >\n                      Next\n                    </button>\n                  </mat-card-actions>\n                </form>\n              </mat-card>\n    \n          </mat-step>\n    \n          <!-------step 2----->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n            <mat-card class=\"profile\">\n              <mat-card-title>Requirements of seeds</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Requirements</ng-template>\n\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Product Price</mat-label>\n                  <input matInput type=\"number\" formControlName=\"productPrice\" required />\n                  <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n                </mat-form-field>\n    \n                <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                  <mat-label>Product Address</mat-label>\n                  <input matInput formControlName=\"productAddress\" required />\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label for=\"productAge\">Product Age</mat-label>\n                  <mat-select name=\"productAge\" id=\"productAge\" formControlName=\"productAge\"   >\n                    <mat-option *ngFor=\"let age of ages\" [value]=\"age\">\n                      {{age}}\n                     </mat-option>\n                  </mat-select>\n                </mat-form-field>\n\n\n                <mat-form-field appearance=\"outline\">\n                <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n                <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\" required>\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                  {{day}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n                <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\" required>\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                  {{part}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-form-field appearance=\"outline\" >\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\"   >\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n                <mat-card-actions>\n                  <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                  <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n          </mat-step>\n    \n          <!-----last step-->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n            <mat-card class=\"profile\">\n              <mat-card-title>About Seeds</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>You are almost done....</ng-template>\n                <mat-label id=\"toxicity\"\n                  >State Whether the Product is toxic to pets, kids:\n                </mat-label>\n                <mat-radio-group\n                  aria-labelledby=\"toxicity\"\n                  formControlName=\"toxicity\"\n                  class=\"example-radio-group\"\n                  [(ngModel)]=\"toxicity\">\n                  <mat-radio-button\n                    class=\"example-radio-button block\"\n                    *ngFor=\"let result of results\"\n                    [value]=\"result\"\n                    >\n                    {{ result }}\n                  </mat-radio-button>\n                </mat-radio-group>\n    \n    \n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Description of the Product</mat-label>\n                  <textarea\n                    matInput\n    \n                    rows=\"10\" col=\"50\"\n                    formControlName=\"description\" required\n                  ></textarea>\n                  <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n                </mat-form-field>\n              </form>\n              <mat-card-actions>\n                <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Submit</button>\n              </mat-card-actions>\n            </mat-card>\n          </mat-step>\n        </mat-horizontal-stepper>\n    \n    \n      </div>","export class PlantModel{\n     \n   \n    ownerEmailId:string;\n    productsAvailable:string;\n    productName:string;\n    productPrice:number;\n    productAddress:string;\n    productAge:string;\n    waterRequirement:string;\n    sunlightRequirement:string;\n    sizeOfProduct:string;\n    toxicity:string;\n    description:string;\n    productImage:any;\n    productId:string;\n    shopName:string;\n    ownerContactNo:string;\n}","export class UserRegistration {\n\n  email: String;\n  password: String;\n  userRole:String;\n  \n\n  constructor() {\n    \n    this.email = \"\";\n    this.password = \"\";\n    this.userRole = \"\";\n    \n    \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from \"../../services/register/register.service\";\nimport { UserRegistration } from \"../../models/register/user-registration\";\nimport { Validators } from \"@angular/forms\";  \nimport Swal from \"sweetalert2\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n \n} from '@angular/forms';\nimport { LoginService } from '../../services/login/login.service';\nimport { UserDao } from '../../models/login/user-dao';\nimport { Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { NotifierService } from 'src/app/services/notifier.service';\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  user: UserRegistration = new UserRegistration();\n  errorMessage1: String = \"\";\n  //private registerService: RegisterService;\n  form: FormGroup;\n  submitted = false;\n  errorMessage:string;\n  \n  //constructor(private registerService: RegisterService,private router: Router) {}\n    \n  userRole:string;\n  roles :string[]=['Buyer','Seller'];\n\n  constructor(private registerService: RegisterService,private formBuilder: FormBuilder,private loginService:LoginService,private router: Router,private snackBar:MatSnackBar, private notifier:NotifierService) {\n    this.form=new FormGroup({\n      email:new FormControl(\"\"),\n      password:new FormControl(\"\"),\n      userRole:new FormControl(\"\")\n    });\n  }\n  \n\n\n  ngOnInit() {\n  }\n  loginObj:UserDao=new UserDao();\n  \n  SaveData(): void {\n  \n\n  \n    console.log(\"FORMDATA\",this.form.value);\n    this.loginObj.email=this.form.value.email;\n    this.loginObj.password=this.form.value.password;\n    this.loginObj.userRole=this.form.value.userRole\n    this.loginService.loginUser(this.loginObj).subscribe(data=>{\n      console.log(\"validated\",data);\n      localStorage.setItem(\"loginEmail\",this.loginObj.email)\n      localStorage.setItem(\"userRole\",this.loginObj.userRole)\n     \n      if(this.form.value.userRole=='buyer'){\n        this.router.navigate(['/navbar/customerhomepage'])\n      }else if(this.form.value.userRole=='seller'){\n        this.router.navigate(['/sellerhomepage/home'])\n      }\n      this.form.reset();\n     \n    },(\n      error=>{\n        this.notifier.showNotification(\"Incorrect Email/Password\", \"Dismiss\");\n        // console.log(error);\n         this.errorMessage=error.error;\n\n      }\n      )\n      )\n      \n     }\n     SaveData1() {\n     \n      this.registerService.registerUserMySQL(this.user).subscribe(res=>{\n        console.log(this.user);\n      })\n      //console.log(this.favoriteSeason);\n      if (\n        this.user.email == \"\" ||\n        this.user.password == \"\" || this.userRole ==\"\"\n      ) {\n       \n        // this.snackBar.open( \"Fields cannot be empty!\",\"Dissmiss\");\n        this.notifier.showNotification(\"Fields cannot be empty!\",\"Dissmiss\");\n      } \n      \n       \n     \n       else {\n        this.registerService.registerUser(this.user).subscribe(\n          (data) => {\n           \n            // this.snackBar.open(\"Successfully done !!\",\"success\");\n            this.notifier.showNotification(\"Successfully done !!\",\"success\");\n          },\n          (error) =>\n           (\n            // this.snackBar.open(\"User Already Exist!\",\"error\")\n            this.notifier.showNotification(\"User Already Exist!\",\"error\")\n        ))\n      \n      }\n    } \n}","\n\n\n\n<div class=\"login-page\">\n\n  <mat-card class=\"mat-elevation-z12\">\n    <mat-card-title style=\"text-align:center;\">SignIn/SignUp</mat-card-title>\n    <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs\">\n      \n      <mat-tab label=\"Sign In\">\n          <mat-card-content>\n            <form action=\"\" [formGroup]=\"form\" #userForm1=\"ngForm\">\n              <mat-form-field>\n                <input\n                email\n                  matInput\n                  placeholder=\"Email\"\n                  required\n                  name=\"email\"\n                  formControlName=\"email\"\n                  >\n                  <mat-error *ngIf=\"email.invalid\">Email is required</mat-error>\n                <mat-icon matSuffix>email</mat-icon>\n              </mat-form-field>\n              <mat-form-field>\n                <input\n                  matInput\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  required\n                  minlength=\"6\"\n                  name=\"password\"\n                  formControlName=\"password\" \n                  >\n                  <mat-error\n                    *ngIf=\"password.errors && password.errors.required\">\n                    Password is required\n                  </mat-error>\n                  <mat-error\n                    *ngIf=\"password.errors && password.errors.minlength\">\n                    Password must be of length 6\n                  </mat-error>\n                <mat-icon matSuffix>lock</mat-icon>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input\n                \n                  matInput\n                  placeholder=\"Enter User Role (Buyer or Seller)\"\n                  required\n                  id=\"userRole\" name=\"userRole\" formControlName=\"userRole\"\n                 >\n                  <mat-error *ngIf=\"userRole.invalid\">userRole is required</mat-error>\n               \n              </mat-form-field>\n\n\n              <mat-checkbox>Remember Me!</mat-checkbox>\n              <button\n              [disabled]=\"userForm1.invalid\"\n                mat-raised-button\n                color=\"primary\"\n                class=\"login-button\"\n                (click)=\"SaveData()\">\n                Sign In\n              </button>\n\n              <button\n                mat-raised-button\n                class=\"login-button\">\n                Login with Google\n              </button>\n            </form>\n          </mat-card-content>\n      </mat-tab>\n\n\n      <!-- Sign -up -->\n      <mat-tab label=\"Sign Up\">\n        <mat-card-content>\n          <form action=\"\" #userForm=\"ngForm\">\n            \n            <mat-form-field>\n              <input\n              email\n                matInput\n                placeholder=\"Email\"\n                required\n                id=\"email\" name=\"email\" [(ngModel)]=\"user.email\" #email=\"ngModel\"\n               >\n                <mat-error *ngIf=\"email.invalid\">Email is required</mat-error>\n              <mat-icon matSuffix>email</mat-icon>\n            </mat-form-field>\n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Password\"\n                type=\"password\"\n                required\n                minlength=\"6\"\n                id=\"password\" name=\"password\"  [(ngModel)]=\"user.password\" #password=\"ngModel\"\n                >\n                <mat-error\n                  *ngIf=\"password.errors && password.errors.required\">\n                  Password is required\n                </mat-error>\n                <mat-error\n                  *ngIf=\"password.errors && password.errors.minlength\">\n                  Password must be of length 6\n                </mat-error>\n              <mat-icon matSuffix>lock</mat-icon>\n\n            </mat-form-field>\n\n\n          <mat-form-field>\n            <input\n            \n              matInput\n              placeholder=\"Enter User Role (Buyer or Seller)\"\n              required\n              id=\"userRole\" name=\"userRole\" [(ngModel)]=\"user.userRole\" #userRole=\"ngModel\"\n             >\n              <mat-error *ngIf=\"userRole.invalid\">userRole is required</mat-error>\n           \n          </mat-form-field>\n\n            \n            <button\n            [disabled]=\"userForm.invalid\"\n              mat-raised-button\n              color=\"primary\"\n              class=\"login-button\" (click)=\"SaveData1()\">\n              Sign Up\n            </button>\n\n\n          </form>\n       \n  \n        </mat-card-content>\n      </mat-tab>\n    </mat-tab-group>\n  </mat-card>\n  \n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotifierService {\n\n  constructor(private snackBar:MatSnackBar) { }\n  showNotification(displayMessage:string, buttonText:string){\n    this.snackBar.open(displayMessage,buttonText,{\n      duration:5000,\n      horizontalPosition:'center',\n      verticalPosition:'bottom', \n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HomeService } from './../../home.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder, private home:HomeService) {}\n  ngOnInit(): void {\n    this.home.saveUser(this.items).subscribe((result)=>{\n      console.warn(result);\n    })\n  }\n   items:any = [\n    { \n      name:\"Tom\", \n      price: 500},\n    { \n      name:\"ram\", \n      price: 500\n    }\n  ];\n\n\n\n\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n\n\n  onSubmit(): void {\n    // Process checkout data here\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    let x=  this.checkoutForm.value;\n\n    this.checkoutForm.reset();\n  }\n}\n","<!DOCTYPE html>\n<html xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n    <title>Homepage</title>\n</head>\n<body class=\"bg-light pt-5\">\n\n<!--hero section-->\n<section class=\"py-5\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-7 col-md-10 col-12 my-auto mx-auto text-center\">\n                <h1>\n                    Stripe Payment\n                </h1>\n                <p class=\"lead mb-4\">\n                    What would you like to do?\n                </p>\n                <a class=\"btn btn-primary\" th:href=\"@{/subscription}\">Create Recurring Subscription</a>\n                <a class=\"btn btn-success\" th:href=\"@{/charge}\">Create One-Time Charge</a>\n                <p class=\"mt-5 text-muted\">\n                </p>\n            </div>\n        </div>\n    </div>\n</section>\n\n</body>\n</html>","import { Router } from '@angular/router';\nimport { NotifierService } from './../../services/notifier.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-profile-user',\n  templateUrl: './profile-user.component.html',\n  styleUrls: ['./profile-user.component.css']\n})\n\nexport class ProfileUserComponent implements OnInit\n{\n    ngForm:FormGroup;\n\n    public getJsonValue: any;\n    public putJsonValue: any;\n    public deleteJsonValue: any;\n    public getAllJsonValue: any;\n    public postJsonValue: any;\n    email:string=window.localStorage.getItem('loginEmail');\n    constructor(private fb:FormBuilder, private notifier:NotifierService, private http:HttpClient, private service: ApiService, private route:Router){\n\n    }\n    ngOnInit(): void {\n      this.ngForm= new FormGroup({\n\n      name:new FormControl(\"\",Validators.required),\n      firstName:new FormControl(\"\",Validators.required),\n      lastName:new FormControl(\"\",Validators.required),\n      email:new FormControl(\"\",Validators.required),\n      password:new FormControl(\"\",Validators.required),\n      dob:new FormControl(\"\",Validators.required),\n      gender:new FormControl(\"\",Validators.required),\n      contactNumber:new FormControl(\"\",Validators.required),\n      userRole:new FormControl(\"\",Validators.required),\n      address:new FormControl(\"\",Validators.required),\n      \n      });\n\n   \n        this.service.getCurrentUserDetails(this.email).subscribe((data) => {\n          this.ngForm=new FormGroup({\n            name:new FormControl(data['name']),\n          firstName:new FormControl(data['firstName']),\n          lastName:new FormControl(data['lastName']), \n          email:new FormControl(data['email']),\n          password:new FormControl(data['password']),\n          userRole:new FormControl(data['userRole']),\n          dob:new FormControl(data['dob']),\n          gender:new FormControl(data['gender']),\n          contactNumber:new FormControl(data['contactNumber']),\n          address:new FormControl(data['address']),\n       \n        });\n        })\n      \n   \n      // this.getMethod();\n  };\n  \n\n  // public getMethod(){\n  //   this.http.get('http://localhost:8083/api/v1/get/').subscribe((data) => {\n  //     console.log(data);\n  //     this.getJsonValue = data;\n  //   })\n  // }\n\n  \n  \n  // Updated(){\n  //   this.notifier.showNotification('Upadated Successfully', 'ok')\n  // }\n\n\n  \n  Updated(){\n    this.service.UpdateUserDetails(this.ngForm.value,this.email).subscribe((res)=>\n    this.notifier.showNotification('Details Updated Succesfully','OK'))\n   }\n}\n\n\n\n\n\n\n\n","\n<div class=\"container\" style=\"width: 100rem;\">\n  <!-- <div class=\"text\" ><h1 style=\"font-weight: bold; width:20rem;height: 30px; color: rgb(9, 1, 1); margin-right: 45%;\">MY DASHBOARD</h1></div> -->\n  <h1>WELCOME</h1> \n  <h1>MY DASHBOARD</h1>\n  <hr>  \n  <div class=\"row\" style=\"display: block; \">\n    <form *ngIf=\"ngForm\" [formGroup]=\"ngForm\">\n        <div class=\"col-4\" style=\"display: inline-block; float: left;  height:30rem; width:40rem;align-items: flex-start; \">\n          <img src=\"../assets/profile-icon.png\" style=\"height:150px;width: 150px; margin-left:30%; margin-bottom:5px;  \"> \n          \n          <mat-form-field appearance=\"outline\" style=\"width:100%\">\n            <mat-label>Name</mat-label>\n            <input matInput class=\"plantId w-100\" formControlName=\"name\" required /> </mat-form-field>    \n            <mat-form-field appearance=\"outline\">\n              <mat-label>DOB</mat-label>\n              <input matInput formControlName=\"dob\" type=\"date\" required />\n              <!-- <input matInput formControlName=\"dob\" [matdatepicker]=\"myDatePicker\" required />\n              <mat-datepicker-toggle [for]=\"myDatePicker\" matSuffix></mat-datepicker-toggle>\n              <mat-datepicker #myDatePicker></mat-datepicker> -->\n              </mat-form-field>  \n\n        </div>\n\n        <div class=\"col-4\" style=\"display: inline-block; float: inline-start;\">\n            <mat-form-field appearance=\"outline\" >\n            <mat-label>FirstName</mat-label>\n            <input matInput class=\"plantId w-100\" formControlName=\"firstName\" required /> </mat-form-field>\n            \n            <mat-form-field appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" required /></mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n            <mat-label>Contact No.</mat-label>\n            <input matInput formControlName=\"contactNumber\" required /></mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n            <mat-label>Address</mat-label>\n            <input matInput formControlName=\"address\" required/> </mat-form-field>\n            \n        </div>\n\n        <div class=\"col-4\" style=\"display: inline-block\">\n            <mat-form-field appearance=\"outline\">\n            <mat-label>LastName</mat-label>\n            <input matInput formControlName=\"lastName\" required/> </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input matInput formControlName=\"password\" required /></mat-form-field>\n    \n            <mat-form-field appearance=\"outline\">\n            <mat-label>Gender</mat-label>\n            <!-- <input matInput formControlName=\"gender\" required /> -->\n              <mat-select formControlName=\"gender\" required>\n                <mat-option value=\"male\">Male</mat-option>\n                <mat-option value=\"female\">Female</mat-option>\n                <mat-option value=\"others\">Others</mat-option>\n              </mat-select>\n            </mat-form-field>\n        \n            <!-- <mat-form-field appearance=\"outline\">\n            <mat-label>UserRole</mat-label>\n            <input matInput formControlName=\"userRole\" required /> -->\n            <!-- <mat-select formControlName=\"userRole\" required>\n              <mat-option value=\"seller\">Seller</mat-option>\n              <mat-option value=\"buyr\">Customer</mat-option>\n            </mat-select>\n          </mat-form-field> --> \n            \n        </div>\n        <button mat-raised-button color=\"primary\" (click)=\"Updated()\">Submit</button>\n      </form>\n      \n  </div>\n</div>\n \n\n\n\n\n\n\n\n\n\n<!-- <div class=\"container\" style=\"width: 100rem;\"> -->\n    <!-- <div class=\"text\" ><h1 style=\"font-weight: bold; width:20rem;height: 30px; color: rgb(9, 1, 1); margin-right: 45%;\">MY DASHBOARD</h1></div> -->\n    <!-- <h1>WELCOME</h1>  -->\n    <!-- <h1>MY DASHBOARD</h1>\n    <hr>  \n    <div class=\"row\" style=\"display: block; \">\n      <form *ngIf=\"ngForm\" [formGroup]=\"ngForm\">\n          <div class=\"col-4\" style=\"display: inline-block; float: left;  height:30rem; width:40rem;align-items: flex-start; \">\n            <img src=\"../assets/profile-icon.png\" style=\"height:150px;width: 150px; margin-left:30%; margin-bottom:5px;  \"> \n            \n            <mat-form-field appearance=\"outline\" style=\"width:100%\"> -->\n              <!-- <mat-label>Name</mat-label>\n              <input matInput class=\"plantId w-100\" formControlName=\"Name\" required /> </mat-form-field>    \n              <mat-form-field appearance=\"outline\">\n                <mat-label>Dob</mat-label>\n                <input matInput formControlName=\"dob\" required /></mat-form-field>   \n          </div>\n    \n        \n    \n          <div class=\"col-4\" style=\"display: inline-block; float: inline-start;\">\n              <mat-form-field appearance=\"outline\" >\n              <mat-label>FirstName</mat-label>\n              <input matInput class=\"plantId w-100\" formControlName=\"fName\" required /> </mat-form-field>\n              \n              <mat-form-field appearance=\"outline\">\n              <mat-label>Email</mat-label>\n              <input matInput formControlName=\"email\" required /></mat-form-field>\n\n              <mat-form-field appearance=\"outline\">\n              <mat-label>Contact No.</mat-label>\n              <input matInput formControlName=\"contactno\" required /></mat-form-field>\n  \n              <mat-form-field appearance=\"outline\">\n              <mat-label>Address</mat-label>\n              <input matInput formControlName=\"address\" required/> </mat-form-field>\n              \n          </div>\n  \n          <div class=\"col-4\" style=\"display: inline-block; float: inline-end;\">\n              <mat-form-field appearance=\"outline\">\n              <mat-label>LastName</mat-label>\n              <input matInput formControlName=\"lName\" required/> </mat-form-field>\n  \n              <mat-form-field appearance=\"outline\">\n              <mat-label>Password</mat-label>\n              <input matInput formControlName=\"password\" required /></mat-form-field>\n      \n              <mat-form-field appearance=\"outline\">\n              <mat-label>Gender</mat-label>\n              <input matInput formControlName=\"gender\" required /></mat-form-field>\n          \n              <mat-form-field appearance=\"outline\">\n              <mat-label>UserRole</mat-label>\n              <input matInput formControlName=\"userRole\" required /></mat-form-field>\n              \n          </div>\n          <button mat-raised-button color=\"primary\" (click)=\"Updated()\">Submit</button>\n        </form>\n        \n    </div>\n  </div>\n    -->\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-product-image',\n  templateUrl: './product-image.component.html',\n  styleUrls: ['./product-image.component.css']\n})\nexport class ProductImageComponent implements OnInit {\n  @Input() public plantmodel : any;\n  retrivedImage:any\n  constructor(private _sanitizer: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this.retrivedImage=('data:image/jpg;base64,'+this.plantmodel.productImage);\n  }\n\n}\n","<img  [src]=\"retrivedImage\" alt=\"Plant_Image\" style=\"height: 150px ;width: 150px;\">\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // baseUrl = \"http://localhost:8080\";\n  baseUrl = \"https://prakritik.stackroute.io\";\n\n  details:any;\n  constructor(private http:HttpClient) { }\n  getUserByEmail(email:string)\n  {\n      return this.http.get<any>(this.baseUrl+\"/registration-service/api/v1/get/\"+email);\n  }\n  postProduct(data:any){\n    return this.http.post<any>(this.baseUrl+\"/plant-service/api/v1/addproduct\",data);\n  }\n  //post-data\n  savePlantModel(productObj:any, productImage:File){\n    const data: FormData=new FormData();\n    data.append('file',productImage);\n    data.append('plantModel', JSON.stringify(productObj));\n    return this.http.post(this.baseUrl+\"/plant-service/api/v1/addproduct\",data)\n  }\n\n    // return this.http.post<any>(\"http://localhost:3000/seller/\",data);\n\n  \n  getProduct(){\n    return this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/listofAllProduct\");\n  }\n  // putProduct(data:any,productId:string){\n  //   return this.http.put<any>(\"http://localhost:8082/api/v1/update/\"+productId,data);\n  //  }\n\n  updatePlantModel(productObj:any, productImage:File){\n    const data: FormData=new FormData();\n    data.append('file',productImage);\n    data.append('plantModel', JSON.stringify(productObj));\n    return this.http.post(this.baseUrl+\"/plant-service/api/v1/update/{productId}\",data);\n  }\n\n  putProduct(data:any,productId:string){\n    return this.http.put<any>(this.baseUrl+\"/plant-service/api/v1/update/\"+productId,data);\n   }\n\n   deleteProduct(productId:string){\n     return this.http.delete<any>(this.baseUrl+\"/plant-service/api/v1//delete/\"+productId);\n   }\n   getOrderedlist(customerEmailId:string){\n    return this.http.get<any>(this.baseUrl+\"/customer-service/api/v1/customerBookingDetails/\"+customerEmailId);\n  }\n    \n   getCurrentData(productId:string){\n    return this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/get/\"+productId);\n  }\n  // getEmailid(){\n  //   return this.http.get<any>(\"http://localhost:3000/emailid/\");\n  // }\n  getProductById(productId:string){\n    this.details =this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/get/\"+productId);\n  }\n  getProductDetails(){\n    return this.details;\n  }\n  getProductImageById(productId:string){\n    return this.details =this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/get/\"+productId);\n  }\n  postPaymentPage(data:any){\n    return this.http.post<any>(this.baseUrl+\"/payment-service/paymentData\",data);\n  }\n  getCurrentUserDetails(email:string){\n    return this.http.get<any>(this.baseUrl+\"/registration-service/api/v1/get/\"+email);\n  }\n  getSellerList(ownerEmailId:string){\n    return this.http.get<any>(this.baseUrl+\"/customer-service/api/v1/ownerProductDetail/\"+ownerEmailId);\n  }\n  CancelOrder(data:any,orderId:string){\n    return this.http.put<any>(this.baseUrl+\"/customer-service/api/v1/CancelOrder/\"+orderId,data);\n  }\n\n  getOrderedlistByorderId(orderId:string){\n    return this.http.get<any>(this.baseUrl+\"/customer-service/api/v1/getOrder/\"+orderId);\n  }\n  getPictureById(productId:string){\n     return this.http.get<any>(this.baseUrl+\"/plant-service/api/v1/get/\"+productId);\n  }\n  UpdateUserDetails(data:any,email:string){\n  return this.http.put<any>(this.baseUrl+\"/registration-service/api/v1/update/\"+email,data) \n  }\n  // getOrderedlistByorderId(orderId:string){\n  //   return this.http.get<any>(\"http://localhost:8032/api/v1/customerBookingDetails/\"+orderId);\n  // }\n  getProductListByownerEmailID(ownerEmailId:string){\n    return this.http.get<any>(this.baseUrl+\"/plant-service/api/v1//ProductList/\"+ownerEmailId);\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-sellerorderlist',\n  templateUrl: './sellerorderlist.component.html',\n  styleUrls: ['./sellerorderlist.component.css']\n})\nexport class SellerorderlistComponent implements OnInit {\n\n  SellerList:any;\n  ownerEmailId:string=window.localStorage.getItem('loginEmail');\n\n  constructor(private httpClient: HttpClient , private service:ApiService) {\n    this.SellerList=[];\n   }\n  ngOnInit(): void {\n    this.getSellerList(this.ownerEmailId);\n  }\n\n  getSellerList(ownerEmailId:string){\n    this.service.getSellerList(ownerEmailId).subscribe(response=>{\n      console.log(response);\n      this.SellerList=response;\n    })\n    }}\n","<div class=\"container\" style=\"margin-top: 70px;  margin-left: 150px;\" >\n       \n    <div class=\"text\" style=\" font-weight: bold; width:20rem;height: 30px; margin-left: 20px;  color: rgb(9, 1, 1);\"><h1 class=\"text\" style=\"font-weight:bold ;color: rgb(187, 208, 212);\">Booking History</h1></div>\n<div class=\"card-text-center\" *ngFor=\"let OrderDetails of SellerList\" style=\" padding-bottom: 1%;\">\n <mat-card class=\"card-body\">\n  \n   <div class=\"row\" style=\"width:66rem; display: block; height: 20rem;\">\n      \n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px;display: inline-block; float: left;\" >                 \n              <img style=\"height: 300px ;\" src=\"https://us.123rf.com/450wm/fillvector/fillvector2005/fillvector200503920/fillvector200503920.jpg?ver=6\" alt=\"Plant_Image\" class=\"card-img-bottom \">            \n           </div>\n\n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px; display: inline-block; float: inline-start;\">\n          \n               \n            <div class=\"card-header\" style=\"margin-bottom: 20px;\"><mat-icon>spa</mat-icon>&nbsp;&nbsp;{{OrderDetails.productName}}</div>\n            <div class=\"card-body\">  \n                <h5 class=\"card-title\">Save earth save life</h5> \n                <p><mat-icon>#picker</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderId}}</p> \n                <p><mat-icon>loupe</mat-icon> Quantity:&nbsp;&nbsp;{{OrderDetails?.Quantity}}</p>                                      \n                <p>&#8377;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{OrderDetails?.productPrice}}</p>\n                <p><mat-icon>calendar_today</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderDate}}</p>\n            </div>                       \n                \n           </div>\n\n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px;display: inline-block; float: inline-end;\">\n              \n            <div class=\"card-header\" style=\"margin-bottom:3px ;\"><mat-icon>person</mat-icon>&nbsp;&nbsp;Customer</div>\n            <div class=\"card-body\" >\n                <!-- <h5 class=\"card-title\" style=\"font-size:20px ;\">Save earth save life </h5> -->\n                <p><mat-icon>person</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerName}}</p>\n                <p><mat-icon>mail_outline</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerEmailId}}</p>\n                <p><mat-icon>call</mat-icon>&nbsp;&nbsp;{{OrderDetails?.cutomerContactNo}}</p>\n                <p><mat-icon>room</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerAddress}}</p>\n                <p><mat-icon></mat-icon>&nbsp;&nbsp;</p>\n            </div>  \n              \n           </div>\n        \n   </div>\n    \n </mat-card> \n</div> \n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n\n@Component({\n  selector: 'app-updateseeds',\n  templateUrl: './updateseeds.component.html',\n  styleUrls: ['./updateseeds.component.css']\n})\nexport class UpdateseedsComponent implements OnInit {\n\n \n  @ViewChild('stepper') stepper: MatStepper;\n  productObject: PlantModel = new PlantModel();\n  profileFormGroup!: FormGroup;\n  files: any[] = [];\n  \n  constructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router,private route:ActivatedRoute ){\n\n  }\n  \n  ngOnInit(): void {\n    this.profileFormGroup= new FormGroup({\n    sellerEmailId:new FormControl(\"\",Validators.required),\n    //productId:new FormControl(\"\"),\n    productsAvailable:new FormControl(\"\",Validators.required),\n    productName:new FormControl(\"\",Validators.required),\n    productPrice:new FormControl(\"\",Validators.required),\n    productAddress:new FormControl(\"\",Validators.required),\n    productImage:new FormControl(\"\"),\n    productAge:new FormControl(\"\"),\n    sizeOfProduct:new FormControl(\"\"),\n    waterRequirement:new FormControl(\"\",Validators.required),\n    sunlightRequirement:new FormControl(\"\",Validators.required),\n    toxicity:new FormControl(\"\",Validators.required),\n    description:new FormControl(\"\",Validators.required),\n       });\n\n\n   this.service.getCurrentData(this.route.snapshot.params.id).subscribe((res)=>{\n    this.profileFormGroup=new FormGroup({\n      sellerEmailId:new FormControl(res['sellerEmailId']),\n      productsAvailable:new FormControl(res['productsAvailable']),\n      productName:new FormControl(res['productName']),\n      productPrice:new FormControl(res['productPrice']),\n      productImage:new FormControl(res['productImage']),\n      productAddress:new FormControl(res['productAddress']),\n      //productAge:new FormControl(res['productAge']),\n     // sizeOfProduct:new FormControl(res['sizeOfProduct']),\n      waterRequirement:new FormControl(res['waterRequirement']),\n      sunlightRequirement:new FormControl(res['sunlightRequirement']),\n      toxicity:new FormControl(res['toxicity']),\n      description:new FormControl(res['description'])\n\n\n    })\n    \n    })\n        \n\n  }\n\n  // OnSubmit(){\n  //   console.log('formValue', this.profileFormGroup.value);\n  //   this.productObject.productName = this.profileFormGroup.value.productName;\n  //   this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n  //   this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n  //   this.productObject.sellerEmailId= this.profileFormGroup.value.sellerEmailId;\n  //   this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n  //   this.productObject.productAge= this.profileFormGroup.value.productAge;\n  //   this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n  //   this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n  //   this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n  //   this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n  //   this.productObject.description= this.profileFormGroup.value.description;\n  //   this.productObject.productId=this.profileFormGroup.value.productId;\n\n  //   this.service.updatePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n  //     console.warn(\"result is here\", result)\n  //        this.profileFormGroup.reset();\n        \n  //        this.router.navigate(['/home']);\n  //   })\n    \n  // }   \n\n\n  days: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\n\n  sunlightRequirement!: string;\n  parts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                  'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                  'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                  'Full shade – Plants require less than 3 hours of direct sun per day'];\n\n\n  sizeOfPlant!: string;\n  sizes:string[]=['----']\n\n  toxicity!:string;\n  results:string[]=['Yes','No']\n\n  urllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n\n  onFileChanged(files) {\n    this.prepareFilesList(files);\n  }\n  prepareFilesList(files: Array<any>) {\n    for (const item of files) {\n      item.progress = 0;\n      this.files.push(item);\n    }\n    this.uploadFilesSimulator(0);\n  }\n  uploadFilesSimulator(index: number) {\n    setTimeout(() => {\n      if (index === this.files.length) {\n        return;\n      } else {\n        const progressInterval = setInterval(() => {\n          if (this.files[index].progress === 100) {\n            clearInterval(progressInterval);\n            this.uploadFilesSimulator(index + 1);\n          } else {\n            this.files[index].progress += 5;\n          }\n        }, 200);\n      }\n    }, 1000);\n  }\n  formatBytes(bytes, decimals) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n\nOnSubmit(){\n  this.service.putProduct(this.profileFormGroup.value,this.route.snapshot.params.id).subscribe((res=>{\n    this.notifierService.showNotification('Product Data Updated succesfully','OK'),\n    this.router.navigate(['/home'])\n  }))\n \n} \n\n\n}","<div class=\"container-fluid\">\n    <mat-horizontal-stepper >\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n           <mat-card class=\"profile\">\n                <mat-card-title>Profile of the seeds</mat-card-title>\n                <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                  <ng-template matStepLabel>Profile</ng-template>\n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Email Id</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"sellerEmailId\"\n                      required\n                    /> </mat-form-field\n                  >\n  \n                  <!-- <mat-form-field appearance=\"outline\" >\n                    <mat-label>product ID</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"productId\" readonly\n                      \n                    /> </mat-form-field\n                  > -->\n                  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Quantity(.in No's)</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"productsAvailable\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Product Name</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"productName\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Product Price</mat-label>\n                    <input matInput type=\"number\" formControlName=\"productPrice\" required />\n                    <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n                  </mat-form-field>\n                  <div class=\"img_container\">\n                    <div>\n                      <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                  </div>\n                  <div>\n                     \n                      <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                  </div>\n                  </div>\n                  <mat-card-actions >\n                    <button\n                      mat-raised-button\n                      color=\"primary\"\n                      style=\"margin-left:600px\"\n                       matStepperNext\n                    >\n                      Next\n                    </button>\n                  </mat-card-actions>\n                </form>\n              </mat-card>\n    \n          </mat-step>\n    \n          <!-------step 2----->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n            <mat-card class=\"profile\">\n              <mat-card-title>Requirements of seeds</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Requirements</ng-template>\n    \n                <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                  <mat-label>Product Address</mat-label>\n                  <input matInput formControlName=\"productAddress\" required />\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label for=\"productAge\">Product Age</mat-label>\n                  <mat-select name=\"productAge\" id=\"productAge\" formControlName=\"productAge\"   >\n                    <mat-option *ngFor=\"let age of ages\" [value]=\"age\">\n                      {{age}}\n                     </mat-option>\n                  </mat-select>\n                </mat-form-field>\n\n\n                <mat-form-field appearance=\"outline\">\n                <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n                <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\" required>\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                  {{day}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n                <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\" required>\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                  {{part}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-form-field appearance=\"outline\" >\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\"   >\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n                <mat-card-actions>\n                  <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                  <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n          </mat-step>\n    \n          <!-----last step-->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n            <mat-card class=\"profile\">\n              <mat-card-title>About Seeds</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>You are almost done....</ng-template>\n                <mat-label id=\"toxicity\"\n                  >State Whether the Product is toxic to pets, kids:\n                </mat-label>\n                <mat-radio-group\n                  aria-labelledby=\"toxicity\"\n                  formControlName=\"toxicity\"\n                  class=\"example-radio-group\"\n                  [(ngModel)]=\"toxicity\">\n                  <mat-radio-button\n                    class=\"example-radio-button block\"\n                    *ngFor=\"let result of results\"\n                    [value]=\"result\"\n                    >\n                    {{ result }}\n                  </mat-radio-button>\n                </mat-radio-group>\n    \n    \n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Description of the Product</mat-label>\n                  <textarea\n                    matInput\n    \n                    rows=\"10\" col=\"50\"\n                    formControlName=\"description\" required\n                  ></textarea>\n                  <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n                </mat-form-field>\n              </form>\n              <mat-card-actions>\n                <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Update</button>\n              </mat-card-actions>\n            </mat-card>\n          </mat-step>\n        </mat-horizontal-stepper>\n    \n    \n      </div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchByName'\n})\nexport class SearchByNamePipe implements PipeTransform {\n\n  transform(value: any, psearch:String ): any {\n    return value.filter(plant=>\n      plant.productName.toLowerCase().indexOf(psearch.toLowerCase())!==-1);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-updatemedicines',\n  templateUrl: './updatemedicines.component.html',\n  styleUrls: ['./updatemedicines.component.css']\n})\nexport class UpdatemedicinesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>updatemedicines works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\n\n\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n\n@Component({\n  selector: 'app-medicines',\n  templateUrl: './medicines.component.html',\n  styleUrls: ['./medicines.component.css']\n})\nexport class MedicinesComponent implements OnInit {\n  @ViewChild('stepper') stepper: MatStepper;\n  productObject: PlantModel = new PlantModel();\n  profileFormGroup!: FormGroup;\n  files: any[] = [];\n  \n  \n  constructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router ){\n  \n  }\n  \n  ngOnInit(): void {\n    this.profileFormGroup= new FormGroup({\n     ownerEmailId:new FormControl(window.localStorage.getItem('loginEmail'),Validators.required),\n     shopName:new FormControl(\"\",Validators.required),\n     ownerContactNo:new FormControl(\"\",Validators.required),\n   productId:new FormControl(\"\"),\n   productsAvailable:new FormControl(\"\",Validators.required),\n   productName:new FormControl(\"\",Validators.required),\n   productPrice:new FormControl(\"\",Validators.required),\n   productAddress:new FormControl(\"\",Validators.required),\n   productImage:new FormControl(\"\"),\n   productAge:new FormControl(\"\",Validators.required),\n   sizeOfProduct:new FormControl(\"\",Validators.required),\n   waterRequirement:new FormControl(\"\",Validators.required),\n   sunlightRequirement:new FormControl(\"\",Validators.required),\n   toxicity:new FormControl(\"\",Validators.required),\n   description:new FormControl(\"\",Validators.required),\n    });\n       console.log(this.profileFormGroup.value);\n   }\n   OnSubmit(){\n     console.log('formValue', this.profileFormGroup.value);\n     this.productObject.productName = this.profileFormGroup.value.productName;\n     this.productObject.shopName = this.profileFormGroup.value.shopName;\n     this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n     this.productObject.ownerContactNo= this.profileFormGroup.value.ownerContactNo;\n     this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n     this.productObject.ownerEmailId= this.profileFormGroup.value.ownerEmailId;\n     this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n     this.productObject.productAge= this.profileFormGroup.value.productAge;\n     this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n     this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n     this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n     this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n     this.productObject.description= this.profileFormGroup.value.description;\n     this.productObject.productId=this.profileFormGroup.value.productId;\n \n     this.service.savePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n      this.notifierService.showNotification('Product Added Succesfully','OK')\n          this.profileFormGroup.reset();\n         \n          this.router.navigate(['/sellerhomepage/home']);\n     })\n     \n   }    \n  \n  days: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\n  ages: string[]=['null'];\n\n  sunlightRequirement!: string;\n  parts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                  'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                  'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                  'Full shade – Plants require less than 3 hours of direct sun per day'];\n  \n  \n  sizeOfPlant!: string;\n  sizes:string[]=['NA']\n  \n  toxicity!:string;\n  results:string[]=['Yes','No']\n  \n  urllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n  \n  // image input\n  onFileChanged(files) {\n    this.prepareFilesList(files);\n  }\n  prepareFilesList(files: Array<any>) {\n    for (const item of files) {\n      item.progress = 0;\n      this.files.push(item);\n    }\n    this.uploadFilesSimulator(0);\n  }\n  uploadFilesSimulator(index: number) {\n    setTimeout(() => {\n      if (index === this.files.length) {\n        return;\n      } else {\n        const progressInterval = setInterval(() => {\n          if (this.files[index].progress === 100) {\n            clearInterval(progressInterval);\n            this.uploadFilesSimulator(index + 1);\n          } else {\n            this.files[index].progress += 5;\n          }\n        }, 200);\n      }\n    }, 1000);\n  }\n  formatBytes(bytes, decimals) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n  \n  \n  \n  // onSubmit(){\n  //   this.service.postProduct(this.profileFormGroup.value).subscribe({\n  //     next:(res)=>{\n  //       console.log(res);\n  //       this.notifierService.showNotification('Product Added Succesfully','OK');\n  //       this.profileFormGroup.reset();\n   \n  //     },\n  //     error:()=>{\n  //       alert(\"error while adding the product\");\n  //     }\n  //   })\n  // }\n  \n  }\n  ","<div class=\"container-fluid\">\n    <mat-horizontal-stepper >\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n           <mat-card class=\"profile\">\n                <mat-card-title>Profile of the Medicines</mat-card-title>\n                <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                  <ng-template matStepLabel>Profile</ng-template>\n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Email Id</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"ownerEmailId\"\n                      required\n                    /> </mat-form-field\n                  >\n  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Shop Name</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"shopName\" required\n                      \n                    /> </mat-form-field\n                  >\n  \n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Contact Number</mat-label>\n                    <input\n                      matInput\n                      class=\"productId w-100\"\n                      formControlName=\"ownerContactNo\" required\n                      \n                    /> </mat-form-field\n                  >\n                  <mat-form-field appearance=\"outline\" >\n                    <mat-label>Quantity(.in No's)</mat-label>\n                    <input\n                      matInput\n                      class=\"plantId w-100\"\n                      formControlName=\"productsAvailable\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                  <mat-form-field appearance=\"outline\">\n                    <mat-label>Product Name</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"productName\"\n                      required\n                    /> </mat-form-field\n                  ><br />\n                 \n                  <div class=\"img_container\">\n                    <div>\n                      <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                  </div>\n                  <div>\n                     \n                      <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                  </div>\n                  </div>\n                  <mat-card-actions >\n                    <button\n                      mat-raised-button\n                      color=\"primary\"\n                      style=\"margin-left:600px\"\n                       matStepperNext\n                    >\n                      Next\n                    </button>\n                  </mat-card-actions>\n                </form>\n              </mat-card>\n    \n          </mat-step>\n    \n          <!-------step 2----->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n            <mat-card class=\"profile\">\n              <mat-card-title>Requirements of Medicines</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Requirements</ng-template>\n\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Product Price</mat-label>\n                  <input matInput type=\"number\" formControlName=\"productPrice\" required />\n                  <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n                </mat-form-field>\n    \n                <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                  <mat-label>Product Address</mat-label>\n                  <input matInput formControlName=\"productAddress\" required />\n                </mat-form-field>\n    \n               \n                <mat-form-field appearance=\"outline\" >\n                  <mat-label for=\"productAge\">Product Age</mat-label>\n                  <mat-select name=\"productAge\" id=\"productAge\" formControlName=\"productAge\"   >\n                    <mat-option *ngFor=\"let age of ages\" [value]=\"age\">\n                      {{age}}\n                     </mat-option>\n                  </mat-select>\n                </mat-form-field>\n<!--                 \n                <mat-form-field appearance=\"outline\">\n                <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n                <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\"   disabled=\"disabled\">\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                  {{day}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n                <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\"   disabled=\"disabled\">\n                 <mat-option>--Select--</mat-option>\n                 <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                  {{part}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-form-field appearance=\"outline\" >\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\"  disabled=\"disabled\" >\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field> -->\n    \n                <mat-card-actions>\n                  <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                  <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n          </mat-step>\n    \n          <!-----last step-->\n          <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n            <mat-card class=\"profile\">\n              <mat-card-title>About Medicines</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>You are almost done....</ng-template>\n                <mat-label id=\"toxicity\"\n                  >State Whether the Product is toxic to pets, kids:\n                </mat-label>\n                <mat-radio-group\n                  aria-labelledby=\"toxicity\"\n                  formControlName=\"toxicity\"\n                  class=\"example-radio-group\"\n                  [(ngModel)]=\"toxicity\">\n                  <mat-radio-button\n                    class=\"example-radio-button block\"\n                    *ngFor=\"let result of results\"\n                    [value]=\"result\"\n                    >\n                    {{ result }}\n                  </mat-radio-button>\n                </mat-radio-group>\n    \n    \n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Description of the Product</mat-label>\n                  <textarea\n                    matInput\n    \n                    rows=\"10\" col=\"50\"\n                    formControlName=\"description\" required\n                  ></textarea>\n                  <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n                </mat-form-field>\n              </form>\n              <mat-card-actions>\n                <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Submit</button>\n              </mat-card-actions>\n            </mat-card>\n          </mat-step>\n        </mat-horizontal-stepper>\n    \n    \n      </div>","import { LocationStrategy } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ThisReceiver } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-sellernavbar',\n  templateUrl: './sellernavbar.component.html',\n  styleUrls: ['./sellernavbar.component.css']\n})\nexport class SellernavbarComponent implements OnInit {\n  isExpanded: boolean = false;\n\n  constructor(private service:ApiService,private httpClient: HttpClient,private route:Router) { \n  }\n  emailid :string\n  \n  ngOnInit(): void {\n  \n    this.emailid=window.localStorage.getItem('loginEmail');\n    console.log(this.emailid);\n  }\n  \n LogOut(){\n  this.route.navigate(['/']);\n  localStorage.clear();\n }\n}\n","<!-------<mat-toolbar  style=\"background-color: #050448\">\n  \n  <mat-toolbar-row>\n    <button mat-icon-button>\n        <mat-icon (click)=\"sidenav.toggle();\">menu</mat-icon>\n    </button>\n    <span >Prakritik</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n      <mat-icon style=\"position:relative;right:5\">account_circle</mat-icon>\n     \n    </button>\n      <span>\n      <div *ngFor=\"let id of ids\">\n        <div class=\"card-header\" style=\"font-size:small\">{{id.emailid}}</div>\n        </div>\n      </span>\n     <mat-menu #menu=\"matMenu\">\n     <button mat-menu-item=\"\" routerLink=\"/profile\">My Profile</button>\n    <button mat-menu-item>Log Out</button>\n    </mat-menu>\n   \n   \n   </mat-toolbar-row>\n \n  </mat-toolbar>\n  \n  <mat-sidenav-container autosize>\n   <mat-nav-list>\n\n    <mat-list-item (click)=\"\">\n\n    </mat-list-item>\n   </mat-nav-list>\n      <mat-sidenav mode=\"side\" opened #sidenav>\n       <img class=\"avatar mat-elevation-z8\" src=\"https://www.freeiconspng.com/thumbs/profile-icon-png/am-a-19-year-old-multimedia-artist-student-from-manila--21.png\">\n\n       <div>\n        <div *ngFor=\"let id of ids\">\n          <div class=\"card-header\" style=\"font-size:small\">{{id.emailid}}</div>\n          </div>\n        </div>\n      <button mat-button class=\"menu-button\" routerLink=\"/home\">\n        <mat-icon>home</mat-icon>\n        <span>Home</span>\n      </button>\n      <button mat-button class=\"menu-button\" routerLink=\"/seller\">\n        <mat-icon>add_box</mat-icon>\n        <span>Add Plants</span>\n      </button>\n      <button mat-button class=\"menu-button\" routerLink=\"/orderList\">\n        <mat-icon>assignment_turned_in</mat-icon>\n        <span>Order List</span>\n      </button>\n      <button mat-button class=\"menu-button\" routerLink=\"/Editprofile\">\n      <button mat-button class=\"menu-button\" routerLink=\"/customerbookinghistory\">\n       \n        <span>customerorderlist</span>\n      </button> \n      <button mat-button class=\"menu-button\" >\n        <mat-icon>create</mat-icon>\n        <span>Edit Profile</span>\n      </button>\n  \n    </mat-sidenav>\n    <mat-sidenav-content >\n      <div class=\"content mat-elevation-z8\">\n        <router-outlet></router-outlet>\n    </div>\n    </mat-sidenav-content>-------->\n\n    <mat-sidenav-container autosize>\n      <mat-sidenav #sidenav mode=\"side\" opened=\"isExpanded\">\n      \n    \n      \n        <button mat-button (click)=\"isExpanded = !isExpanded\" style=\"margin-top:15px;\">\n            <mat-icon mat-list-icon class=\"chevron-button\" [ngClass]=\"{ rotated: isExpanded }\">menu\n            </mat-icon>\n          </button><br/>\n          \n        \n            <button mat-button  routerLink=\"/sellerhomepage/home\" style=\"margin-top:30px;\">\n            <mat-icon mat-list-icon>home</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\" style=\"margin-left:8px;\">Home</span>\n            </button><br/>\n\n            <button mat-button [matMenuTriggerFor]=\"menu\" style=\"margin-top:16px;\"> <mat-icon>add_box</mat-icon> <span *ngIf=\"isExpanded\" class=\"menu-item\" style=\"margin-left:8px;\">Add Products</span></button>\n            <mat-menu #menu=\"matMenu\" >\n              <button mat-menu-item routerLink=\"/sellerhomepage/seller\" style=\"width: 160px;font-weight: bold;font-size: 16px;\" class=\"menu\">Add Plants</button>\n              <button mat-menu-item routerLink=\"/sellerhomepage/seedslist\" style=\"width: 160px;font-size: 16px;font-weight: bold;\" class=\"menu\">Add Seeds</button>\n              <button mat-menu-item routerLink=\"/sellerhomepage/medicines\" style=\"width: 160px;font-size: 16px;font-weight: bold;\" class=\"menu\">Add Medicines</button>\n            </mat-menu><br/>\n           \n            <button mat-button routerLink=\"/sellerhomepage/orderList\" style=\"margin-top:16px;\">\n            <mat-icon mat-list-icon>supervisor_account</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\" style=\"margin-left:8px;\">Order List</span>\n            </button><br/>\n         \n\n       \n            <button mat-button style=\"margin-top:16px;\" routerLink=\"/sellerhomepage/Editprofile\">\n            <mat-icon>create</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\" style=\"margin-left:8px;\">Edit Profile</span>\n            </button><br/>\n         \n    \n        \n      </mat-sidenav>\n    \n      <!-- Content - rendered Content for the current router path into the <router-outlet>, e.g. /dashboard or /info-->\n       \n      <mat-sidenav-content>\n       \n        <mat-toolbar>\n  \n          \n            <span >Prakritik</span>\n            <span class=\"example-spacer\"></span>\n            <button mat-icon-button [matMenuTriggerFor]=\"menuitem\">\n              <mat-icon style=\"position:relative;right:5\">account_circle</mat-icon>\n            </button>\n              <span>\n              <div style=\"margin-right:160px\">\n                <div class=\"card-header\" style=\"font-size:small\">{{emailid}}</div>\n                </div>\n              </span>\n             <mat-menu #menuitem=\"matMenu\">\n             <button mat-menu-item routerLink=\"/sellerhomepage/profile\">My Profile</button>\n            <button mat-menu-item (click)=\"LogOut()\">Log Out</button>\n            </mat-menu>\n         \n           </mat-toolbar>\n  \n        <router-outlet></router-outlet>\n       \n      </mat-sidenav-content>\n  \n    </mat-sidenav-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  private url: string = \"http://localhost:8004/user/create_order\";\n  constructor(private http: HttpClient) { }\n  saveUser(data:any) {\n    console.log(JSON.stringify(data));\n    return this.http.post(this.url,JSON.stringify(data));\n  }\n}\n","import { ApiService } from 'src/app/services/api.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-userprofile',\n  templateUrl: './userprofile.component.html',\n  styleUrls: ['./userprofile.component.css']\n})\nexport class UserprofileComponent implements OnInit {\n\n  constructor(private service:ApiService) { }\n  gender_bool:boolean=false;\n\n  user:any;\n  email:string=window.localStorage.getItem('loginEmail')\n  ngOnInit(): void {\n   this.service.getUserByEmail(this.email).subscribe(val => {this.user=val, this.gender()});\n  }\n  gender()\n  {\n    if(this.user.gender==\"female\")\n    {\n      this.gender_bool=true;\n       console.warn(this.gender_bool);\n    }\n  }\n \n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n<!-- Navbar top -->\n    <div class=\"navbar-top\">\n        <div class=\"title\">\n            <h1>Profile</h1>\n        </div>\n\n    </div>\n    <!-- End -->\n\n    <!-- Employee profile -->\n    <div class=\"container emp-profile\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                \n                    <div class=\"profile-img\" *ngIf=\"gender_bool;else other_content\">\n                        <img src=\"https://cdn-icons-png.flaticon.com/512/65/65581.png\" alt=\"\"/>\n                    </div>\n                    <ng-template #other_content>\n                        <div class=\"profile-img\">\n                            <img src=\"https://cdn-icons-png.flaticon.com/512/0/93.png\" alt=\"\"/>\n                        </div>\n                    </ng-template>\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"tab-content profile-tab\" id=\"myTabContent\">\n                    <div class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>First name</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.firstName}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Last name</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.lastName}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Email</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.email}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Gender</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.gender}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Address</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.address}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>Contact no.</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.contactNumber}}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <label><b>UserRole</b></label>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <p>{{user.userRole}}</p>\n                                    </div>\n                                </div>\n                    </div>\n        </div>\n    </div>\n    <!-- End -->","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-landingpage',\n  templateUrl: './landingpage.component.html',\n  styleUrls: ['./landingpage.component.css']\n})\nexport class LandingpageComponent implements OnInit {\n\n  constructor(private service:ApiService,private httpClient: HttpClient) { }\n  cards: any[];\n\n  ngOnInit(): void {\n    this.service.getProduct().subscribe({next:(result)=>this.cards=result});\n  }\n\n  login()\n  {\n    window.location.href = \"https://www.example.com\";\n  }\n\n  register()\n  {\n    window.location.href = \"https://www.example.com\";\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <style>\n  </style>\n  <title>Document</title>\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\"\n    integrity=\"sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N\" crossorigin=\"anonymous\" />\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\"/>\n    <!--Replace with your tailwind.css once created-->\n    <link href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700\" rel=\"stylesheet\" />\n\n    <style>\n        .gradient {\n          background: linear-gradient(90deg, #d53369 0%, #daae51 100%);\n        }\n      </style>\n\n</head>\n<body >\n    <!-- <div class=\"container\" id=\"header\">\n        <div class=\"row\">\n          <div>\n            <a href=\"#\" class=\"text-secondary\" style=\"font-size:40px\">Prakrtik</a>\n          </div> -->\n          <!-- <div class=\"col-sm\"><input type=\"search\" class=\"form-control rounded\">\n        </div> -->\n    \n      <!-- </div>\n      </div> -->\n    <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n        <a class=\"navbar-brand\" href=\"#\">Prakrtik</a>\n        <!-- <div class=\"container\">\n            <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\">login</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\">signUp</a>\n                </li>\n            </ul>\n        </div> -->\n        <div class=\"d-flex align-items-center navbar-nav ml-auto\" >\n            <button type=\"button\" class=\"btn btn-link px-3 me-2\" routerLink=\"/register\">\n              Login\n            </button>\n            <button type=\"button\" class=\"btn btn-primary me-3\" routerLink=\"/register\">\n              Sign up for free\n            </button>\n        </div>\n        \n    </nav>\n\n        <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n          <ol class=\"carousel-indicators\">\n            <li data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"0\" class=\"active\"></li>\n            <li data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"1\"></li>\n          </ol>\n          <div class=\"carousel-inner\" style=\"max-height: 40vh\"> \n            <div class=\"carousel-item active\" data-bs-interval=\"10000\">\n              <img style=\"height: 300px;\" src=\"https://www.flowerpower.com.au/wordpress/wp-content/uploads/2018/10/Wide-crop-Bora-bora-hanging-planters-with-string-of-beans-and-rhipsalis-DSC_8805.jpg\" class=\"d-block w-100\" alt=\"...\">\n              <div class=\"carousel-caption d-none d-md-block\">\n                        <h2 style=\"font-size: x-large;\" class=\"display-4\">Plants give us oxygen for the lungs and for the soul</h2>\n                        <!-- <p style=\"font-size: large;\">Don't mind me!</p> -->\n                        <!-- <button type=\"button\" class=\"btn btn-primary\">Primary</button> -->\n                      </div>\n                    </div>\n                    <div class=\"carousel-item\">\n                      <img style=\"height: 300px;\" src=\"https://www.pixelstalk.net/wp-content/uploads/images5/Aesthetic-Minimalist-Plant-Wallpaper-HD-1080p.jpg\" class=\"d-block w-100\" alt=\"...\">\n                        <div class=\"carousel-caption d-none d-md-block\">\n                        <!-- <h5>Second slide label</h5> -->\n                        <p style=\"font-size: x-large;\">If you plant a tree, you plant a life</p>\n                      </div>\n                    </div>\n               </div>\n          <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-bs-slide=\"prev\">\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"visually-hidden\">Previous</span>\n          </a>\n          <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-bs-slide=\"next\">\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"visually-hidden\">Next</span>\n          </a>\n        </div>\n\n              \n              \n      <!--Features section start-->\n\n<section class=\"features\" id=\"features\">\n\n    <h1 class=\"heading\"> Our <span>Features</span></h1>\n  \n    <div class=\"box-container\">\n  \n  <div class=\"row\">\n    \n  \n  \n    <div class=\"box col-4\">\n     <mat-card>\n        <img src=\"/assets/feature-img-1.png\" alt=\"\">\n        <h3>Customer UI</h3>\n        <p>Easy to understand and detailed UI.</p>\n        <a href=\"#\" class=\"btn\">Read more</a>\n     </mat-card>\n    </div>\n    \n  \n  \n    <div class=\"box col-4\">\n      <mat-card>\n      <img src=\"/assets/feature-img-2.png\" alt=\"\">\n      <h3>Easy Order</h3>\n      <p>Customer can order a product by just one click. After completion of Payment. It will redirect to order page. </p>\n      <a href=\"#\" class=\"btn\">Read more</a>\n      </mat-card>\n    </div>\n  \n    <div class=\"box col-4\">\n      <mat-card>\n      <img src=\"/assets/feature-img-3.png\" alt=\"\">\n      <h3>Easy Payment</h3>\n      <p>Payment done by adding thir card details.</p>\n      <a href=\"#\" class=\"btn\">Read more</a>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"box col-4\">\n        <mat-card>\n           <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRieKfpLWxIJZGXslh9Zj05ykb3P_zU0dHUJQsVUJcdknc4-fS7zyjHIMfM30SGd52OS5w&usqp=CAU\" alt=\"\">\n           <h3>Update Profile</h3>\n           <p>Customer can update their profile after registration.</p>\n           <a href=\"#\" class=\"btn\">Read more</a>\n        </mat-card>\n       </div>\n       \n     \n     \n       <div class=\"box col-4\">\n         <mat-card>\n         <img src=\"https://static.vecteezy.com/system/resources/thumbnails/003/184/173/small/vendor-or-seller-line-icon-vector.jpg\" alt=\"\">\n         <h3>Seller Convenience</h3>\n         <p>We provide add product functionality for the seller. So seller can easily post their product.</p>\n         <a href=\"#\" class=\"btn\">Read more</a>\n         </mat-card>\n       </div>\n     \n       <div class=\"box col-4\">\n         <mat-card>\n         <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS_7hAIuOstuZkRP3skmOB0ia2P8JvctL-0E0_AjXLWk85ieGmdq7FdPgJkdp7b4wYUqDk&usqp=CAU\" alt=\"\">\n         <h3>Receipt</h3>\n         <p>We provide receipt after confirmation of payment.</p>\n         <a href=\"#\" class=\"btn\">Read more</a>\n         </mat-card>\n       </div>\n  </div>\n  </div>\n  </section>\n\n  <section class=\"bg-white border-b py-8\">\n    <div class=\"container mx-auto flex flex-wrap pt-4 pb-12\">\n      <h2 class=\"w-full my-2 text-5xl font-bold leading-tight text-center text-gray-800\">\n        About us\n      </h2>\n      <div class=\"w-full mb-4\">\n        <div class=\"h-1 mx-auto gradient w-64 opacity-25 my-0 py-0 rounded-t\"></div>\n      </div>\n      <div class=\"w-full md:w-1/3 p-6 flex flex-col flex-grow flex-shrink\">\n        <div class=\"flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow\">\n          <a href=\"#\" class=\"flex flex-wrap no-underline hover:no-underline\">\n            <p class=\"w-full text-gray-600 text-xs md:text-sm px-6\">\n              Plants, simplified\n            </p>\n            <div class=\"w-full font-bold text-xl text-gray-800 px-6\">\n              Easy to plug\n            </div>\n            <p class=\"text-gray-800 text-base px-6 mb-5\">\n              Order plants ready to be placed in your home, office or garden. Just Unpack, Relax and Enjoy your green buddies\n            </p>\n          </a>\n        </div>\n        <div class=\"flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow p-6\">\n          <div class=\"flex items-center justify-start\">\n            <button class=\"mx-auto lg:mx-0 hover:underline gradient text-white font-bold rounded-full my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\n              Action\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"w-full md:w-1/3 p-6 flex flex-col flex-grow flex-shrink\">\n        <div class=\"flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow\">\n          <a href=\"#\" class=\"flex flex-wrap no-underline hover:no-underline\">\n            <p class=\"w-full text-gray-600 text-xs md:text-sm px-6\">\n              Secure Shipping\n            </p>\n            <div class=\"w-full font-bold text-xl text-gray-800 px-6\">\n              Fresh & Safe\n            </div>\n            <p class=\"text-gray-800 text-base px-6 mb-5\">\n              Our unique packaging will hold the plants in place and let the plant breathe so that it reaches you fresh without any mess.\n            </p>\n          </a>\n        </div>\n        <div class=\"flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow p-6\">\n          <div class=\"flex items-center justify-center\">\n            <button class=\"mx-auto lg:mx-0 hover:underline gradient text-white font-bold rounded-full my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\n              Action\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"w-full md:w-1/3 p-6 flex flex-col flex-grow flex-shrink\">\n        <div class=\"flex-1 bg-white rounded-t rounded-b-none overflow-hidden shadow\">\n          <a href=\"#\" class=\"flex flex-wrap no-underline hover:no-underline\">\n            <p class=\"w-full text-gray-600 text-xs md:text-sm px-6\">\n              Detailed Guidance\n            </p>\n            <div class=\"w-full font-bold text-xl text-gray-800 px-6\">\n              24x7 Guidance\n            </div>\n            <p class=\"text-gray-800 text-base px-6 mb-5\">\n              Get detailed plant care instructions from the website as well as real-time guidance from our Garden Experts on Whatsapp.\n            </p>\n          </a>\n        </div>\n        <div class=\"flex-none mt-auto bg-white rounded-b rounded-t-none overflow-hidden shadow p-6\">\n          <div class=\"flex items-center justify-end\">\n            <button class=\"mx-auto lg:mx-0 hover:underline gradient text-white font-bold rounded-full my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\n              Action\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n    \n\n\n\n\n\n\n\n\n\n    <!-- <footer id=\"sticky-footer\" class=\"flex-shrink-0 py-4 bg-dark text-white-50\">\n        <div class=\"container text-center\">\n          <small>Copyright &copy; Prakrtik</small>\n        </div>\n      </footer> -->\n      <footer id=\"sticky-footer\" class=\"bg-dark text-center text-white-50\">\n        <!-- Grid container -->\n        <div class=\"container p-4 pb-0\">\n          <!-- Section: Social media -->\n          <section class=\"mb-4\">\n            <!-- Facebook -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-facebook-f\"></i\n            ></a>\n      \n            <!-- Twitter -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-twitter\"></i\n            ></a>\n      \n            <!-- Google -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-google\"></i\n            ></a>\n      \n            <!-- Instagram -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-instagram\"></i\n            ></a>\n      \n            <!-- Linkedin -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-linkedin-in\"></i\n            ></a>\n      \n            <!-- Github -->\n            <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"\n              ><i class=\"fab fa-github\"></i\n            ></a>\n          </section>\n          <!-- Section: Social media -->\n        </div>\n        <!-- Grid container -->\n      \n        <!-- Copyright -->\n        <div class=\"text-center p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\n            Copyright &copy; Prakrtik\n          <!-- <a class=\"text-white\" href=\"https://mdbootstrap.com/\">MDBootstrap.com</a> -->\n        </div>\n        <!-- Copyright -->\n      </footer>\n</body>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {    \n  title = 'Learnzilla';\n\n  sellerData:any;\n  @Input() childMessage: Object;\n  parentUpdate(sellerData:any)\n  {\n    this.sellerData=sellerData;\n    console.warn(sellerData);\n  }\n}\n","\n\n<!-- <app-landingpage></app-landingpage> -->\n<router-outlet>\n    \n</router-outlet>  \n\n\n\n\n\n","import { ApiService } from 'src/app/services/api.service';\nimport { SellerhomepageComponent } from './../sellerhomepage/sellerhomepage.component';\nimport { SellerComponent } from './../seller/seller.component';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n\n\n@Component({\n  selector: 'app-productdetails',\n  templateUrl: './productdetails.component.html',\n  styleUrls: ['./productdetails.component.css']\n})\nexport class ProductdetailsComponent implements OnInit {\n\ndetails:any;\n\naddToCart() {\nthrow new Error('Method not implemented.');\n}\npageTitle: any=\"plant details\";\n\n\n\n\n\n\n  constructor(private service:ApiService) {\n    // this.details=this.service.getProductDetails();\n  }\n\n   //to call from service method\n\n  ngOnInit(): void {\n    this.service.getProductDetails().subscribe(val => this.details=val);\n    // console.warn(this.details);\n  }\n\n}\n","<div class=\"card\" >\n  \n  <div class=\"card-header\">\n    Featured\n  </div>\n  <img src=\"data:image/png;base64,{{details.productImage}}\"\n                  width=\"auto\" alt=\"Image\">\n                  \n\n    <div class=\"card-body\">\n      <div style=\"width: 30%; float:left\">\n        <p><mat-icon matTooltip=\"Price\">currency_rupee</mat-icon>&nbsp;&nbsp;{{details.productPrice}}/item</p>\n        <p><mat-icon matTooltip=\"Quantity of plant available\">production_quantity_limits</mat-icon>&nbsp;&nbsp;{{details.productsAvailable}}</p>\n        <p><mat-icon matTooltip=\"Plant name\">yard</mat-icon>&nbsp;&nbsp;{{details.productName}}</p>\n        <p><mat-icon matTooltip=\"Address of seller\">location_on</mat-icon>&nbsp;&nbsp;{{details.productAddress}}</p>\n     </div>\n     \n     <div style=\"width: 50%; float:right\">\n        <p><mat-icon matTooltip=\"Toxicity\">warning</mat-icon>&nbsp;&nbsp;{{details.toxicity}}</p>\n        <p><mat-icon matTooltip=\"Size of plant\">fullscreen</mat-icon>&nbsp;&nbsp;{{details.sizeOfProduct}}</p>\n        <p><mat-icon matTooltip=\"Sunlight requirement\">wb_sunny</mat-icon>&nbsp;&nbsp;{{details.sunlightRequirement}}</p>\n        <p><mat-icon matTooltip=\"Water requirement\">water_drop</mat-icon>&nbsp;&nbsp;{{details.waterRequirement}}</p>\n     </div> \n     \n          <!-- <div class=\"dropdown-menu\"> -->\n           \n              \n              \n              <!-- <button class=\"btn btn-primary\" (click)=\"addToCart()\">BuyNow</button> -->\n            \n          <!-- </div> -->\n         \n         \n          \n         \n  </div>\n  <ul>\n    <li><p><mat-icon matTooltip=\"Plant description\">description</mat-icon>&nbsp;&nbsp;{{details.description}}</p></li>\n  </ul>\n</div>\n<!-- \"plantsAvailable\": \"10\",\n    \"plantName\": \"neem\",\n    \"plantPrice\": \"140\",\n    \"plantsImage\": null,\n    \"plantAddress\": \"kdp\",\n    \"plantAge\": 12,\n    \"sizeOfPlant\": \"Medium\",\n    \"waterRequirement\": \"Twice a week\",\n    \"sunlightRequirement\": \"Full shade – Plants require less than 3 hours of direct sun per day\",\n    \"toxicity\": \"No\",\n    \"description\": \"it is a good pant\", -->\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\n\n\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n\n@Component({\n  selector: 'app-seller',\n  templateUrl: './seller.component.html',\n  styleUrls: ['./seller.component.css']\n})\nexport class SellerComponent implements OnInit {\n\n  @ViewChild('stepper') stepper: MatStepper;\n  productObject: PlantModel = new PlantModel();\n  profileFormGroup!: FormGroup;\n  files: any[] = [];\n  \n  \n  constructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router ){\n\n  }\n \n  ngOnInit(): void {\n   this.profileFormGroup= new FormGroup({\n    ownerEmailId:new FormControl(window.localStorage.getItem('loginEmail'),Validators.required),\n    shopName:new FormControl(\"\",Validators.required),\n    ownerContactNo:new FormControl(\"\",Validators.required),\n  productId:new FormControl(\"\"),\n  productsAvailable:new FormControl(\"\",Validators.required),\n  productName:new FormControl(\"\",Validators.required),\n  productPrice:new FormControl(\"\",Validators.required),\n  productAddress:new FormControl(\"\",Validators.required),\n  productImage:new FormControl(\"\"),\n  productAge:new FormControl(\"\",Validators.required),\n  sizeOfProduct:new FormControl(\"\",Validators.required),\n  waterRequirement:new FormControl(\"\",Validators.required),\n  sunlightRequirement:new FormControl(\"\",Validators.required),\n  toxicity:new FormControl(\"\",Validators.required),\n  description:new FormControl(\"\",Validators.required),\n   });\n      console.log(this.profileFormGroup.value);\n  }\n  OnSubmit(){\n    console.log('formValue', this.profileFormGroup.value);\n    this.productObject.productName = this.profileFormGroup.value.productName;\n    this.productObject.shopName = this.profileFormGroup.value.shopName;\n    this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n    this.productObject.ownerContactNo= this.profileFormGroup.value.ownerContactNo;\n    this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n    this.productObject.ownerEmailId= this.profileFormGroup.value.ownerEmailId;\n    this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n    this.productObject.productAge= this.profileFormGroup.value.productAge;\n    this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n    this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n    this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n    this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n    this.productObject.description= this.profileFormGroup.value.description;\n    this.productObject.productId=this.profileFormGroup.value.productId;\n\n    this.service.savePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n     this.notifierService.showNotification('Product Added Succesfully','OK')\n         this.profileFormGroup.reset();\n        \n         this.router.navigate(['/sellerhomepage/home']);\n    })\n    \n  }    \n\n  days: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\n\n  sunlightRequirement!: string;\n  parts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                  'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                  'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                  'Full shade – Plants require less than 3 hours of direct sun per day'];\n\n\n  sizeOfPlant!: string;\n  sizes:string[]=['Small','Medium','Big']\n\n  toxicity!:string;\n  results:string[]=['Yes','No']\n\n  urllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n\n// image input\n  onFileChanged(files) {\n    this.prepareFilesList(files);\n  }\n  prepareFilesList(files: Array<any>) {\n    for (const item of files) {\n      item.progress = 0;\n      this.files.push(item);\n    }\n    this.uploadFilesSimulator(0);\n  }\n  uploadFilesSimulator(index: number) {\n    setTimeout(() => {\n      if (index === this.files.length) {\n        return;\n      } else {\n        const progressInterval = setInterval(() => {\n          if (this.files[index].progress === 100) {\n            clearInterval(progressInterval);\n            this.uploadFilesSimulator(index + 1);\n          } else {\n            this.files[index].progress += 5;\n          }\n        }, 200);\n      }\n    }, 1000);\n  }\n  formatBytes(bytes, decimals) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n\n\n// onSubmit(){\n//   this.service.postProduct(this.profileFormGroup.value).subscribe({\n//     next:(res)=>{\n//       console.log(res);\n//       this.notifierService.showNotification('Product Added Succesfully','OK');\n//       this.profileFormGroup.reset();\n   \n//     },\n//     error:()=>{\n//       alert(\"error while adding the product\");\n//     }\n//   })\n// }\n\n}","<div class=\"container-fluid\">\n  <mat-horizontal-stepper >\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n         <mat-card class=\"profile\">\n              <mat-card-title>Profile of the Plants</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Profile</ng-template>\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Email Id</mat-label>\n                  <input\n                    matInput\n                    class=\"plantId w-100\"\n                    formControlName=\"ownerEmailId\"\n                    required\n                  /> </mat-form-field\n                >\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Shop Name</mat-label>\n                  <input\n                    matInput\n                    class=\"productId w-100\"\n                    formControlName=\"shopName\" required\n                    \n                  /> </mat-form-field\n                >\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Contact Number</mat-label>\n                  <input\n                    matInput\n                    class=\"productId w-100\"\n                    formControlName=\"ownerContactNo\" required\n                    \n                  /> </mat-form-field\n                >\n                \n                \n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Quantity(.in No's)</mat-label>\n                  <input\n                    matInput\n                    class=\"plantId w-100\"\n                    formControlName=\"productsAvailable\"\n                    required\n                  /> </mat-form-field\n                ><br />\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Product Name</mat-label>\n                  <input\n                    matInput\n                    formControlName=\"productName\"\n                    required\n                  /> </mat-form-field\n                ><br />\n              \n                <div class=\"img_container\">\n                  <div>\n                    <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                </div>\n                <div>\n                   \n                    <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                </div>\n                </div>\n                <mat-card-actions >\n                  <button\n                    mat-raised-button\n                    color=\"primary\"\n                    style=\"margin-left:600px\"\n                     matStepperNext\n                  >\n                    Next\n                  </button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n  \n        </mat-step>\n  \n        <!-------step 2----->\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n          <mat-card class=\"profile\">\n            <mat-card-title>Requirements of Product</mat-card-title>\n            <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n              <ng-template matStepLabel>Requirements</ng-template>\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Product Price</mat-label>\n                <input matInput type=\"number\" formControlName=\"productPrice\" [ngModel]=\"productPrice | currency\" required />\n                <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n              </mat-form-field>\n  \n              <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                <mat-label>Product Address</mat-label>\n                <input matInput formControlName=\"productAddress\" required />\n              </mat-form-field>\n  \n              <mat-form-field class=\"productage\" appearance=\"outline\">\n                <mat-label style=\"width:50%\">Product Age</mat-label>\n                <input matInput formControlName=\"productAge\" type=\"number\" required/>\n                <mat-hint [align]=\"'end'\">*Number of Days Old</mat-hint>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n              <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n              <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\" required>\n               <mat-option>--Select--</mat-option>\n               <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                {{day}}\n               </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n              <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\" required>\n               <mat-option>--Select--</mat-option>\n               <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                {{part}}\n               </mat-option>\n              </mat-select>\n            </mat-form-field>\n  \n            \n              <mat-card-actions>\n                <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n              </mat-card-actions>\n            </form>\n          </mat-card>\n        </mat-step>\n  \n        <!-----last step-->\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n          <mat-card class=\"profile\">\n            <mat-card-title>About Product</mat-card-title>\n            <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n              <ng-template matStepLabel>You are almost done....</ng-template>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\" required>\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-label id=\"toxicity\"\n                >State Whether the Product is toxic to pets, kids:\n              </mat-label>\n              <mat-radio-group\n                aria-labelledby=\"toxicity\"\n                formControlName=\"toxicity\"\n                class=\"example-radio-group\"\n                [(ngModel)]=\"toxicity\">\n                <mat-radio-button\n                  class=\"example-radio-button block\"\n                  *ngFor=\"let result of results\"\n                  [value]=\"result\"\n                  >\n                  {{ result }}\n                </mat-radio-button>\n              </mat-radio-group>\n  \n  \n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Description of the Product</mat-label>\n                <textarea\n                  matInput\n  \n                  rows=\"10\" col=\"50\"\n                  formControlName=\"description\" required\n                ></textarea>\n                <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n              </mat-form-field>\n            </form>\n            <mat-card-actions>\n              <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n              <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Submit</button>\n            </mat-card-actions>\n          </mat-card>\n        </mat-step>\n      </mat-horizontal-stepper>\n  \n  \n    </div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n//import { JwtRequest } from 'src/app/models/login/jwt-request';\nimport { UserDao } from 'src/app/models/login/user-dao';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  // baseUrl = \"http://localhost:8080\"\n  baseUrl = \"https://prakritik.stackroute.io\";\n\n\n  constructor(private httpClient: HttpClient) { }\n  loginUser(user: UserDao): Observable<Object> {\n    console.log(\"user\", user);\n    return this.httpClient.post(this.baseUrl + \"/authentication-service/validate\", user);\n  }\n  validate(user) {\n    return this.httpClient.get(this.baseUrl + \"/authentication-service/validate\", user)\n  }\n}\n","\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { NgModule } from \"@angular/core\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { HomeService } from './home.service';\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\nimport { FooterComponent } from \"./components/footer/footer.component\";\nimport { SellernavbarComponent } from \"./components/sellernavbar/sellernavbar.component\";\nimport { SellerhomepageComponent } from \"./components/sellerhomepage/sellerhomepage.component\";\nimport { SellerorderlistComponent } from \"./components/sellerorderlist/sellerorderlist.component\";\nimport { ProductdetailsComponent } from \"./components/productdetails/productdetails.component\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatStepperModule } from \"@angular/material/stepper\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { SellerComponent } from \"./components/seller/seller.component\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { ProfileUserComponent } from './components/profile-user/profile-user.component';\nimport { UpdateproductlistComponent } from './components/updateproductlist/updateproductlist.component';\nimport { CustomerhomepageComponent } from './customerhomepage/customerhomepage.component';\nimport { CustomerorderlistComponent } from './components/customerorderlist/customerorderlist.component';\nimport {MatListModule} from '@angular/material/list';\n//import {MatGridListModule} from '@angular/material/grid-list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatTabsModule} from '@angular/material/tabs';\n//import {NgxPaginationModule} from 'ngx-pagination';\nimport { MatTooltipModule } from '@angular/material/tooltip'; \n\n\nimport { RegisterUserComponent } from './components/register-user/register-user.component';\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { UserprofileComponent } from './components/userprofile/userprofile.component';\nimport { CusproductdetailsComponent } from './components/cusproductdetails/cusproductdetails.component';\nimport { LandingpageComponent } from './components/landingpage/landingpage.component';\nimport { SearchByNamePipe } from './search-by-name.pipe';\nimport { SeedslistComponent } from './components/seedslist/seedslist.component';\nimport { MedicinesComponent } from './components/medicines/medicines.component';\nimport { UpdateseedsComponent } from './components/updateseeds/updateseeds.component';\nimport { UpdatemedicinesComponent } from './components/updatemedicines/updatemedicines.component';\nimport { ProductImageComponent } from './product-image/product-image.component';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    FooterComponent,\n    SellernavbarComponent,\n    SellerhomepageComponent,\n    SellerComponent,\n    SellerorderlistComponent,\n    ProfileUserComponent,\n    CustomerorderlistComponent,\n    UpdateproductlistComponent,\n    CustomerhomepageComponent,\n    ProductdetailsComponent,\n    RegisterUserComponent,\n    UserprofileComponent,\n    CusproductdetailsComponent,\n    LandingpageComponent,\n    SearchByNamePipe,\n    SeedslistComponent,\n    MedicinesComponent,\n    UpdateseedsComponent,\n    UpdatemedicinesComponent,\n    ProductImageComponent,\n  \n  ],\n  imports: [\n    AppRoutingModule,\n    MatRadioModule,\n    MatCardModule,\n    MatIconModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatSliderModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatStepperModule,\n    FormsModule,\n    MatSelectModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatSnackBarModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    //MatGridListModule,\n   // NgxPaginationModule,\n    MatListModule,\n\n    \n    MatMenuModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatTabsModule,\n    MatNativeDateModule,\n    MatTooltipModule\n   // NgxPaginationModule, \n  ],\n  providers: [HomeService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export class UserDao {\n    email:string;\n    password:string;\n    userRole:string;\n    constructor(){}\n}\n","import { ProductdetailsComponent } from './../productdetails/productdetails.component';\nimport { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\nimport { SellerComponent } from '../seller/seller.component';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-sellerhomepage',\n  templateUrl: './sellerhomepage.component.html',\n  styleUrls: ['./sellerhomepage.component.css']\n})\nexport class SellerhomepageComponent implements OnInit {\n  dataSource !: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator !: MatPaginator ;\n  @ViewChild(MatSort) sort !: MatSort;\nplantmodels:string[];\nownerEmailId:string=window.localStorage.getItem('loginEmail')\n  constructor(private service:ApiService,private notifierService:NotifierService,private router:Router, private route: ActivatedRoute, private dialog: MatDialog, private http:HttpClient) {\n    this.plantmodels=[]\n   }\n  displayedColumns:string[]=['productsAvailable','productName','productPrice','productAddress','productAge','sizeOfProduct','action'];\n\n  ngOnInit(): void {\n    this.getAllProducts(this.ownerEmailId);\n  }\n  getAllProducts(ownerEmailId:string){\n    this.service.getProductListByownerEmailID(ownerEmailId).subscribe(res=>{\n     \n      this.plantmodels=res;\n      console.log(this.plantmodels)\n    })\n  }\n\n  deleteProduct(productId:string){\n    this.service.deleteProduct(productId).subscribe(()=>{\n      this.notifierService.showNotification('Product Deleted Succesfully','OK');\n    this.getAllProducts(this.ownerEmailId);\n      \n     //,error:()=>{\n    //    this.notifierService.showNotification('error while deleting the record','OK');\n    //  }\n  })\n    \n  location.reload();\n  }\n  // deleteProduct(productId:string){\n  //   this.http.delete(\"http://localhost:8082/api/v1//delete/\"+productId).subscribe(()=>{\n  //     this.notifierService.showNotification('Product deleted successfully','ok');\n  //   });\n  // }\n\n\n\n// display = false;\nopenDialog(productId:string) {\n\n  this.service.getProductById(productId);\n\n  const dialogConfig = new MatDialogConfig();\n\n  dialogConfig.disableClose = false;\n  dialogConfig.autoFocus = true;\n  // dialogConfig.maxHeight='90vh';\n  dialogConfig.maxWidth='60vh';\n\n  this.dialog.open(ProductdetailsComponent,dialogConfig);\n  \n\n\n}\n\n}\n","\n  <mat-card>\n    <mat-card-title>List of Your Products</mat-card-title><hr/>\n    <div class=\"card\" *ngFor=\"let plantmodel of plantmodels\">\n     \n      <div class=\"container\" style=\"width: 100%;\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <app-product-image [plantmodel]=\"plantmodel\" style=\"width:50px;height:50px;\"></app-product-image>\n      </div>\n      <div class=\"col\">\n      \n        <div style=\"font-weight: bold;font-size: medium; padding-bottom: 16px;margin-top:5px\">\n          Name of Product\n        </div>\n        {{plantmodel?.productName}}\n      </div>\n      <div class=\"col\">\n       \n        <div style=\"font-weight: bold;font-size: medium; padding-bottom: 16px;margin-top:5px\">\n          Quantity in No's\n        </div>\n        {{plantmodel?.productsAvailable}}\n      </div>\n      <div class=\"col\">\n       \n        <div style=\"font-weight: bold;font-size: medium; padding-bottom: 16px;margin-top:5px\">\n          Product Price\n        </div>\n        {{plantmodel?.productPrice}}/item\n      </div>\n      <div class=\"col\">\n        \n        <div style=\"font-weight: bold;font-size: medium; padding-bottom: 16px;margin-top:5px\">\n          Product Age\n        </div>\n        {{plantmodel?.productAge}}\n      </div>\n      <div class=\"col\">\n       \n        <div style=\"font-weight: bold;font-size: medium;padding-bottom: 16px;margin-top:5px\">\n          Product Address\n        </div>\n        {{plantmodel?.productAddress}}\n      </div>\n      <div class=\"col\">\n        \n        <div style=\"font-weight: bold;font-size: medium;padding-bottom: 16px;margin-top:5px\">\n          Size Of Product\n        </div>\n        {{plantmodel?.sizeOfProduct}}\n      </div>\n      <div class=\"col-2\">\n        <div style=\"font-weight: bold;font-size: medium;padding-bottom: 25px;margin-top:5px\">Actions</div>\n        <button mat-icon-button color=\"primary\" routerLink=\"/sellerhomepage/seller/update/{{plantmodel.productId}}\"><mat-icon>edit</mat-icon></button>\n        <button mat-icon-button color=\"warn\" (click)=\"deleteProduct(plantmodel.productId)\"><mat-icon>delete</mat-icon></button>\n        <button mat-icon-button color=\"accent\" mat-raised-button (click)=\"openDialog(plantmodel.productId)\"><mat-icon>info</mat-icon></button>\n      </div>\n\n     \n  </div>\n</div>\n</div>\n</mat-card>\n\n\n  \n\n   \n            \n\n           \n            ","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport {  Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  isExpanded: boolean = false;\n\n  constructor(private service:ApiService,private httpClient: HttpClient,private route:Router) { \n  }\n  emailid :string\n  \n  ngOnInit(): void {\n  \n    this.emailid=window.localStorage.getItem('loginEmail');\n    console.log(this.emailid);\n  }\n  LogOut(){\n    this.route.navigate(['/register']);\n    localStorage.clear();\n   }\n}\n","\n    \n    <mat-sidenav-container autosize>\n      <mat-sidenav #sidenav mode=\"side\" opened=\"isExpanded\">\n      \n    \n      \n        <button mat-button (click)=\"isExpanded = !isExpanded\" style=\"margin-top:15px;\">\n            <mat-icon mat-list-icon class=\"chevron-button\" [ngClass]=\"{ rotated: isExpanded }\">menu\n            </mat-icon>\n          </button><br/>\n          \n        \n            <button mat-button style=\"margin-top:30px;\" routerLink=\"/navbar/customerhomepage\">\n            <mat-icon mat-list-icon>home</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\" >Home</span>\n            </button><br/>\n        \n    \n      \n            <!-- <button mat-button style=\"margin-top:16px;\">\n              <mat-icon>shopping_cart</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\">Cart</span>\n            </button><br/> -->\n         \n        \n            <button mat-button style=\"margin-top:16px;\" routerLink=\"/navbar/customerorderlist\">\n            <mat-icon mat-list-icon>supervisor_account</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\">Order List</span>\n            </button><br/>\n         \n\n       \n            <button mat-button style=\"margin-top:16px;\" routerLink=\"/navbar/Editprofile\">\n            <mat-icon>create</mat-icon>\n            <span *ngIf=\"isExpanded\" class=\"menu-item\">Edit Profile</span>\n            </button><br/>\n         \n    \n        \n      </mat-sidenav>\n    \n      <!-- Content - rendered Content for the current router path into the <router-outlet>, e.g. /dashboard or /info-->\n       \n      <mat-sidenav-content>\n       \n        <mat-toolbar>\n             \n          \n            <span >Prakritik</span>\n            <span class=\"example-spacer\"></span>\n            \n            <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n              <mat-icon style=\"position:relative;right:5\">account_circle</mat-icon>\n            </button>\n              <span>\n              <div  style=\"margin-right:160px\">\n                <div class=\"card-header\" style=\"font-size:small\">{{emailid}}</div>\n                </div>\n              </span>\n             <mat-menu #menu=\"matMenu\">\n             <button mat-menu-item routerLink=\"/navbar/profile\">My Profile</button>\n            <button mat-menu-item (click)=\"LogOut()\">Log Out</button>\n            </mat-menu>\n         \n           </mat-toolbar>\n          \n        <router-outlet></router-outlet>\n        \n        \n      </mat-sidenav-content>\n    </mat-sidenav-container>\n    \n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { UserRegistration } from '../../models/register/user-registration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  // baseUrl = \"http://localhost:8080\" \n  baseUrl = \"https://prakritik.stackroute.io\";\n  \n\n  constructor(private httpClient: HttpClient) { }\n\n\n  registerUser(user: UserRegistration): Observable<Object> {\n    console.log(user);\n    return this.httpClient.post(this.baseUrl + \"/registration-service/api/v1/registeruser\", user);\n    \n  }\n\n\n  registerUserMySQL(user:UserRegistration): Observable<Object> {\n    console.log(user);\n    return this.httpClient.post(this.baseUrl+\"/authentication-service/create\",user);\n    \n  }\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlantModel } from 'src/app/plantmodel';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NotifierService } from 'src/app/services/notifier.service';\n@Component({\n  selector: 'app-updateproductlist',\n  templateUrl: './updateproductlist.component.html',\n  styleUrls: ['./updateproductlist.component.css']\n})\nexport class UpdateproductlistComponent implements OnInit {\n  @ViewChild('stepper') stepper: MatStepper;\n  productObject: PlantModel = new PlantModel();\n  profileFormGroup!: FormGroup;\n  files: any[] = [];\n  \n  constructor(private fb:FormBuilder,private service: ApiService,private notifierService: NotifierService,private router:Router,private route:ActivatedRoute ){\n  }\n  ngOnInit(): void {\n    this.profileFormGroup= new FormGroup({\n      ownerEmailId:new FormControl(window.localStorage.getItem['loginEmail'],Validators.required),\n      shopName:new FormControl(\"\",Validators.required),\n      ownerContactNo:new FormControl(\"\",Validators.required),\n    productId:new FormControl(\"\"),\n    productsAvailable:new FormControl(\"\",Validators.required),\n    productName:new FormControl(\"\",Validators.required),\n    productPrice:new FormControl(\"\",Validators.required),\n    productAddress:new FormControl(\"\",Validators.required),\n    productImage:new FormControl(\"\"),\n    productAge:new FormControl(\"\",Validators.required),\n    sizeOfProduct:new FormControl(\"\",Validators.required),\n    waterRequirement:new FormControl(\"\",Validators.required),\n    sunlightRequirement:new FormControl(\"\",Validators.required),\n    toxicity:new FormControl(\"\",Validators.required),\n    description:new FormControl(\"\",Validators.required),\n     });\n   this.service.getCurrentData(this.route.snapshot.params.id).subscribe((res)=>{\n    this.profileFormGroup=new FormGroup({\n      ownerEmailId:new FormControl(res['ownerEmailId']),\n      shopName:new FormControl(res['shopName']),\n      ownerContactNo:new FormControl(res['ownerContactNo']),\n      productsAvailable:new FormControl(res['productsAvailable']),\n      productName:new FormControl(res['productName']),\n      productPrice:new FormControl(res['productPrice']),\n      productImage:new FormControl(res['productImage']),\n      productAddress:new FormControl(res['productAddress']),\n      productAge:new FormControl(res['productAge']),\n      sizeOfProduct:new FormControl(res['sizeOfProduct']),\n      waterRequirement:new FormControl(res['waterRequirement']),\n      sunlightRequirement:new FormControl(res['sunlightRequirement']),\n      toxicity:new FormControl(res['toxicity']),\n      description:new FormControl(res['description'])\n    })\n    })\n  }\n  // OnSubmit(){\n  //   console.log('formValue', this.profileFormGroup.value);\n  //   this.productObject.productName = this.profileFormGroup.value.productName;\n  //   this.productObject.productsAvailable = this.profileFormGroup.value.productsAvailable;\n  //   this.productObject.productPrice = this.profileFormGroup.value.productPrice;\n  //   this.productObject.sellerEmailId= this.profileFormGroup.value.sellerEmailId;\n  //   this.productObject.productAddress= this.profileFormGroup.value.productAddress;\n  //   this.productObject.productAge= this.profileFormGroup.value.productAge;\n  //   this.productObject.sizeOfProduct= this.profileFormGroup.value.sizeOfProduct;\n  //   this.productObject.waterRequirement= this.profileFormGroup.value.waterRequirement;\n  //   this.productObject.sunlightRequirement= this.profileFormGroup.value.sunlightRequirement;\n  //   this.productObject.toxicity= this.profileFormGroup.value.toxicity;\n  //   this.productObject.description= this.profileFormGroup.value.description;\n  //   this.productObject.productId=this.profileFormGroup.value.productId;\n  //   this.service.updatePlantModel(this.productObject, this.files[0]).subscribe((result) => {\n  //     console.warn(\"result is here\", result)\n  //        this.profileFormGroup.reset();\n  //        this.router.navigate(['/home']);\n  //   })\n  // }\n  days: string[] = ['Once a week', 'Twice a week', 'Thrice a week', 'Everyday'];\n  sunlightRequirement!: string;\n  parts:string[]=['Full sun - Plants need at least 6 hours of direct sun daily',\n                  'Part sun – Plants thrive with between 3 and 6 hours of direct sun per day',\n                  'Part shade – Plants require between 3 and 6 hours of sun per day, but need protection from intense mid-day sun',\n                  'Full shade – Plants require less than 3 hours of direct sun per day'];\n  sizeOfPlant!: string;\n  sizes:string[]=['Small','Medium','Big']\n  toxicity!:string;\n  results:string[]=['Yes','No']\n  urllink : string= 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnbY-fLcMMqyKqZ8kBk9vTtboqfE_mvHAzbyoWvi39-Bz5P0LlBU7_FtB6iFCzGWM6rEo&usqp=CAU';\n  onFileChanged(files) {\n    this.prepareFilesList(files);\n  }\n  prepareFilesList(files: Array<any>) {\n    for (const item of files) {\n      item.progress = 0;\n      this.files.push(item);\n    }\n    this.uploadFilesSimulator(0);\n  }\n  uploadFilesSimulator(index: number) {\n    setTimeout(() => {\n      if (index === this.files.length) {\n        return;\n      } else {\n        const progressInterval = setInterval(() => {\n          if (this.files[index].progress === 100) {\n            clearInterval(progressInterval);\n            this.uploadFilesSimulator(index + 1);\n          } else {\n            this.files[index].progress += 5;\n          }\n        }, 200);\n      }\n    }, 1000);\n  }\n  formatBytes(bytes, decimals) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\nOnSubmit(){\n  this.service.putProduct(this.profileFormGroup.value,this.route.snapshot.params.id).subscribe((res=>{\n    this.notifierService.showNotification('Product Data Updated succesfully','OK'),\n    this.router.navigate(['/sellerhomepage/home'])\n  }))\n}\n}","<div class=\"container-fluid\">\n  <mat-horizontal-stepper >\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n         <mat-card class=\"profile\">\n              <mat-card-title>Profile of the Plants</mat-card-title>\n              <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n                <ng-template matStepLabel>Profile</ng-template>\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Email Id</mat-label>\n                  <input\n                    matInput\n                    class=\"plantId w-100\"\n                    formControlName=\"ownerEmailId\"\n                    required\n                  /> </mat-form-field\n                >\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Shop Name</mat-label>\n                  <input\n                    matInput\n                    class=\"productId w-100\"\n                    formControlName=\"shopName\" required\n                    \n                  /> </mat-form-field\n                >\n\n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Contact Number</mat-label>\n                  <input\n                    matInput\n                    class=\"productId w-100\"\n                    formControlName=\"ownerContactNo\" required\n                    \n                  /> </mat-form-field\n                >\n                \n                \n                <mat-form-field appearance=\"outline\" >\n                  <mat-label>Quantity(.in No's)</mat-label>\n                  <input\n                    matInput\n                    class=\"plantId w-100\"\n                    formControlName=\"productsAvailable\"\n                    required\n                  /> </mat-form-field\n                ><br />\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Product Name</mat-label>\n                  <input\n                    matInput\n                    formControlName=\"productName\"\n                    required\n                  /> </mat-form-field\n                ><br />\n              \n                <div class=\"img_container\">\n                  <div>\n                    <label for=\"choose-file\" style=\"color:#089975\">Upload Product Images</label>\n                </div>\n                <div>\n                   \n                    <input type=\"file\" id=\"choose-file\" size=\"80\" multiple formControlName=\"productImage\" (change)=\"onFileChanged($event.target.files)\" #fileInput required>\n                </div>\n                </div>\n                <mat-card-actions >\n                  <button\n                    mat-raised-button\n                    color=\"primary\"\n                    style=\"margin-left:600px\"\n                     matStepperNext\n                  >\n                    Next\n                  </button>\n                </mat-card-actions>\n              </form>\n            </mat-card>\n  \n        </mat-step>\n  \n        <!-------step 2----->\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\"> \n          <mat-card class=\"profile\">\n            <mat-card-title>Requirements of Product</mat-card-title>\n            <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n              <ng-template matStepLabel>Requirements</ng-template>\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Product Price</mat-label>\n                <input matInput type=\"number\" formControlName=\"productPrice\" [ngModel]=\"productPrice | currency\" required />\n                <mat-hint [align]=\"'end'\">*Enter in Numbers</mat-hint>\n              </mat-form-field>\n  \n              <mat-form-field style=\"margin-top: 7px\" appearance=\"outline\">\n                <mat-label>Product Address</mat-label>\n                <input matInput formControlName=\"productAddress\" required />\n              </mat-form-field>\n  \n              <mat-form-field class=\"productage\" appearance=\"outline\">\n                <mat-label style=\"width:50%\">Product Age</mat-label>\n                <input matInput formControlName=\"productAge\" type=\"number\" required/>\n                <mat-hint [align]=\"'end'\">*Number of Days Old</mat-hint>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n              <mat-label for=\"waterRequirement\">Water Requirement for the Product</mat-label>\n              <mat-select name=\"waterRequirement\" id=\"waterRequirement\" formControlName=\"waterRequirement\" required>\n               <mat-option>--Select--</mat-option>\n               <mat-option *ngFor=\"let day of days\" [value]=\"day\">\n                {{day}}\n               </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label for=\"sunlightRequirement\">Sunlight Requirement for the Product</mat-label>\n              <mat-select name=\"sunlightRequirement\" id=\"sunlightRequirement\" formControlName=\"sunlightRequirement\" required>\n               <mat-option>--Select--</mat-option>\n               <mat-option *ngFor=\"let part of parts\"[value]=\"part\">\n                {{part}}\n               </mat-option>\n              </mat-select>\n            </mat-form-field>\n  \n            \n              <mat-card-actions>\n                <button mat-raised-button color=\"primary\" id=\"previous\" style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n                <button mat-raised-button id=\"next\" color=\"primary\"  style=\"margin-left:540px\"     matStepperNext>Next</button>\n              </mat-card-actions>\n            </form>\n          </mat-card>\n        </mat-step>\n  \n        <!-----last step-->\n        <mat-step [stepControl]=\"profileFormGroup\" completed=\"false\">\n          <mat-card class=\"profile\">\n            <mat-card-title>About Product</mat-card-title>\n            <form *ngIf=\"profileFormGroup\" [formGroup]=\"profileFormGroup\">\n              <ng-template matStepLabel>You are almost done....</ng-template>\n              <mat-form-field appearance=\"outline\">\n                <mat-label for=\"sizeOfPlant\">Size of the Product</mat-label>\n                <mat-select name=\"sizeOfProduct\" id=\"sizeOfProduct\" formControlName=\"sizeOfProduct\" required>\n                 <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\n                  {{size}}\n                 </mat-option>\n                </mat-select>\n              </mat-form-field>\n    \n              <mat-label id=\"toxicity\"\n                >State Whether the Product is toxic to pets, kids:\n              </mat-label>\n              <mat-radio-group\n                aria-labelledby=\"toxicity\"\n                formControlName=\"toxicity\"\n                class=\"example-radio-group\"\n                [(ngModel)]=\"toxicity\">\n                <mat-radio-button\n                  class=\"example-radio-button block\"\n                  *ngFor=\"let result of results\"\n                  [value]=\"result\"\n                  >\n                  {{ result }}\n                </mat-radio-button>\n              </mat-radio-group>\n  \n  \n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Description of the Product</mat-label>\n                <textarea\n                  matInput\n  \n                  rows=\"10\" col=\"50\"\n                  formControlName=\"description\" required\n                ></textarea>\n                <mat-hint [align]=\"'end'\">Max 255 characters</mat-hint>\n              </mat-form-field>\n            </form>\n            <mat-card-actions>\n              <button mat-raised-button id=\"back\" color=\"primary\"  style=\"margin-left:5px\"   matStepperPrevious>Back</button>\n              <button mat-raised-button class=\"submit\" color=\"primary\" style=\"margin-left:530px\"  (click)=\"OnSubmit()\">Update</button>\n            </mat-card-actions>\n          </mat-card>\n        </mat-step>\n      </mat-horizontal-stepper>\n  \n  \n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-cusproductdetails',\n  templateUrl: './cusproductdetails.component.html',\n  styleUrls: ['./cusproductdetails.component.css']\n})\nexport class CusproductdetailsComponent implements OnInit {\n[x: string]: any;\n\n  constructor(public service:ApiService) { }\n  details:any;\n  \n  //  wnd = window.open(\"about:blank\", \"\");\n   wnd:any;\n  ngOnInit(): void {\n    this.service.getProductDetails().subscribe(val => {this.details=val});\n  }\n  buyNow(){\n    // this.wnd = window.open(\"about:blank\", \"\");\n    // this.service.getPaymentPage().subscribe(val => console.warn(val));\n    // this.service.postPaymentPage(this.details);\n      // this.service.postProduct(this.data);\n      window.open(\"https://prakritik.stackroute.io/payment-service/\"+this.details.productPrice+\"/\"+this.details.productName+\"/\"+this.details.productId);\n      console.log(this.details);\n    }\n}\n// {\n//   \"orderId\": \"120\",\n//   \"customerName\": \"Mohan\",\n//   \"productName\": \"Rose\",\n//   \"productPrice\": \"150\",\n//   \"customerEmailId\": \"abc@gmail.com\",\n//   \"ownerName\": \"Raju\",\n//   \"ownerEmailId\": \"raju@gmail.com\",\n//   \"ownerAddress\": \"MUMBAI\",\n//   \"orderDate\": \"13/11/2022\",\n//   \"Quantity\": \"2\",\n//   \"ownerContactNo\": \" 8574963223\",\n//   \"customerContactNo\": \"9504642479\"\n// }","<div class=\"card\" >\n  \n    <div class=\"card-header\">\n      Featured\n    </div>\n    <img src=\"data:image/png;base64,{{details.productImage}}\"\n                    style=\"width: auto; height: 300px;\" alt=\"Image\">\n                    <!-- <app-product-image [plantmodel]=\"plantmodel\"></app-product-image> -->\n                    <div class=\"card-body\">\n                      <div style=\"width: 30%; float:left\">\n                            <p><mat-icon matTooltip=\"Price\">currency_rupee</mat-icon>&nbsp;&nbsp;{{details.productPrice}}/item</p>\n                            <p><mat-icon matTooltip=\"Quantity of plant available\">production_quantity_limits</mat-icon>&nbsp;&nbsp;{{details.productsAvailable}}</p>\n                            <p><mat-icon matTooltip=\"Plant name\">yard</mat-icon>&nbsp;&nbsp;{{details.productName}}</p>\n                            <p><mat-icon matTooltip=\"Address of seller\">location_on</mat-icon>&nbsp;&nbsp;{{details.productAddress}}</p>\n                     </div>\n                     <div style=\"width: 50%; float:right\">\n                      <p><mat-icon matTooltip=\"Toxicity\">warning</mat-icon>&nbsp;&nbsp;{{details.toxicity}}</p>\n                      <p><mat-icon matTooltip=\"Size of plant\">fullscreen</mat-icon>&nbsp;&nbsp;{{details.sizeOfProduct}}</p>\n                      <p><mat-icon matTooltip=\"Sunlight requirement\">wb_sunny</mat-icon>&nbsp;&nbsp;{{details.sunlightRequirement}}</p>\n                      <p><mat-icon matTooltip=\"Water requirement\">water_drop</mat-icon>&nbsp;&nbsp;{{details.waterRequirement}}</p>\n                     </div>            \n    </div>\n    <ul>\n      <li><p><mat-icon matTooltip=\"Plant description\">description</mat-icon>&nbsp;&nbsp;{{details.description}}</p></li>\n    </ul>\n    <button class=\"btn btn-primary\" (click)=\"buyNow()\">PayNow</button>\n  </div>","import { CusproductdetailsComponent } from './../components/cusproductdetails/cusproductdetails.component';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-customerhomepage',\n  templateUrl: './customerhomepage.component.html',\n  styleUrls: ['./customerhomepage.component.css']\n})\nexport class CustomerhomepageComponent implements OnInit {\n  \n  cards: any;\n  \n\n  constructor(private service:ApiService,private httpClient: HttpClient, private dialog: MatDialog) { \n    this.cards=[];\n  }\n  ids:any;\n  public plant; \n  public psearch:string='';\n  ngOnInit(): void {\n    // this.retrivedImage='data:image/jpg;base64,'+this.plantModel.productImage;\n   this.getAllProducts();\n    // this.service.getProduct().subscribe(data=>{\n    //   this.plant=data;\n    // })\n  }\n  \n  getAllProducts(){\n    this.service.getProduct().subscribe({next:(response)=>this.cards=response});\n  }\n    openDialog(productId:string) {\n    \n      this.service.getProductById(productId);\n      const dialogConfig = new MatDialogConfig();\n    \n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      // dialogConfig.maxHeight='90vh';\n      dialogConfig.maxWidth='60vh';\n    \n    \n      this.dialog.open(CusproductdetailsComponent,dialogConfig);\n    }\n}\n","<!--HOME section start-->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css\">\n<div>\n\n <section class=\"home\" id=\"home\">\n  \n  <div class=\"content\">\n    <h3>Fresh and <span>Organic</span> Products For You</h3>\n    <p style=\"font-weight: bold; font-size: 22px;\">Keeping indoor plants has become a trend nowadays. Buy Cactus and Succulents online from Nurserylive at lowest price. Exciting Gifts & more. Get 6 Plants Free Buy Now. Diwali Offers. Shop Now. Plants worth ₹ 1500 Free. Types: Get 6 Plants Free, Diwali Offers.</p>\n    <!-- <a href=\"#\" class=\"btn\">Shop now </a> -->\n      <!-- <form class=\"d-flex\">\n              <input\n                class=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n        \n              <button type=\"button\" class=\"btn btn-search\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  fill=\"white\"\n                  class=\"bi bi-search\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path\n                    d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"\n                  ></path>\n                </svg>\n              </button>\n            </form> -->\n            <div class=\"search-hero\"style=\"justify-content: center;\">\n              <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"psearch\" autocomplete=\"off\" placeholder=\"&#61442;   Start searching for a products\" style=\"width: 700px; margin-left: 300px;  \" >\n            </div>\n    \n  \n  </div>\n</section>\n \n<!--HOME section End-->\n\n\n\n<!--product section start-->\n\n<h1 class=\"heading\"> Our <span>Products</span></h1>\n\n     <div class=\"container\" *ngFor=\"let plantmodel of cards | searchByName: psearch\" style=\"height: 20rem; margin-left: 20px;display: inline-block;justify-content: space-between; width: 300px;padding-top: 3%;\" (click)=\"openDialog(plantmodel.productId)\">\n      <mat-card class=\"card-body\" style=\"width: 300px;margin-top: 10px;\">\n              \n        <!-- <img (click)=\"openDialog(card.id)\" style=\"height: 200px ;width: 200px;\" src=\"assets/images/sunflower1.jpg\" alt=\"Plant_Image\" class=\"card-img-bottom \">             -->\n        <!-- <img (click)=\"openDialog(card.id)\"[src]=\"retrivedImage\" alt=\"Plant_Image\" style=\"height: 200px ;width: 200px;\"> -->\n        <app-product-image [plantmodel]=\"plantmodel\"></app-product-image>\n  <p style=\"font-weight: bold;\" ><mat-icon>shop</mat-icon> {{plantmodel.productName}}</p>\n  \n  <p  >{{plantmodel.description}}</p> \n  <p style=\"font-weight: bold;\">&#8377;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{plantmodel.productPrice}}</p> \n  \n  <a href=\"#\" class=\"btn\">Buy Now</a>\n\n\n  </mat-card>\n  \n  </div>\n<!--Features section start-->\n\n<!-- <section class=\"features\" id=\"features\">\n\n  <h1 class=\"heading\"> Our <span>Features</span></h1>\n\n  <div class=\"box-container\">\n\n<div class=\"row\">\n  \n\n\n    <div class=\"box col-4\">\n      <mat-card>\n      <img src=\"/assets/feature-img-1.png\" alt=\"\">\n      <h3>Fresh And Organic</h3>\n      <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil facilis minus hic porro voluptas beatae praesentium ipsa vero at .</p>\n      <a href=\"#\" class=\"btn\">Read more</a>\n    </mat-card>\n    </div>\n  \n\n\n  <div class=\"box col-4\">\n    <mat-card>\n    <img src=\"/assets/feature-img-2.png\" alt=\"\">\n    <h3>Free Delivary</h3>\n    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil facilis minus hic porro voluptas beatae praesentium ipsa vero at .</p>\n    <a href=\"#\" class=\"btn\">Read more</a>\n  </mat-card>\n  </div>\n\n  <div class=\"box col-4\">\n    <mat-card>\n    <img src=\"/assets/feature-img-3.png\" alt=\"\">\n    <h3>Easy Payment</h3>\n    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nihil facilis minus hic porro voluptas beatae praesentium ipsa vero at .</p>\n    <a href=\"#\" class=\"btn\">Read more</a>\n  </mat-card>\n  </div>\n</div>\n</div>\n</section> -->\n\n<!--Features section End-->\n\n<!--product section start-->\n\n<!-- <h1 class=\"heading\"> Our <span>Products</span></h1>\n\n     <div class=\"container\" *ngFor=\"let card of cards\" style=\"height: 20rem; margin-left: 20px;display: inline-block;justify-content: space-between; width: 300px;padding-top: 3%;\">\n      <mat-card class=\"card-body\" style=\"width: 300px;margin-top: 10px;\">\n              \n        <img (click)=\"openDialog(card.id)\" style=\"height: 200px ;width: 200px;\" src=\"assets/images/sunflower1.jpg\" alt=\"Plant_Image\" class=\"card-img-bottom \">            \n    \n  <p  style=\"font-size:small\"><mat-icon>speaker_group</mat-icon> {{card.productName}}</p>\n  <p style=\"font-size:small\">&#8377;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{card.productPrice}}</p> \n  <p  style=\"font-size:small\">{{card.description}}</p> \n  <p  style=\"font-size:small\">{{card.productAge}}</p>\n  \n  <a href=\"#\" class=\"btn\">Buy Now </a>\n\n\n  </mat-card>\n  </div> -->\n\n  \n  \n\n\n<!--product section end-->\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { of } from 'rxjs';\nimport { ApiService } from 'src/app/services/api.service';\n\n\n\n@Component({\n  selector: 'app-customerorderlist',\n  templateUrl: './customerorderlist.component.html',\n  styleUrls: ['./customerorderlist.component.css']\n})\nexport class CustomerorderlistComponent implements OnInit {\n  orderedData:any;\n  cards:any;\n  orderList:any;\n  customerEmailId:string=window.localStorage.getItem('loginEmail');\n  \nproductId:string;\n  constructor(private httpClient: HttpClient, private _snackBar: MatSnackBar,private service:ApiService) {\n    this.orderList=[];\n    this.cards=[];\n    this.orderedData=[];\n\n   }\n  //  for (var index in imageList) {\n  //   console.log(val); // prints values: 10, 20, 30, 40\n  // }\n\n  ngOnInit(): void {\n  this.getorderList(this.customerEmailId);\n  this.getAllProducts(this.productId);\n  }\n\n  getorderedData(orderId:string){\n      this.service.getOrderedlistByorderId(orderId).subscribe((result:any)=>{\n        this.orderedData=result;\n         console.log(result);\n      })\n  }\n\n//  this.service.testCallback.subscribe(this.request, this.success(r), this.error());\n\n  getorderList(customerEmailId:string){\n    this.service.getOrderedlist(customerEmailId).subscribe((result:any)=>{\n      \n      this.orderList=result;\n    }, this.callImage\n    \n    )\n       //console.log(this.image(result[0].productId));    \n   \n  }\n\n  callImage(){\n    this.orderList.forEach(function (value) {\n      console.log(value.productId);\n\n//    // this.image(value.productId);\n//     // this.service.getPictureById(value.productId).subscribe((res:any)=>{\n//     //   value.image = res.productImage;\n//     //   console.log(value);\n//     // })\n\n      localStorage.setItem(\"productId\",value.productId);\n });\n\n  }\n\n//   image(value:any) {\n//     this.service.getPictureById(value).subscribe((res:any)=>{\n//          //  value.image = res.productImage;\n//            console.log(res.productImage);\n//          }) \n//  }\n  \n  // getImage(productId:string){\n  //   this.service.getCurrentData(productId).subscribe((result:any)=>{\n  //     this.cards=result;\n  //     console.log(result);\n  //   })\n  // }\n\n  getAllProducts(productId:string){\n    this.service.getPictureById(productId).subscribe((res:any)=>{\n      console.log(res);\n      this.cards=res;\n    })\n  }\n\n\n \n  CancelOrderById(orderId:string, message: string, action: string){\n    this.service.CancelOrder(this.orderedData,orderId).subscribe((result:any)=>{\n\n      console.log(result);\n      message='Order Cancelled',\n      action='Successfully done !!'\n      this._snackBar.open(message, action);\n\n    })\n    \n    location.reload();\n  }\n}\n\nfunction mergeMap(arg0: (res2: any) => any): null {\n  throw new Error('Function not implemented.');\n}\n","<div class=\"container\" style=\"margin-top: 70px;  margin-left: 150px;\" >\n       \n    <div class=\"text\" style=\" font-weight: bold; width:20rem;height: 30px; margin-left: 20px;  color: rgb(9, 1, 1);\"><h1 class=\"text\" style=\"font-weight:bold ;color: rgb(187, 208, 212);\">Booking History</h1></div>\n<div class=\"card-text-center\" *ngFor=\"let OrderDetails of orderList\" style=\" padding-bottom: 1%;\">\n <mat-card class=\"card-body\">\n  \n   <div class=\"row\" style=\"width:66rem; display: block; height: 20rem;\">\n      \n           <div  fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px;display: inline-block; float: left;\" >                 \n              <img style=\"height: 300px ;\" src=\"https://us.123rf.com/450wm/fillvector/fillvector2005/fillvector200503920/fillvector200503920.jpg?ver=6\" alt=\"Plant_Image\" class=\"card-img-bottom \"> \n        \n              <!-- <app-product-image [plantmodel]=\"plantmodel\"></app-product-image> -->\n           </div>\n\n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px; display: inline-block; float: inline-start;\">\n          \n               \n                   <div class=\"card-header\" style=\"margin-top:10px ;\"><mat-icon>spa</mat-icon>&nbsp;&nbsp;{{OrderDetails?.productName}}</div>\n                   <div class=\"card-body\">                         \n                       <p><mat-icon>person</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerName}}</p>\n                       <p><mat-icon>loupe</mat-icon> Quantity:&nbsp;&nbsp;{{OrderDetails?.Quantity}}</p>\n                       <p>&#8377;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{OrderDetails?.productPrice}}&nbsp;/item</p>\n                       <p><mat-icon>contact_support</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderStatus}}</p>\n                       <p><mat-icon>mail_outline</mat-icon>&nbsp;&nbsp;{{OrderDetails?.customerEmailId}}</p>\n                       <p><mat-icon>calendar_today</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderDate}} &nbsp;&nbsp;&nbsp;\n                           <button mat-stroked-button (click)=\"CancelOrderById(OrderDetails.orderId, message , action)\">Cancel Order</button></p>\n\n                   </div>                       \n                \n           </div>\n\n           <div fxLayout=\"column\" class=\"col-4\" style=\"width:20rem ;height: 20rem; margin-left: 20px;display: inline-block; float: inline-end;\">\n              \n                   <div class=\"card-header\"><mat-icon>person</mat-icon>&nbsp;&nbsp; Shop Name</div>\n                   <div class=\"card-body\" >\n                       <h5 class=\"card-title\">Special service Available</h5>\n                       <p><mat-icon>store alt</mat-icon>&nbsp;&nbsp;{{OrderDetails?.shopName}}</p>\n                       <p><mat-icon>mail_outline</mat-icon>&nbsp;&nbsp;{{OrderDetails?.ownerEmailId}}</p>\n                       <p><mat-icon>call</mat-icon>&nbsp;&nbsp;{{OrderDetails?.ownerContactNo}}</p>\n                       <p><mat-icon>#picker</mat-icon>&nbsp;&nbsp;{{OrderDetails?.orderId}}</p>\n                       <p><mat-icon>room</mat-icon>&nbsp;&nbsp;{{OrderDetails?.ownerAddress}}</p> \n                   </div>  \n              \n           </div>\n        \n   </div>\n    \n </mat-card> \n</div> \n\n</div>","import { CustomerhomepageComponent } from './customerhomepage/customerhomepage.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerorderlistComponent } from './components/customerorderlist/customerorderlist.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProfileUserComponent } from './components/profile-user/profile-user.component';\nimport { RegisterUserComponent } from './components/register-user/register-user.component';\nimport { SellerComponent } from './components/seller/seller.component';\nimport { SellerhomepageComponent } from './components/sellerhomepage/sellerhomepage.component';\nimport { SellernavbarComponent } from './components/sellernavbar/sellernavbar.component';\nimport { SellerorderlistComponent } from './components/sellerorderlist/sellerorderlist.component';\nimport { UpdateproductlistComponent } from './components/updateproductlist/updateproductlist.component';\nimport { UserprofileComponent } from './components/userprofile/userprofile.component';\nimport { SeedslistComponent } from './components/seedslist/seedslist.component';\nimport { MedicinesComponent } from './components/medicines/medicines.component';\nimport { LandingpageComponent } from './components/landingpage/landingpage.component';\n\n\nconst routes: Routes = [\n   {path: 'register', component: RegisterUserComponent},\n{path:'', component:LandingpageComponent},\n   \n  {\n  path: 'sellerhomepage',\n  component: SellernavbarComponent,\n  children : [\n{path: 'home', component: SellerhomepageComponent\n},\n{path: 'Editprofile', component: ProfileUserComponent\n},\n{\n  path: 'seller', component: SellerComponent\n},\n{\n  path: 'seedslist', component: SeedslistComponent\n},\n{\n  path: 'medicines', component: MedicinesComponent\n},\n{\n  path: 'orderList', component: SellerorderlistComponent\n},\n{\n  path: 'seller/update/:id', component: UpdateproductlistComponent\n},\n{\n  path: 'profile', component: UserprofileComponent\n},\n{\n  path: 'custhome', component: CustomerhomepageComponent\n}\n]\n},\n{\n  path: 'navbar', component: NavbarComponent,\n  children: [\n    {\n      path: 'customerhomepage', component: CustomerhomepageComponent\n    },\n    {\n      path: 'customerorderlist', component: CustomerorderlistComponent\n    },\n    {path: 'Editprofile', component: ProfileUserComponent\n},\n{\n  path: 'profile', component: UserprofileComponent\n},\n  ]\n},\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}